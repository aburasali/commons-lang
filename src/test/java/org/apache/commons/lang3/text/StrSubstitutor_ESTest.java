/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 02:28:13 GMT 2019
 */

package org.apache.commons.lang3.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import org.apache.commons.lang3.text.StrLookup;
import org.apache.commons.lang3.text.StrMatcher;
import org.apache.commons.lang3.text.StrSubstitutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrSubstitutor_ESTest extends StrSubstitutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrSubstitutor strSubstitutor1 = new StrSubstitutor();
      strSubstitutor1.setEnableSubstitutionInVariables(true);
      strSubstitutor0.replace((CharSequence) "2 EBL04<tE_NW");
      strSubstitutor0.setEnableSubstitutionInVariables(true);
      StringBuffer stringBuffer0 = new StringBuffer("M?Y,H'a?L`3)esdWK");
      strSubstitutor1.replace(stringBuffer0, 1, 1);
      strSubstitutor0.setVariablePrefix("2 EBL04<tE_NW");
      // Undeclared exception!
      try { 
        strSubstitutor0.replaceIn(stringBuffer0, 3254, 3254);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      StrSubstitutor.replaceSystemProperties(object0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object1 = new Object();
      hashMap0.put("java.lang.Object@0000000003", object1);
      StrSubstitutor.replace((Object) "java.lang.Object@0000000003", (Map<String, Object>) hashMap0);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "java.lang.Object@0000000003", "java.lang.Object@0000000003", 'k');
      strSubstitutor0.replace("java.lang.Object@0000000003");
      strSubstitutor0.replace((Object) null);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      strSubstitutor0.replaceIn(stringBuilder0);
      strSubstitutor0.setPreserveEscapes(false);
      strSubstitutor0.replaceIn(stringBuilder0);
      strSubstitutor0.isPreserveEscapes();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter((String) null);
      Properties properties0 = new Properties();
      properties0.propertyNames();
      StrSubstitutor.replace(object0, properties0);
      strSubstitutor0.replace((Object) strSubstitutor1);
      strSubstitutor0.replace("");
      strSubstitutor1.replace("java.lang.Object@0000000003", 0, 0);
      Object object2 = new Object();
      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
      StrSubstitutor.replace(object2, (Map<String, Integer>) hashMap1, "|L3L)XZm9|JAO", "Variable suffix must not be null.");
      strSubstitutor1.replace("java.lang.Object@0000000003", 5, 0);
      // Undeclared exception!
      try { 
        strSubstitutor0.setVariableSuffix((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable suffix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, "CC*MY+S");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "CC*MY+S", "CC*MY+S", '-', "CC*MY+S");
      hashMap0.put("%Kp,", "CC*MY+S");
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix('-');
      strSubstitutor1.setVariableSuffix('X');
      StrSubstitutor.replaceSystemProperties((Object) null);
      StringBuffer stringBuffer0 = new StringBuffer("IZ;&A2");
      stringBuffer0.append((-1));
      strSubstitutor1.replace(stringBuffer0);
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariableSuffix('0');
      StrSubstitutor strSubstitutor3 = strSubstitutor0.setValueDelimiter('0');
      strSubstitutor0.replace((CharSequence) null, 13, (int) '$');
      strSubstitutor3.replace((String) null);
      strSubstitutor1.setVariablePrefix('5');
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "IZ;&A2");
      stringBuilder0.reverse();
      strSubstitutor2.replaceIn(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      StrSubstitutor.replaceSystemProperties(object0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object1 = new Object();
      hashMap0.put("java.lang.Object@0000000003", object1);
      StrSubstitutor.replace((Object) "java.lang.Object@0000000003", (Map<String, Object>) hashMap0);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "java.lang.Object@0000000003", "java.lang.Object@0000000003", 'k');
      StrSubstitutor.replaceSystemProperties(hashMap0);
      strSubstitutor0.replace((Object) null);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      strSubstitutor0.replaceIn(stringBuilder0);
      strSubstitutor0.setPreserveEscapes(false);
      strSubstitutor0.isPreserveEscapes();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter((String) null);
      Properties properties0 = new Properties();
      StrSubstitutor.replace(object0, properties0);
      strSubstitutor0.replace((Object) strSubstitutor1);
      strSubstitutor0.replace("");
      strSubstitutor1.replace("java.lang.Object@0000000003", 0, 0);
      Object object2 = new Object();
      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
      StrSubstitutor.replace(object2, (Map<String, Integer>) hashMap1, "|L3L)XZm9|JAO", "Variable suffix must not be null.");
      StrSubstitutor strSubstitutor2 = strSubstitutor0.setVariablePrefix('$');
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('$');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "java.lang.Object@0000000003");
      StringBuffer stringBuffer0 = stringWriter2.getBuffer();
      strSubstitutor1.replaceIn(stringBuffer0);
      strSubstitutor2.replaceIn(stringBuffer0);
      // Undeclared exception!
      try { 
        strSubstitutor2.replace("|L3L)XZm9|JAO", 36, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      hashMap0.put("Invalid startIndex: ", "1?d1");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      strSubstitutor0.replaceIn((StringBuilder) null, (-2350), (-2350));
      strSubstitutor0.isEnableSubstitutionInVariables();
      StringBuilder stringBuilder0 = new StringBuilder("u[In*-uupm[p~N");
      char[] charArray0 = new char[5];
      hashMap0.put("v{-rO}TFWP!>", "u[In*-uupm[p~N");
      charArray0[0] = '#';
      charArray0[1] = '$';
      charArray0[2] = 'p';
      charArray0[3] = 'p';
      charArray0[4] = '<';
      // Undeclared exception!
      try { 
        stringBuilder0.append(charArray0, 34, 438);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "", "Minimum abbreviation width is %d", 'b', "Minimum abbreviation width is %d");
      Properties properties0 = new Properties();
      Integer integer0 = new Integer((-536));
      Object object0 = new Object();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("");
      strSubstitutor1.replace("D|`%:K!OHFQ/hPT");
      strSubstitutor1.replace("${");
      strSubstitutor1.replace((Object) "yj1]8");
      StrSubstitutor.replaceSystemProperties("${");
      strSubstitutor1.setEnableSubstitutionInVariables(true);
      StrSubstitutor.replaceSystemProperties(strLookup0);
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariablePrefix('b');
      StrSubstitutor.replaceSystemProperties("Minimum abbreviation width is %d");
      StrSubstitutor strSubstitutor3 = strSubstitutor0.setValueDelimiter("${");
      strSubstitutor3.setVariableSuffix("D|`%:K!OHFQ/hPT");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      strSubstitutor2.setVariableSuffix('$');
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        strSubstitutor2.replaceIn(stringBuffer0, (-2380), (-2380));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, "CC*MY+S");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "CC*MY+S", "CC*MY+S", '-', "CC*MY+S");
      hashMap0.put("%Kp,", "CC*MY+S");
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix('-');
      strSubstitutor1.setVariableSuffix('X');
      StrSubstitutor.replaceSystemProperties((Object) null);
      StringBuffer stringBuffer0 = new StringBuffer("IZ;&A2");
      strSubstitutor1.replace(stringBuffer0);
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariableSuffix('0');
      strSubstitutor2.setEnableSubstitutionInVariables(true);
      StrSubstitutor strSubstitutor3 = strSubstitutor0.setValueDelimiter('0');
      strSubstitutor0.replace((CharSequence) null, 13, (int) 'X');
      strSubstitutor3.replace((String) null);
      strSubstitutor0.replace("Variable suffix matcher must not be null.");
      strSubstitutor1.setVariablePrefix('5');
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "IZ;&A2");
      StringBuilder stringBuilder1 = stringBuilder0.append(true);
      // Undeclared exception!
      try { 
        stringBuilder1.append((CharSequence) "IZ;&A2", (int) '-', 1267);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 45, end 1267, s.length() 6
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "", "7rR?", '0');
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix('0');
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setValueDelimiter("G\"rM'>Z");
      strSubstitutor2.getEscapeChar();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      StrSubstitutor.replaceSystemProperties(object0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object1 = new Object();
      hashMap0.put("java.lang.Object@0000000003", object1);
      StrSubstitutor.replace((Object) "java.lang.Object@0000000003", (Map<String, Object>) hashMap0);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "java.lang.Object@0000000003", "java.lang.Object@0000000003", 'k');
      strSubstitutor0.replace("java.lang.Object@0000000003");
      strSubstitutor0.replace((Object) null);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      strSubstitutor0.replaceIn(stringBuilder0);
      strSubstitutor0.setPreserveEscapes(true);
      strSubstitutor0.isPreserveEscapes();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter((String) null);
      Properties properties0 = new Properties();
      StrSubstitutor.replace(object0, properties0);
      strSubstitutor0.replace((Object) strSubstitutor1);
      strSubstitutor0.setVariableSuffix('W');
      strSubstitutor0.replace("");
      strSubstitutor1.replace("java.lang.Object@0000000003", 0, 0);
      Object object2 = new Object();
      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
      StrSubstitutor.replace(object2, (Map<String, Integer>) hashMap1, "|L3L)XZm9|JAO", "Variable suffix must not be null.");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      StrSubstitutor.replaceSystemProperties(object0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object1 = new Object();
      hashMap0.put("cy8U>rI)w", object1);
      StrSubstitutor.replace((Object) "java.lang.Object@0000000003", (Map<String, Object>) hashMap0);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "java.lang.Object@0000000003", "java.lang.Object@0000000003", 'k');
      strSubstitutor0.replace("cy8U>rI)w");
      strSubstitutor0.replace((Object) null);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      strSubstitutor0.replaceIn(stringBuilder0);
      strSubstitutor0.setPreserveEscapes(true);
      strSubstitutor0.isPreserveEscapes();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter((String) null);
      Properties properties0 = new Properties();
      StrSubstitutor.replace(object0, properties0);
      strSubstitutor0.replace((Object) strSubstitutor1);
      strSubstitutor0.replace("");
      strSubstitutor1.replace("cy8U>rI)w", 0, 0);
      Object object2 = new Object();
      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
      StrSubstitutor.replace(object2, (Map<String, Integer>) hashMap1, "|L3L)XZm9|JAO", "Variable suffix must not be null.");
      StrSubstitutor strSubstitutor2 = strSubstitutor0.setValueDelimiter('$');
      strSubstitutor0.getEscapeChar();
      strSubstitutor2.getEscapeChar();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) null, "org.apache.commons.lang3.text.StrSubstitutor", "org.apache.commons.lang3.text.StrSubstitutor", '(', "org.apache.commons.lang3.text.StrSubstitutor");
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("");
      strSubstitutor1.replace("");
      strSubstitutor1.setPreserveEscapes(false);
      strSubstitutor1.setPreserveEscapes(false);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      strSubstitutor0.setEnableSubstitutionInVariables(true);
      strSubstitutor1.replace(stringBuffer1, 0, 0);
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer0);
      strSubstitutor0.replace(stringBuffer2);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      Integer integer0 = new Integer((-2084));
      hashMap0.put("org.apache.commons.lang3.text.StrSubstitutor", integer0);
      StrSubstitutor.replace((Object) strSubstitutor0, (Map<String, Integer>) hashMap0);
      StringBuffer stringBuffer3 = stringBuffer0.append((-173));
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      strSubstitutor1.replaceIn(stringBuilder0);
      stringBuffer3.insert(0, '(');
      strSubstitutor1.setVariableSuffix("org.apache.commons.lang3.text.StrSubstitutor");
      // Undeclared exception!
      try { 
        strSubstitutor1.replace(stringBuffer0, (-173), (-2028));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StringBuffer stringBuffer0 = null;
      strSubstitutor0.replace((StringBuffer) null);
      strSubstitutor0.replace((String) null, (-1194), (-1194));
      strSubstitutor0.replaceIn((StringBuffer) null, 0, 3552);
      strSubstitutor0.replace((CharSequence) null, (-1498), (-1194));
      strSubstitutor0.setEnableSubstitutionInVariables(false);
      strSubstitutor0.replace((char[]) null, (-373), (-1194));
      strSubstitutor0.isEnableSubstitutionInVariables();
      strSubstitutor0.replace((char[]) null, 0, (-1));
      strSubstitutor0.replace((CharSequence) null);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter((String) null);
      // Undeclared exception!
      try { 
        strSubstitutor1.setVariableSuffix((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable suffix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter("{fz;Ukmx%!lKk1*");
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setValueDelimiter('$');
      strSubstitutor2.replace((CharSequence) "{fz;Ukmx%!lKk1*");
      strSubstitutor2.replace((CharSequence) "{fz;Ukmx%!lKk1*");
      strSubstitutor1.replace((String) null, 23, 4);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) null, "`m1b", "`m1b", 'D');
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix('t');
      strSubstitutor1.setPreserveEscapes(true);
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariableSuffix("`m1b");
      strSubstitutor2.setVariablePrefix('{');
      StrSubstitutor.replaceSystemProperties("0jN`mt*FF");
      int int0 = 1;
      strSubstitutor1.replace((CharSequence) "`m1b", 1, 1);
      StringBuffer stringBuffer0 = new StringBuffer(698);
      // Undeclared exception!
      try { 
        stringBuffer0.insert(1, "org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("(lv`cD]X ", (String) null);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "(lv`cD]X ", "org.apache.commons.lang3.StringUtils", 'p');
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      strSubstitutor0.setVariableResolver(strLookup0);
      Integer integer0 = new Integer(0);
      strSubstitutor0.replace("org.apache.commons.lang3.StringUtils", 0, 0);
      StrSubstitutor.replace((Object) integer0, (Map<String, String>) hashMap0);
      strSubstitutor0.setPreserveEscapes(false);
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.computeIfPresent("org.apache.commons.lang3.StringUtils", biFunction0);
      strSubstitutor0.replace((CharSequence) null);
      strSubstitutor0.replace((CharSequence) null, 2629, 1);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        strSubstitutor0.replace(charArray0, 2629, (-3295));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: -3295
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(strLookup0).toString();
      doReturn((String) null).when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn(":-", ":-", "org.apache.commons.lang3.text.StrSubstitutor", "", "org.apache.commons.lang3.text.StrSubstitutor").when(strMatcher0).toString();
      doReturn(24, 24).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'g', strMatcher0);
      Object object0 = new Object();
      strSubstitutor0.replace(object0);
      StrSubstitutor.replace((Object) strSubstitutor0, (Properties) null);
      int int0 = 0;
      strSubstitutor0.replace((CharSequence) "org.apache.commons.lang3.text.StrSubstitutor@0000000001", 0, 0);
      strSubstitutor0.setVariablePrefix("org.apache.commons.lang3.text.StrSubstitutor@0000000001");
      String string0 = "wh`01_I";
      StrSubstitutor.replace((Object) "java.lang.Object@0000000003", (Map<String, Object>) null, "a$LhwTe}r;br_ih'T", "wh`01_I");
      strSubstitutor0.setVariablePrefix("a$LhwTe}r;br_ih'T");
      strSubstitutor0.setVariableSuffix('$');
      StringBuilder stringBuilder0 = new StringBuilder(1290);
      CharBuffer charBuffer0 = CharBuffer.allocate(4799);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(4799, (CharSequence) charBuffer0, 4799, 4799);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 4799
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("", "Invalid startIndex: ", "Variable suffix must not be null.").when(strMatcher0).toString();
      doReturn((-311), (-311)).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'g', strMatcher0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        strSubstitutor0.replace(object0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("Variable suffix must not be null.", "`h->7]QIj");
      StrSubstitutor.replace((Object) null, (Map<String, String>) hashMap0, "Variable suffix must not be null.", "m&M=");
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(strMatcher0).toString();
      doReturn(0, 0, 0, 0, 0).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, '\\');
      strSubstitutor0.isEnableSubstitutionInVariables();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter("m&M=");
      strSubstitutor1.isEnableSubstitutionInVariables();
      StrSubstitutor strSubstitutor2 = strSubstitutor0.setValueDelimiter('6');
      strSubstitutor1.setEnableSubstitutionInVariables(false);
      char[] charArray0 = new char[5];
      charArray0[0] = '\\';
      charArray0[1] = '#';
      charArray0[2] = '6';
      charArray0[3] = '$';
      charArray0[4] = '\\';
      strSubstitutor2.replace(charArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0);
      hashMap0.put("", "");
      StringBuilder stringBuilder0 = new StringBuilder("");
      strSubstitutor0.replaceIn(stringBuilder0);
      strSubstitutor0.setValueDelimiter('r');
      String string0 = "gQ*G]u|7_LN?{'bJb1";
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariableSuffix("gQ*G]u|7_LN?{'bJb1");
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setValueDelimiter('$');
      int int0 = 0;
      strSubstitutor2.replaceIn(stringBuilder0, 0, 0);
      strSubstitutor1.setEscapeChar('5');
      String string1 = null;
      // Undeclared exception!
      try { 
        StrSubstitutor.replace((Object) null, (Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariableSuffix("");
      strSubstitutor1.setVariablePrefix("");
      strSubstitutor0.replace((String) null);
      strSubstitutor1.isPreserveEscapes();
      strSubstitutor1.replace((CharSequence) "");
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      strSubstitutor1.setVariableResolver(strLookup0);
      strSubstitutor0.replace((CharSequence) "");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.putIfAbsent("\r", "\r");
      StrSubstitutor.replace(object0, (Map<String, Object>) hashMap0);
      Object object1 = new Object();
      hashMap0.replace("java.lang.Object@0000000004", object1);
      String string0 = " \t\n\r\f";
      String string1 = "/m!DM=v2w=(.E0\\";
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "", " \t\n\r\f", 't', "/m!DM=v2w=(.E0");
      Object object2 = new Object();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      hashMap1.put("\r", "");
      StrSubstitutor.replace(object2, (Map<String, String>) hashMap1);
      HashMap<String, Integer> hashMap2 = new HashMap<String, Integer>();
      StrSubstitutor.replace(object0, (Map<String, Integer>) hashMap2);
      int int0 = Integer.MAX_VALUE;
      // Undeclared exception!
      strSubstitutor0.replace((CharSequence) " \t\n\r\f", Integer.MAX_VALUE, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      Properties properties0 = new Properties();
      properties0.setProperty("3&2!?'DQ", "");
      StrSubstitutor.replaceSystemProperties("");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "Variable prefix matcher must not be null.", "Variable suffix matcher must not be null.", '\\');
      Integer integer0 = new Integer((-4989));
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter("Variable prefix matcher must not be null.");
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      StrSubstitutor.replace((Object) integer0, (Map<String, Object>) hashMap1, "w1!sD3zEh", "Variable prefix matcher must not be null.");
      char[] charArray0 = new char[6];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '$';
      charArray0[4] = '`';
      charArray0[5] = 'F';
      strSubstitutor1.replace(charArray0);
      strSubstitutor0.setVariablePrefix('\\');
      strSubstitutor0.isPreserveEscapes();
      StringBuffer stringBuffer0 = new StringBuffer();
      strSubstitutor1.replace(stringBuffer0);
      Object object0 = new Object();
      StrSubstitutor.replaceSystemProperties(object0);
      stringBuffer0.append((CharSequence) "");
      Properties properties0 = new Properties();
      StrSubstitutor.replace((Object) "", properties0);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace(stringBuffer0, (-4989), (-4989));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("");
      char char0 = 'm';
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariablePrefix('m');
      StrSubstitutor strSubstitutor3 = strSubstitutor2.setValueDelimiter('@');
      StrSubstitutor.replaceSystemProperties(strSubstitutor1);
      StringBuffer stringBuffer0 = null;
      strSubstitutor0.replace((StringBuffer) null);
      StrLookup<String> strLookup1 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      strSubstitutor1.replace((StringBuffer) null, (-312), (-312));
      strSubstitutor2.setVariableResolver(strLookup1);
      Properties properties0 = new Properties();
      Integer integer0 = new Integer((-312));
      Integer integer1 = new Integer((-312));
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor.replace((Object) strSubstitutor3, (Map<String, String>) hashMap0);
      properties0.put(integer0, integer1);
      // Undeclared exception!
      try { 
        StrSubstitutor.replace((Object) strSubstitutor2, properties0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("java.util.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("Zav9s8~", "Zav9s8~");
      Object object0 = new Object();
      hashMap0.put((String) null, object0);
      hashMap0.put("", object0);
      char char0 = '.';
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "", "", '.');
      Object object1 = new Object();
      hashMap0.putIfAbsent("", object1);
      StringBuffer stringBuffer0 = new StringBuffer(1344);
      strSubstitutor0.replaceIn(stringBuffer0, 0, 0);
      strSubstitutor0.setPreserveEscapes(false);
      strSubstitutor0.setEscapeChar('.');
      strSubstitutor0.setPreserveEscapes(false);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace(stringBuffer0, 0, 1344);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      String string0 = "$13'se5\\u\"Qn_Abk=~";
      char[] charArray0 = null;
      int int0 = (-2194);
      strSubstitutor0.replace((char[]) null, (-2194), (-2194));
      Object object0 = new Object();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.clear();
      hashMap0.put("", (Object) null);
      StrSubstitutor.replace(object0, (Map<String, Object>) hashMap0);
      strSubstitutor0.setVariableSuffix('<');
      int int1 = 0;
      // Undeclared exception!
      try { 
        strSubstitutor0.replace(string0, 0, (-1445));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "Infinite loop in property interpolation of ", "Infinite loop in property interpolation of ", '#', "?m)>;O,|KW");
      strSubstitutor0.replace((StringBuffer) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariableSuffix("xk&3GC");
      strSubstitutor1.replace((Object) strSubstitutor0);
      strSubstitutor1.setEnableSubstitutionInVariables(true);
      strSubstitutor0.setEscapeChar('');
      Integer integer0 = new Integer(0);
      Properties properties0 = new Properties();
      StrSubstitutor.replace((Object) integer0, properties0);
      strSubstitutor1.setEscapeChar('');
      strSubstitutor0.setVariableSuffix('$');
      strSubstitutor0.setValueDelimiter('4');
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "<8=5+%d|", "<8=5+%d|", 'S');
      strSubstitutor0.replace("[v%idE2HZuB4e", 4, 4);
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        stringBuffer0.deleteCharAt(4);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher1 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      char char0 = 'U';
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher1, 'U', strMatcher0);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StrSubstitutor.replace((Object) strSubstitutor0, (Map<String, Integer>) hashMap0);
      Object object0 = new Object();
      Properties properties0 = new Properties();
      Object object1 = new Object();
      properties0.put(hashMap0, "org.apache.commons.lang3.text.StrSubstitutor@0000000001");
      properties0.put(object1, object1);
      // Undeclared exception!
      try { 
        StrSubstitutor.replace(object0, properties0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("java.util.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "", "", 'P');
      hashMap0.put("Variable prefix matcher must not be null.", "");
      strSubstitutor0.setEscapeChar('P');
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix('S');
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariableSuffix('S');
      strSubstitutor0.replaceIn((StringBuilder) null);
      Properties properties0 = new Properties();
      StrSubstitutor.replace((Object) strSubstitutor2, properties0);
      Properties properties1 = new Properties();
      properties1.entrySet();
      StrSubstitutor.replace((Object) null, properties1);
      strSubstitutor2.replaceIn((StringBuilder) null);
      Object object0 = new Object();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      StrSubstitutor.replace(object0, (Map<String, Object>) hashMap1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      String string0 = "Variable suffix matcher must not be null.";
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "Variable suffix matcher must not be null.", "Variable suffix matcher must not be null.", 'S', "FRR9v+>9R-jLqO}%-{");
      String string1 = null;
      // Undeclared exception!
      try { 
        strSubstitutor0.setVariableSuffix((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable suffix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = (-969);
      Integer integer0 = new Integer((-969));
      Properties properties0 = new Properties();
      StrSubstitutor.replace((Object) integer0, properties0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object0 = new Object();
      hashMap0.put("java.lang.Integer@0000000004", object0);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "java.lang.Integer@0000000004", "<7x+h", '$', "=Z!md<av?jtP>P");
      StringBuilder stringBuilder0 = new StringBuilder(1);
      int int1 = 757;
      // Undeclared exception!
      try { 
        strSubstitutor0.replaceIn(stringBuilder0, 757, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = null;
      // Undeclared exception!
      try { 
        StrSubstitutor.replace(object0, (Map<String, String>) hashMap0, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable prefix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "Minimum abbreviation width with offset is %d", "->", 'Z', "->");
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("");
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariablePrefix('O');
      StrSubstitutor strSubstitutor3 = strSubstitutor2.setVariableSuffix("");
      char[] charArray0 = new char[5];
      charArray0[0] = '$';
      charArray0[1] = 'O';
      charArray0[2] = 'Z';
      strSubstitutor3.replace("");
      charArray0[3] = '$';
      charArray0[4] = 'Z';
      strSubstitutor3.replace(charArray0);
      StrSubstitutor strSubstitutor4 = strSubstitutor0.setValueDelimiter((String) null);
      StrLookup<String> strLookup1 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      strSubstitutor1.setVariableResolver(strLookup1);
      StrLookup<Integer> strLookup2 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      strSubstitutor4.setVariableResolver(strLookup2);
      Integer integer0 = new Integer(0);
      StrSubstitutor.replace((Object) integer0, (Map<String, String>) null);
      StrSubstitutor.replace((Object) "", (Properties) null);
      StrSubstitutor strSubstitutor5 = strSubstitutor3.setVariableSuffix('T');
      strSubstitutor5.replace((Object) "$OZ$Z");
      Object object0 = new Object();
      strSubstitutor3.replace(object0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0);
      hashMap0.remove((Object) strSubstitutor0, (Object) null);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("");
      strSubstitutor0.replace((CharSequence) null, 0, 391);
      strSubstitutor0.replace((Object) "");
      StrSubstitutor.replaceSystemProperties((Object) null);
      StrSubstitutor strSubstitutor2 = strSubstitutor0.setVariablePrefix('$');
      char[] charArray0 = new char[8];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '$';
      charArray0[4] = '$';
      strSubstitutor1.replace((CharSequence) null, 391, (-921));
      charArray0[5] = '$';
      charArray0[6] = '$';
      strSubstitutor1.setEnableSubstitutionInVariables(false);
      charArray0[7] = '$';
      strSubstitutor2.replace(charArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(strMatcher0).toString();
      doReturn(0, 0, 0, 0, 0).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'g', strMatcher0);
      Object object0 = new Object();
      strSubstitutor0.replace(object0);
      StrSubstitutor.replace((Object) strSubstitutor0, (Properties) null);
      int int0 = 0;
      strSubstitutor0.replace((CharSequence) "org.apache.commons.lang3.text.StrSubstitutor@0000000001", 0, 0);
      strSubstitutor0.setVariablePrefix("org.apache.commons.lang3.text.StrSubstitutor@0000000001");
      String string0 = "wh`01_I";
      StrSubstitutor.replace((Object) "java.lang.Object@0000000003", (Map<String, Object>) null, "a$LhwTe}r;br_ih'T", "wh`01_I");
      strSubstitutor0.setVariablePrefix("a$LhwTe}r;br_ih'T");
      strSubstitutor0.setVariableSuffix('$');
      StringBuilder stringBuilder0 = new StringBuilder(1290);
      CharBuffer charBuffer0 = CharBuffer.allocate(4799);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(4799, (CharSequence) charBuffer0, 4799, 4799);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset 4799
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      String string0 = "2Ocf!$";
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("2Ocf!$");
      strSubstitutor1.getEscapeChar();
      strSubstitutor1.setPreserveEscapes(true);
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariablePrefix('$');
      char[] charArray0 = new char[4];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '$';
      int int0 = 0;
      strSubstitutor0.setVariablePrefix('6');
      strSubstitutor2.replace(charArray0, 0, 0);
      char[] charArray1 = new char[1];
      strSubstitutor1.replace((CharSequence) "2Ocf!$");
      charArray1[0] = '$';
      StringBuffer stringBuffer0 = new StringBuffer(0);
      strSubstitutor1.replaceIn(stringBuffer0);
      hashMap0.clear();
      // Undeclared exception!
      try { 
        strSubstitutor0.replace(charArray1, (-1401), 2179);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 2179
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0);
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      strSubstitutor0.setVariableResolver(strLookup0);
      char[] charArray0 = new char[2];
      hashMap0.values();
      charArray0[0] = '$';
      charArray0[1] = '$';
      strSubstitutor0.replace(charArray0);
      strSubstitutor0.setEscapeChar('x');
      // Undeclared exception!
      try { 
        strSubstitutor0.setVariablePrefix((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable prefix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      String string0 = null;
      String string1 = "tgq=@";
      char char0 = 'F';
      StrSubstitutor strSubstitutor0 = null;
      try {
        strSubstitutor0 = new StrSubstitutor(strLookup0, (String) null, "tgq=@", 'F', "tgq=@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable prefix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Integer>) hashMap0);
      char[] charArray0 = new char[9];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '$';
      charArray0[4] = '$';
      charArray0[5] = '$';
      charArray0[6] = '$';
      charArray0[7] = '$';
      charArray0[8] = '$';
      strSubstitutor0.replace(charArray0);
      char[] charArray1 = new char[0];
      strSubstitutor0.replace(charArray1);
      Integer integer0 = new Integer(3132);
      hashMap0.put("", integer0);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter('x');
      strSubstitutor1.getEscapeChar();
      strSubstitutor0.replace("$$$$$$$$$", 0, 0);
      StrSubstitutor strSubstitutor2 = strSubstitutor0.setValueDelimiter((String) null);
      strSubstitutor1.setEnableSubstitutionInVariables(false);
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        strSubstitutor2.replace(stringBuffer0, 2002, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = ":-";
      hashMap0.put(":-", ":-");
      String string1 = null;
      hashMap0.clear();
      char char0 = ']';
      StrSubstitutor strSubstitutor0 = null;
      try {
        strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, ":-", (String) null, ']');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable suffix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      char[] charArray0 = new char[1];
      charArray0[0] = '$';
      strSubstitutor0.replace(charArray0);
      strSubstitutor0.setEnableSubstitutionInVariables(false);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "$");
      // Undeclared exception!
      try { 
        strSubstitutor0.replace(stringBuffer0, 64, 1913);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "3uVhBO-", "3uVhBO-", '/', "3uVhBO-");
      strSubstitutor0.setValueDelimiter("3uVhBO-");
      strSubstitutor0.isPreserveEscapes();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      Integer integer0 = new Integer(97);
      hashMap0.put("Variable suffix matcher must not be null.", integer0);
      hashMap0.put("Variable suffix matcher must not be null.", integer0);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Integer>) hashMap0, "org.apache.commons.lang3.text.StrBuilder", "org.apache.commons.lang3.text.StrBuilder", '#', "uyVd");
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      StrSubstitutor.replace((Object) "uyVd", (Map<String, Object>) hashMap1);
      StringBuffer stringBuffer0 = new StringBuffer("uyVd");
      strSubstitutor0.replace(stringBuffer0);
      strSubstitutor0.replace("");
      char[] charArray0 = new char[0];
      strSubstitutor0.replace(charArray0);
      StrSubstitutor.replaceSystemProperties("uyVd");
      strSubstitutor0.setEscapeChar('#');
      strSubstitutor0.setPreserveEscapes(true);
      strSubstitutor0.replace((Object) hashMap1);
      // Undeclared exception!
      try { 
        strSubstitutor0.replaceIn(stringBuffer0, 4672, 1706);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0);
      String string0 = "68Hl-p0Bl2f4!uWuli<";
      strSubstitutor0.replace("68Hl-p0Bl2f4!uWuli<");
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter('h');
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append(0);
      stringBuilder0.chars();
      char[] charArray0 = new char[4];
      charArray0[0] = 'S';
      charArray0[1] = '$';
      charArray0[2] = 'h';
      charArray0[3] = '$';
      stringBuilder0.append(charArray0, 0, 0);
      StringBuilder stringBuilder2 = stringBuilder1.delete(0, 1027);
      strSubstitutor1.replaceIn(stringBuilder2, 0, 0);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace((CharSequence) "68Hl-p0Bl2f4!uWuli<", (-1541), (-1541));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0);
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      char[] charArray0 = new char[2];
      StringBuffer stringBuffer0 = new StringBuffer("C}_\"^v0+616L");
      strSubstitutor0.replaceIn(stringBuffer0);
      charArray0[0] = '$';
      charArray0[1] = '$';
      CharBuffer.wrap(charArray0);
      strSubstitutor0.replace((CharSequence) charBuffer0);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariableSuffix('$');
      strSubstitutor1.isEnableSubstitutionInVariables();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      String string1 = null;
      char char0 = '8';
      StrSubstitutor strSubstitutor0 = null;
      try {
        strSubstitutor0 = new StrSubstitutor(strLookup0, "", (String) null, '8');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable suffix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      char char0 = 'P';
      String string0 = "CDqqg4s";
      StrSubstitutor strSubstitutor0 = null;
      try {
        strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, (String) null, (String) null, 'P', "CDqqg4s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable prefix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Integer integer0 = new Integer((-3356));
      StrSubstitutor.replaceSystemProperties(integer0);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      BiConsumer<Object, Object> biConsumer0 = (BiConsumer<Object, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      hashMap0.forEach(biConsumer0);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Integer>) hashMap0);
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("java.lang.Integer@0000000003", 352, 352);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter('g');
      int int0 = 0;
      strSubstitutor1.replace((CharSequence) null, 0, 610);
      StringBuffer stringBuffer0 = new StringBuffer();
      strSubstitutor0.replace(stringBuffer0);
      StringBuilder stringBuilder0 = new StringBuilder("U\"71Pn");
      strSubstitutor1.replaceIn(stringBuilder0);
      strSubstitutor1.setVariablePrefix('Q');
      strSubstitutor0.replace((char[]) null);
      strSubstitutor1.setPreserveEscapes(false);
      Object object0 = new Object();
      strSubstitutor1.setVariableSuffix('c');
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Integer integer0 = new Integer(0);
      hashMap0.getOrDefault(integer0, "");
      // Undeclared exception!
      try { 
        StrSubstitutor.replace(object0, (Map<String, String>) hashMap0, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable prefix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0);
      StringBuilder stringBuilder0 = new StringBuilder(":#B");
      StringBuilder stringBuilder1 = stringBuilder0.append(765.0F);
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) stringBuilder0);
      StringBuilder stringBuilder3 = stringBuilder2.append(true);
      StringBuilder stringBuilder4 = stringBuilder3.insert(5, (long) 5);
      // Undeclared exception!
      try { 
        strSubstitutor0.replaceIn(stringBuilder4, 942, 942);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor.replace((Object) "", (Map<String, String>) hashMap0);
      hashMap0.put(",a.t:II,fne1", "");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, ": ", "");
      char[] charArray0 = new char[9];
      charArray0[0] = '$';
      charArray0[1] = 'H';
      charArray0[2] = '$';
      charArray0[3] = '$';
      charArray0[4] = '$';
      charArray0[5] = 'Q';
      charArray0[6] = '$';
      charArray0[7] = '$';
      charArray0[8] = '$';
      strSubstitutor0.replace(charArray0, 4, 4);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter("!D|^9 v=Mh;/Eo");
      strSubstitutor1.replaceIn((StringBuffer) null);
      // Undeclared exception!
      try { 
        strSubstitutor1.replace(": ", 4, 2462);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "ne61", "ne61");
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter("J3fVu<81m:");
      strSubstitutor0.replace("J3fVu<81m:");
      Object object0 = new Object();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      StrSubstitutor.replace(object0, (Map<String, String>) hashMap1);
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setValueDelimiter('E');
      HashMap<String, Integer> hashMap2 = new HashMap<String, Integer>();
      StrSubstitutor.replace((Object) strSubstitutor1, (Map<String, Integer>) hashMap2);
      strSubstitutor1.setEscapeChar('E');
      strSubstitutor1.replace("ne61");
      StrSubstitutor.replace((Object) "J3fVu<81m:", (Map<String, Object>) hashMap0);
      strSubstitutor0.getEscapeChar();
      Integer integer0 = new Integer((-2650));
      Properties properties0 = new Properties();
      StrSubstitutor.replace((Object) integer0, properties0);
      strSubstitutor0.replace("diYFU!xv?j");
      strSubstitutor2.setVariableSuffix('E');
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, ">Up<ak", ">Up<ak", ';', ">Up<ak");
      StrSubstitutor.replaceSystemProperties((Object) null);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "UyyBPWZWiZg", "F", '6', "UyyBPWZWiZg");
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      hashMap0.putAll(hashMap1);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix(' ');
      strSubstitutor1.setPreserveEscapes(true);
      strSubstitutor1.setVariablePrefix("F");
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null).when(strMatcher0).toString();
      doReturn(0, 0, 0, 0, 0).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'f');
      char[] charArray0 = new char[6];
      int int0 = 0;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringBuffer stringBuffer1 = stringBuffer0.reverse();
      strSubstitutor0.replaceIn(stringBuffer0);
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = 'O';
      charArray0[4] = '$';
      charArray0[5] = 'f';
      strSubstitutor0.replace(charArray0);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace((CharSequence) stringBuffer1, (-1103), 1133);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Object object0 = new Object();
      Properties properties0 = new Properties();
      properties0.setProperty("3&2!?'DQ", "");
      StrSubstitutor.replace(object0, properties0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "java.lang.Object@0000000004", "'^}0ec\"XW=ULH(@ncgX");
      strSubstitutor0.replace("3&2!?'DQ");
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("", "`vV@b'\"\"?9namn");
      Integer integer0 = new Integer(0);
      hashMap0.put("", integer0);
      StrSubstitutor.replace((Object) null, (Map<String, Object>) hashMap0);
      StrSubstitutor strSubstitutor0 = null;
      try {
        strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "-B;&Ur4\"", (String) null, 'c', "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable suffix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("Yj7FsBq\"");
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariablePrefix('$');
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      strSubstitutor2.replace(stringBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object0 = new Object();
      hashMap0.replace("xZ :G9HhF,E>x", object0, (Object) "");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "h", "", '?');
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter('>');
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      strSubstitutor1.setVariableResolver(strLookup0);
      strSubstitutor1.setVariableSuffix("U(bn-GW");
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      charArray0[1] = '$';
      charArray0[2] = '$';
      charArray0[3] = '$';
      // Undeclared exception!
      try { 
        strSubstitutor0.replace(charArray0, 0, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: -1
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("Q[?G", "Q[?G");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "bY;OuT2WIa/", "");
      strSubstitutor0.replace("");
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      // Undeclared exception!
      try { 
        strSubstitutor0.replace(charArray0, 1723, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid startIndex: 0
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrSubstitutor.replaceSystemProperties(strSubstitutor0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Integer integer0 = new Integer((-3180));
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StrSubstitutor.replace((Object) integer0, (Map<String, Integer>) hashMap0, "", "");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix('`');
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      strSubstitutor1.setVariableResolver(strLookup0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, '{', strMatcher0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      char char0 = 'o';
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "org.apache.commons.lang3.StringUtils", "", 'o');
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor.replace((Object) "", (Map<String, String>) hashMap0, "", ":-");
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("org.apache.commons.lang3.StringUtils");
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariableSuffix('o');
      strSubstitutor0.replace((Object) strSubstitutor1);
      StringBuffer stringBuffer0 = new StringBuffer(1518);
      // Undeclared exception!
      try { 
        strSubstitutor2.replaceIn(stringBuffer0, 1518, 1518);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix('=');
      strSubstitutor1.setVariableSuffix('$');
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "", "e'<~3Z", 'Q', "");
      StringBuffer stringBuffer0 = new StringBuffer(834);
      strSubstitutor0.replaceIn(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      strSubstitutor0.setVariablePrefix('$');
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'p');
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("", (-956), (-956));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      strSubstitutor0.replace((CharSequence) "2 olgyj {44*tAT-BGr");
      strSubstitutor0.replace((CharSequence) "2 olgyj {44*tAT-BGr");
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "", "x(UVlw\"K1wKlf$~ZHF", ')');
      Integer integer0 = new Integer(256);
      strSubstitutor0.replace((Object) integer0);
      strSubstitutor0.isEnableSubstitutionInVariables();
      strSubstitutor0.setVariableSuffix("java.lang.Integer@0000000005");
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter('q');
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setValueDelimiter("");
      StrSubstitutor strSubstitutor3 = strSubstitutor2.setVariableSuffix("");
      strSubstitutor3.isEnableSubstitutionInVariables();
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Integer>) null);
      strSubstitutor0.setValueDelimiter('<');
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = null;
      try {
        strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable prefix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = null;
      try {
        strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, (String) null, "1?d1", 'p', "_pIn*-uupm[px{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable prefix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "", "", '7');
      char[] charArray0 = new char[2];
      charArray0[0] = 'J';
      charArray0[1] = '7';
      strSubstitutor0.replace(charArray0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "^g[5EnuuEGP{<HI", "^g[5EnuuEGP{<HI", '&', (String) null);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      strSubstitutor0.setEnableSubstitutionInVariables(false);
      Object object0 = new Object();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor.replace(object0, (Map<String, String>) hashMap0, "NZ1^@jG", "NZ1^@jG");
      strSubstitutor0.setPreserveEscapes(false);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, ": ", ": ");
      Object object0 = new Object();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      StrSubstitutor.replace(object0, (Map<String, Object>) hashMap1);
      strSubstitutor0.replace(": ");
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0);
      int int0 = 117;
      int int1 = 1162;
      strSubstitutor0.replaceIn((StringBuilder) null, 117, 1162);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.flush();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        stringBuffer0.insert(256, (Object) strSubstitutor0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 256
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "Fuv'g|D,5mN";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Fuv'g|D,5mN");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      char char0 = '&';
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "hsycJl=w:2%I", "hsycJl=w:2%I", '&', "hsycJl=w:2%I");
      // Undeclared exception!
      try { 
        strSubstitutor0.setVariableSuffix((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable suffix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, "CC*MY+S");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "CC*MY+S", "CC*MY+S", '-', "CC*MY+S");
      hashMap0.put("%6Kp,", "CC*MY+S");
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix('-');
      strSubstitutor1.setVariableSuffix('X');
      StrSubstitutor.replaceSystemProperties((Object) null);
      StringBuffer stringBuffer0 = new StringBuffer("IZ;&A2");
      strSubstitutor1.replace(stringBuffer0);
      strSubstitutor1.setVariableSuffix('0');
      StrSubstitutor strSubstitutor2 = strSubstitutor0.setValueDelimiter('0');
      strSubstitutor0.replace((CharSequence) null, 13, 18);
      strSubstitutor2.replace((String) null);
      strSubstitutor0.replace("Variable suffix matcher must not be null.");
      strSubstitutor1.setVariablePrefix('$');
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "IZ;&A2");
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      StringBuilder stringBuilder2 = stringBuilder1.append(true);
      // Undeclared exception!
      try { 
        stringBuilder2.append((CharSequence) "IZ;&A2", 18, 1267);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 18, end 1267, s.length() 6
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "", "Minimum abbreviation width is %d", 'b', "Minimum abbreviation width is %d");
      Integer integer0 = new Integer((-536));
      Properties properties0 = new Properties();
      Integer integer1 = new Integer((-536));
      properties0.put("", integer1);
      StrSubstitutor.replace((Object) integer0, properties0);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("");
      strSubstitutor1.replace("D|`%:K!OHFQ/hPT");
      strSubstitutor1.replace("${");
      strSubstitutor1.replace((Object) "yj1]8");
      StrSubstitutor.replaceSystemProperties("${");
      strSubstitutor1.replace((String) null);
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariablePrefix('b');
      char[] charArray0 = new char[4];
      charArray0[0] = '$';
      charArray0[1] = 'b';
      charArray0[2] = '$';
      charArray0[3] = '$';
      strSubstitutor2.replace(charArray0);
      StrSubstitutor.replaceSystemProperties("Minimum abbreviation width is %d");
      StrSubstitutor strSubstitutor3 = strSubstitutor0.setValueDelimiter("${");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      strSubstitutor0.replaceIn(stringBuffer0);
      strSubstitutor3.setVariablePrefix("{K :j|}");
      // Undeclared exception!
      try { 
        strSubstitutor1.replace(charArray0, 4, 16);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // Invalid length: 16
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Object object0 = new Object();
      StrSubstitutor.replaceSystemProperties(object0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object1 = new Object();
      hashMap0.put("java.lang.Object@0000000003", object1);
      StrSubstitutor.replace((Object) "java.lang.Object@0000000003", (Map<String, Object>) hashMap0);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "java.lang.Object@0000000003", "java.lang.Object@0000000003", 'k');
      strSubstitutor0.replace("java.lang.Object@0000000003");
      strSubstitutor0.replace((Object) null);
      StringBuilder stringBuilder0 = new StringBuilder(0);
      strSubstitutor0.replaceIn(stringBuilder0);
      strSubstitutor0.setPreserveEscapes(false);
      strSubstitutor0.isPreserveEscapes();
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter((String) null);
      Properties properties0 = new Properties();
      StrSubstitutor.replace(object0, properties0);
      strSubstitutor0.replace((Object) strSubstitutor1);
      strSubstitutor0.replace("");
      strSubstitutor1.replace("java.lang.Object@0000000003", 0, 0);
      Object object2 = new Object();
      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
      StrSubstitutor.replace(object2, (Map<String, Integer>) hashMap1, "|L3L)XZm9|JAO", "Variable suffix must not be null.");
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "", "Minimum abbreviation width is %d", 'b', "Minimum abbreviation width is %d");
      Integer integer0 = new Integer((-536));
      Properties properties0 = new Properties();
      Integer integer1 = new Integer((-536));
      properties0.put("", integer1);
      StrSubstitutor.replace((Object) integer0, properties0);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("");
      strSubstitutor1.replace("D|`%:K!OHFQ/hPT");
      strSubstitutor1.replace("${");
      strSubstitutor1.replace((Object) "yj1]8");
      StrSubstitutor.replaceSystemProperties("${");
      strSubstitutor1.replace((String) null);
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariablePrefix('b');
      StrSubstitutor.replaceSystemProperties("Minimum abbreviation width is %d");
      strSubstitutor0.setValueDelimiter("${");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      strSubstitutor0.replaceIn(stringBuffer0);
      strSubstitutor2.setVariableSuffix('$');
      // Undeclared exception!
      try { 
        strSubstitutor2.replaceIn(stringBuffer0, (-2380), (-2380));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      StrLookup<String> strLookup0 = (StrLookup<String>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, "2 EB04<tE_NW", "opwB84", 'R');
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix("2 EB04<tE_NW");
      strSubstitutor1.setEnableSubstitutionInVariables(false);
      strSubstitutor0.replace((CharSequence) "2 EB04<tE_NW");
      strSubstitutor0.setEnableSubstitutionInVariables(false);
      StringBuffer stringBuffer0 = new StringBuffer("M?Y,H'a?L`3)esdWK");
      strSubstitutor1.replace(stringBuffer0, 1, 1);
      strSubstitutor1.setVariableSuffix('R');
      // Undeclared exception!
      try { 
        strSubstitutor0.replaceIn(stringBuffer0, 3254, 3254);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      char char0 = 'p';
      String string0 = "_pIn*-uupm[px{";
      StrSubstitutor strSubstitutor0 = null;
      try {
        strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, (String) null, "1?d1", 'p', "_pIn*-uupm[px{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Variable prefix must not be null.
         //
         verifyException("org.apache.commons.lang3.text.StrSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      strSubstitutor0.replaceIn((StringBuffer) null, 0, 3552);
      strSubstitutor0.setEnableSubstitutionInVariables(false);
      strSubstitutor0.replace((char[]) null, (-373), (-1194));
      strSubstitutor0.isEnableSubstitutionInVariables();
      boolean boolean0 = strSubstitutor0.replaceIn((StringBuffer) null, 33, 0);
      assertFalse(boolean0);
      
      strSubstitutor0.replace((char[]) null, 0, (-1));
      strSubstitutor0.replace((CharSequence) null);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setValueDelimiter((String) null);
      strSubstitutor1.isPreserveEscapes();
      boolean boolean1 = strSubstitutor0.isEnableSubstitutionInVariables();
      String string0 = strSubstitutor0.replace((char[]) null, 3552, (-503));
      assertNull(string0);
      
      boolean boolean2 = strSubstitutor1.isPreserveEscapes();
      assertTrue(boolean2 == boolean1);
      
      strSubstitutor1.replace((StringBuffer) null);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StrSubstitutor strSubstitutor2 = strSubstitutor0.setValueDelimiter("C?%ZjpV]>e)zJ~wNL");
      assertEquals('$', strSubstitutor2.getEscapeChar());
  }
}
