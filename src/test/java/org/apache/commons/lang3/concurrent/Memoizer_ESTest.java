/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 02:43:00 GMT 2019
 */

package org.apache.commons.lang3.concurrent;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionStage;
import java.util.concurrent.Delayed;
import java.util.concurrent.Executor;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.function.Supplier;
import org.apache.commons.lang3.concurrent.Computable;
import org.apache.commons.lang3.concurrent.Memoizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Memoizer_ESTest extends Memoizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Memoizer<Delayed, String> memoizer0 = new Memoizer<Delayed, String>((Computable<Delayed, String>) null);
      // Undeclared exception!
      try { 
        memoizer0.compute((Delayed) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Memoizer<String, Object> memoizer0 = new Memoizer<String, Object>((Computable<String, Object>) null, true);
      // Undeclared exception!
      try { 
        memoizer0.compute("jmh.executor");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.concurrent.Memoizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException("");
      Memoizer<RuntimeException, String> memoizer0 = new Memoizer<RuntimeException, String>((Computable<RuntimeException, String>) null, false);
      // Undeclared exception!
      try { 
        memoizer0.compute(mockRuntimeException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.concurrent.Memoizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Computable<CompletableFuture<Object>, ForkJoinTask<CompletionStage<RuntimeException>>> computable0 = (Computable<CompletableFuture<Object>, ForkJoinTask<CompletionStage<RuntimeException>>>) mock(Computable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(computable0).compute(nullable(java.util.concurrent.CompletableFuture.class));
      Memoizer<CompletableFuture<Object>, ForkJoinTask<CompletionStage<RuntimeException>>> memoizer0 = new Memoizer<CompletableFuture<Object>, ForkJoinTask<CompletionStage<RuntimeException>>>(computable0);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadPoolExecutor_AbortPolicy0);
      CompletableFuture<Object> completableFuture0 = CompletableFuture.supplyAsync(supplier0, (Executor) scheduledThreadPoolExecutor0);
      memoizer0.compute(completableFuture0);
      ForkJoinTask<CompletionStage<RuntimeException>> forkJoinTask0 = memoizer0.compute(completableFuture0);
      assertNull(forkJoinTask0);
  }
}
