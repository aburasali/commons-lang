/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 02:21:24 GMT 2019
 */

package org.apache.commons.lang3.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Set;
import org.apache.commons.lang3.exception.ContextedException;
import org.apache.commons.lang3.exception.ContextedRuntimeException;
import org.apache.commons.lang3.exception.ExceptionContext;
import org.apache.commons.lang3.tuple.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContextedRuntimeException_ESTest extends ContextedRuntimeException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException();
      String string0 = contextedRuntimeException0.getRawMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("");
      String string0 = contextedRuntimeException0.getRawMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("Fd)nAb4/ 3:mpy7n", (Throwable) null, (ExceptionContext) null);
      String string0 = contextedRuntimeException0.getMessage();
      assertEquals("Fd)nAb4/ 3:mpy7n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException();
      String string0 = contextedRuntimeException0.getFormattedExceptionMessage("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("\"h\u001AX`2");
      Object object0 = new Object();
      ContextedRuntimeException contextedRuntimeException1 = contextedRuntimeException0.setContextValue("Ed)CKg", object0);
      Object object1 = contextedRuntimeException1.getFirstContextValue("Ed)CKg");
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException();
      ContextedRuntimeException contextedRuntimeException1 = contextedRuntimeException0.addContextValue("D9#*x,aTV\"", (Object) null);
      List<Object> list0 = contextedRuntimeException1.getContextValues("D9#*x,aTV\"");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException();
      contextedRuntimeException0.setContextValue("", "");
      Set<String> set0 = contextedRuntimeException0.getContextLabels();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("7nBXHXOv0Y$j}(|");
      ContextedRuntimeException contextedRuntimeException1 = contextedRuntimeException0.addContextValue("7nBXHXOv0Y$j}(|", "7nBXHXOv0Y$j}(|");
      List<Pair<String, Object>> list0 = contextedRuntimeException1.getContextEntries();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("Fd)nAb4/ 3:mpy7n", (Throwable) null, (ExceptionContext) null);
      String string0 = contextedRuntimeException0.getFormattedExceptionMessage("Fd)nAb4/ 3:mpy7n");
      assertEquals("Fd)nAb4/ 3:mpy7n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException();
      ContextedRuntimeException contextedRuntimeException1 = new ContextedRuntimeException("Rk;yB", contextedRuntimeException0, contextedRuntimeException0);
      assertFalse(contextedRuntimeException1.equals((Object)contextedRuntimeException0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException();
      Set<String> set0 = contextedRuntimeException0.getContextLabels();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("org.apache.commons.lang3.exception.ContextedRuntimeException");
      List<Pair<String, Object>> list0 = contextedRuntimeException0.getContextEntries();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("b=,", mockThrowable0);
      ContextedRuntimeException contextedRuntimeException1 = new ContextedRuntimeException(contextedRuntimeException0);
      assertFalse(contextedRuntimeException1.equals((Object)contextedRuntimeException0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("\"h\u001AX`2");
      List<Object> list0 = contextedRuntimeException0.getContextValues("\"h\u001AX`2");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException();
      String string0 = contextedRuntimeException0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException(":");
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException(":", contextedException0);
      String string0 = contextedRuntimeException0.getRawMessage();
      assertEquals(":", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException("\"h\u001AX`2");
      Object object0 = contextedRuntimeException0.getFirstContextValue("S'6w|o/7+L5RmG");
      ContextedRuntimeException contextedRuntimeException1 = contextedRuntimeException0.setContextValue((String) null, object0);
      assertSame(contextedRuntimeException0, contextedRuntimeException1);
  }
}
