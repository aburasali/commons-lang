/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 02:59:31 GMT 2019
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.math.RoundingMode;
import org.apache.commons.lang3.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = " vs ";
      NumberUtils.isCreatable(" vs ");
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-475.94376F);
      floatArray0[1] = 0.0F;
      floatArray0[2] = 3793.0F;
      floatArray0[3] = 1845.5F;
      floatArray0[4] = (-2418.9F);
      floatArray0[5] = (-1660.603F);
      floatArray0[6] = 1.0F;
      floatArray0[7] = (-3814.7505F);
      NumberUtils.max(floatArray0);
      NumberUtils.toShort(" vs ");
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short)0;
      shortArray0[1] = (short)0;
      shortArray0[2] = (short)0;
      NumberUtils.min(shortArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal(" vs ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      NumberUtils.isCreatable("TP=y\"_*X[G[lEh<");
      Double double0 = new Double(308.9919442088378);
      Double.sum((-1262.517), (-1262.517));
      Double.isFinite(308.9919442088378);
      Double.isFinite(0.0);
      BigDecimal bigDecimal0 = NumberUtils.toScaledBigDecimal(double0);
      NumberUtils.toShort("TP=y\"_*X[G[lEh<");
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (short)0;
      NumberUtils.max(intArray0);
      Double double1 = NumberUtils.DOUBLE_ONE;
      Double.max(0.0, (-1262.517));
      Double.isFinite(0);
      Double.isFinite((short)0);
      Double.min(429.0, Double.NaN);
      NumberUtils.toScaledBigDecimal(double1);
      NumberUtils.compare((short)0, (short)1816);
      NumberUtils.isCreatable("E{k,m}Myb'\"&k77s+Y4");
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      // Undeclared exception!
      try { 
        NumberUtils.createFloat("0xWt[LlM");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = (-1L);
      longArray0[2] = (-2420L);
      longArray0[3] = 50L;
      longArray0[4] = 1L;
      longArray0[5] = 1L;
      NumberUtils.min(longArray0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      NumberUtils.toDouble(bigDecimal0);
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("org.apache.commons.lang3.StringUtils");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // org.apache.commons.lang3.StringUtils is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = (-1L);
      longArray0[1] = 171L;
      longArray0[2] = (-2423L);
      longArray0[3] = 1L;
      longArray0[4] = 1L;
      longArray0[5] = (-6L);
      NumberUtils.min(longArray0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      bigDecimal0.longValueExact();
      NumberUtils.toDouble(bigDecimal0);
      double[] doubleArray0 = new double[4];
      bigDecimal0.shortValueExact();
      doubleArray0[0] = (-1867.426442457104);
      doubleArray0[1] = (double) 1L;
      doubleArray0[2] = (double) (-1L);
      doubleArray0[3] = (double) 1L;
      NumberUtils.max(doubleArray0);
      NumberUtils.createInteger("0");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 32;
      intArray0[1] = (-1230);
      intArray0[2] = 1270;
      intArray0[3] = (-75999875);
      intArray0[0] = (-1968);
      NumberUtils.max(intArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)46;
      NumberUtils.min(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal((double) 1270);
      bigDecimal0.longValue();
      RoundingMode roundingMode0 = RoundingMode.HALF_UP;
      NumberUtils.toScaledBigDecimal(bigDecimal0, (-1968), roundingMode0);
      NumberUtils.toLong("Wt");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 32;
      intArray0[1] = (-1230);
      intArray0[2] = 1270;
      intArray0[3] = (-75999875);
      intArray0[4] = (-1968);
      NumberUtils.max(intArray0);
      NumberUtils.isCreatable("#");
      Double double0 = NumberUtils.DOUBLE_ONE;
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      NumberUtils.toScaledBigDecimal(double0, 1498, roundingMode0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)2114;
      shortArray0[1] = (short) (-844);
      NumberUtils.max(shortArray0);
      String string0 = "-#;./=/W){\\Y";
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("-#;./=/W){Y");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-;./=/W){Y\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      float[] floatArray0 = new float[7];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (-1588.0F);
      floatArray0[2] = 322.59F;
      floatArray0[3] = (-593.6375F);
      floatArray0[4] = Float.NaN;
      floatArray0[5] = 1170.0F;
      floatArray0[6] = (-1.0F);
      NumberUtils.max(floatArray0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "0Wt[LlM";
      NumberUtils.isCreatable("0Wt[LlM");
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = BigInteger.ZERO;
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("0Wt[LlM");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Wt[LlM\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 4634.9101057;
      doubleArray0[2] = 316.684512197;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = Double.NaN;
      doubleArray0[5] = 2604.49241;
      doubleArray0[6] = (-907.396);
      doubleArray0[7] = (-1.0);
      doubleArray0[8] = (-603.5393665380825);
      NumberUtils.max(doubleArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createNumber(" vs ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         //  vs  is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String string0 = "0X";
      NumberUtils.isCreatable("0X");
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)57;
      byteArray0[3] = (byte) (-96);
      NumberUtils.max(byteArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createLong("W `a#oK");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"W `a#oK\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      NumberUtils.compare((short)1013, (short) (-512));
      long[] longArray0 = new long[10];
      longArray0[0] = (long) (short)1013;
      longArray0[1] = (long) (short) (-512);
      longArray0[2] = (long) (short) (-512);
      longArray0[3] = (long) (short)1013;
      longArray0[4] = (long) (short) (-512);
      NumberUtils.max(longArray0);
      BigDecimal bigDecimal0 = new BigDecimal((-2056));
      bigDecimal0.intValueExact();
      bigDecimal0.toEngineeringString();
      Object object0 = new Object();
      bigDecimal0.equals(object0);
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      bigDecimal0.scale();
      NumberUtils.toDouble(bigDecimal0, 1.0);
      NumberUtils.createBigInteger("-2056");
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      NumberUtils.toScaledBigDecimal(bigDecimal1, 2704, roundingMode0);
      NumberUtils.isNumber("{NXK");
      NumberUtils.toScaledBigDecimal((Float) null);
      NumberUtils.max((short)1013, (short)0, (short)0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-36);
      NumberUtils.max(byteArray0);
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal("The validated array index is invalid: %d");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = 3.0;
      doubleArray0[3] = 2604.49241;
      doubleArray0[4] = (-1461.66550343);
      doubleArray0[5] = 100.0;
      doubleArray0[6] = Double.NaN;
      NumberUtils.min(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Float float0 = new Float(1.0);
      int int0 = (-27);
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal(float0, (-27), roundingMode0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      int int0 = (-1);
      Float float0 = NumberUtils.FLOAT_ZERO;
      NumberUtils.toScaledBigDecimal(float0);
      short[] shortArray0 = new short[1];
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("-0X.$^;C");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-.$^;C\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = (-1L);
      longArray0[1] = 171L;
      longArray0[2] = (-1L);
      longArray0[3] = 1L;
      longArray0[4] = 1L;
      longArray0[5] = 0L;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      NumberUtils.toDouble(bigDecimal0);
      NumberUtils.isNumber("1");
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (-1L);
      NumberUtils.min(floatArray0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-96);
      byteArray0[0] = (byte) (-96);
      String string0 = "0x";
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("0x");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("--:\"7*gHF");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // --:\"7*gHF is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      NumberUtils.compare((short)1013, (short) (-512));
      long[] longArray0 = new long[5];
      longArray0[0] = (long) (short)1013;
      longArray0[1] = (long) (short) (-512);
      longArray0[2] = (long) (short) (-512);
      longArray0[3] = (long) (short)1013;
      longArray0[4] = (long) (short) (-512);
      NumberUtils.max(longArray0);
      BigDecimal bigDecimal0 = new BigDecimal(1386);
      bigDecimal0.intValueExact();
      bigDecimal0.toEngineeringString();
      Object object0 = new Object();
      bigDecimal0.equals(object0);
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      BigDecimal bigDecimal2 = bigDecimal0.subtract(bigDecimal1);
      bigDecimal0.scale();
      NumberUtils.toDouble(bigDecimal0, 1.0);
      NumberUtils.createBigInteger("1386");
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      NumberUtils.toScaledBigDecimal(bigDecimal2, 2704, roundingMode0);
      NumberUtils.isNumber("V4$*s^M2rKF~;6*7=_^");
      NumberUtils.toScaledBigDecimal((Float) null);
      NumberUtils.max((short)1013, (short)0, (short)0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-16);
      NumberUtils.max(byteArray0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Double double0 = NumberUtils.DOUBLE_ZERO;
      NumberUtils.toScaledBigDecimal(double0, (-1314), (RoundingMode) null);
      NumberUtils numberUtils0 = new NumberUtils();
      // Undeclared exception!
      try { 
        NumberUtils.createNumber(";./=/W){Y");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // ;./=/W){Y is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      NumberUtils.toLong((String) null);
      NumberUtils.isParsable("-");
      int int0 = 546;
      int int1 = 68;
      NumberUtils.max(546, 68, 546);
      // Undeclared exception!
      try { 
        NumberUtils.min((short[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      NumberUtils.toLong((String) null);
      NumberUtils.isParsable("-#");
      int int0 = 546;
      int int1 = 68;
      NumberUtils.compare(546, 546);
      // Undeclared exception!
      try { 
        NumberUtils.min((short[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NumberUtils.max((byte)6, (byte) (-10), (byte)88);
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)108;
      shortArray0[1] = (short) (byte)6;
      shortArray0[2] = (short)2454;
      shortArray0[3] = (short) (byte)6;
      NumberUtils.min(shortArray0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (short)2454;
      NumberUtils.min(floatArray0);
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (byte)6;
      intArray0[1] = (int) (short)2454;
      NumberUtils.min(intArray0);
      NumberUtils.toDouble("Wt");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "0x";
      NumberUtils.isNumber("0x");
      String string1 = "4eXPNvFpfN+L-";
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal("4eXPNvFpfN+L-");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-1966.75);
      doubleArray0[1] = (-1208.30989965);
      doubleArray0[2] = 45.0;
      doubleArray0[3] = 100.0;
      doubleArray0[4] = 532.7606;
      doubleArray0[5] = (-1159.769532213649);
      doubleArray0[6] = (-1.0);
      doubleArray0[7] = 4634.9101057;
      doubleArray0[8] = (-548.75439715);
      NumberUtils.max(doubleArray0);
      NumberUtils.toLong("---#");
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)1782;
      shortArray0[1] = (short)2110;
      shortArray0[2] = (short)69;
      shortArray0[3] = (short) (-1);
      NumberUtils.max(shortArray0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) (short)69;
      floatArray0[1] = (float) (short)1782;
      NumberUtils.min(floatArray0);
      NumberUtils.toFloat("%IA+uuJJUghWT{p0i#");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      long long0 = (-1592L);
      long long1 = 0L;
      NumberUtils.max(1L, (-1592L), 0L);
      String string0 = "#";
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("#");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      float[] floatArray0 = new float[2];
      float float0 = 0.0F;
      floatArray0[0] = 0.0F;
      float float1 = (-3405.6272F);
      floatArray0[1] = (-3405.6272F);
      NumberUtils.min(floatArray0);
      NumberUtils.min(3040.5823F, 3040.5823F, 0.0F);
      short short0 = (short)389;
      short short1 = (short)0;
      NumberUtils.min((short)389, (short)389, (short)0);
      String string0 = "-#";
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("-#");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      NumberUtils.toDouble("");
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        NumberUtils.min((int[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      NumberUtils.max(intArray0);
      NumberUtils numberUtils0 = new NumberUtils();
      BigDecimal bigDecimal0 = new BigDecimal((int) numberUtils0.INTEGER_TWO);
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = 'C';
      charArray0[2] = 'c';
      charArray0[3] = ' ';
      charArray0[4] = 'c';
      NumberUtils.toDouble((BigDecimal) null, (double) numberUtils0.SHORT_ONE);
      charArray0[5] = 'w';
      BigDecimal bigDecimal1 = null;
      try {
        bigDecimal1 = new BigDecimal(charArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      short short0 = (short)70;
      NumberUtils.max((short)70, (short)70, (short)70);
      NumberUtils.min((float) (short)70, (float) (short)70, (-1084.663F));
      String string0 = "Wk,PlJ7WHiN?J,";
      NumberUtils.isParsable("Wk,PlJ7WHiN?J,");
      NumberUtils.toShort("");
      NumberUtils.min((-3429L), (long) (short)0, (-694L));
      NumberUtils.toDouble((BigDecimal) null);
      NumberUtils.min((-1888L), 0L, (-3429L));
      NumberUtils.max((-3429L), (-3429L), (-1L));
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("Wk,PlJ7WHiN?J,");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Wk,PlJ7WHiN?J,\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-4.41854);
      doubleArray0[1] = 0.0;
      NumberUtils.max(doubleArray0);
      NumberUtils.max((-4.41854), (-4.41854), (-2329.295));
      Double double0 = NumberUtils.DOUBLE_ONE;
      Double.sum(2594.200376964191, (-4.41854));
      Double.min((-4.41854), 0.0);
      NumberUtils.toScaledBigDecimal(double0);
      NumberUtils.min(doubleArray0);
      int[] intArray0 = new int[2];
      intArray0[0] = 1604;
      intArray0[1] = 100;
      NumberUtils.max(intArray0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "--";
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("--");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // -- is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      NumberUtils.compare((-24), (-24));
      NumberUtils numberUtils0 = new NumberUtils();
      short[] shortArray0 = new short[8];
      shortArray0[0] = (short)599;
      shortArray0[1] = (short) (byte)numberUtils0.BYTE_ZERO;
      shortArray0[2] = (short) (byte)numberUtils0.BYTE_MINUS_ONE;
      shortArray0[3] = (short) (byte)numberUtils0.BYTE_MINUS_ONE;
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("-");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // - is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      NumberUtils.toInt("", 102);
      NumberUtils.min(102, 102, 100);
      NumberUtils.toByte("");
      NumberUtils.isDigits("-");
      long[] longArray0 = new long[2];
      longArray0[0] = (long) 102;
      longArray0[1] = (long) 102;
      NumberUtils.min(longArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createFloat("%U>Qq=eHOpl.MOFJP");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1147.6467654495);
      doubleArray0[1] = (-907.396);
      doubleArray0[2] = 2592.8;
      doubleArray0[3] = (-1208.30989965);
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      NumberUtils.max(doubleArray0);
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      NumberUtils.toScaledBigDecimal((String) null, 0, roundingMode0);
      short short0 = (short)1;
      NumberUtils.max((short)1, (short)1, (short)751);
      int int0 = 1;
      NumberUtils.min(0, 1, 0);
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(longArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      NumberUtils.toScaledBigDecimal((Float) null);
      NumberUtils.toShort("eq4qKtQqw;Bf\"'2Fh", (short)0);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (short)0;
      intArray0[1] = (int) (short)0;
      intArray0[2] = (int) (short)0;
      intArray0[3] = (int) (short)0;
      intArray0[4] = (int) (short)0;
      NumberUtils.max(intArray0);
      NumberUtils.max((byte)110, (byte)118, (byte)110);
      NumberUtils.min((byte)0, (byte)110, (byte)0);
      NumberUtils.isCreatable("");
      long[] longArray0 = new long[6];
      longArray0[0] = (long) (short)0;
      longArray0[1] = (long) (byte)0;
      longArray0[2] = (long) (byte)118;
      longArray0[3] = (long) 0;
      longArray0[4] = 306L;
      longArray0[5] = (long) 0;
      NumberUtils.max(longArray0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-12);
      byteArray0[3] = (byte) (-3);
      NumberUtils.isNumber("$bBvOkag");
      String string0 = "zujVJVkv|t8i.";
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal("zujVJVkv|t8i.");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      NumberUtils.min(doubleArray0);
      NumberUtils.isNumber("#]");
      // Undeclared exception!
      try { 
        NumberUtils.createLong("#]");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"]\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NumberUtils.compare(1475L, 0L);
      NumberUtils.max(1, 1014, 1);
      NumberUtils.createDouble((String) null);
      NumberUtils.createLong((String) null);
      NumberUtils.toShort("-#");
      NumberUtils.toFloat((String) null);
      NumberUtils.toLong("-#", 1114L);
      NumberUtils.max((-1942), 1014, (-1942));
      NumberUtils.toShort("]n%QP_#)lS0R", (short) (-1731));
      NumberUtils numberUtils0 = new NumberUtils();
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      charArray0[1] = 'n';
      charArray0[2] = '[';
      MathContext mathContext0 = MathContext.DECIMAL64;
      BigDecimal bigDecimal0 = null;
      try {
        bigDecimal0 = new BigDecimal(charArray0, mathContext0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      NumberUtils.toByte("", (byte) (-101));
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) (byte) (-101);
      doubleArray0[1] = (double) (byte) (-101);
      doubleArray0[2] = (double) (byte) (-101);
      doubleArray0[3] = (double) (byte) (-101);
      doubleArray0[4] = (double) (byte) (-101);
      doubleArray0[5] = (double) (byte) (-101);
      NumberUtils.min(doubleArray0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-101);
      byteArray0[3] = (byte) (-101);
      byteArray0[4] = (byte) (-101);
      byteArray0[5] = (byte) (-101);
      NumberUtils.max(byteArray0);
      NumberUtils.toInt("");
      NumberUtils.max(0L, (long) (byte) (-101), 0L);
      NumberUtils.max(2005.838166136452, (-101.0), (-1525.802975059));
      NumberUtils numberUtils0 = new NumberUtils();
      NumberUtils.compare((int) numberUtils0.SHORT_MINUS_ONE, (int) numberUtils0.BYTE_ZERO);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.0F;
      NumberUtils.min(floatArray0);
      NumberUtils.toScaledBigDecimal((Float) null);
      NumberUtils.toLong((String) null, 0L);
      NumberUtils.max(8, (-787), 529);
      NumberUtils.toInt((String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)107;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)55;
      byteArray0[8] = (byte)0;
      NumberUtils.max(byteArray0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (-1093L);
      NumberUtils.max(longArray0);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) (-1093L);
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) (-1093L);
      floatArray0[3] = (float) (-1093L);
      floatArray0[4] = (float) (-1093L);
      NumberUtils.min(floatArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-3290.7375F);
      floatArray0[1] = 463.71F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = Float.NaN;
      NumberUtils.min(floatArray0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)88;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-44);
      byteArray0[5] = (byte)70;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)112;
      byteArray0[8] = (byte)100;
      NumberUtils.max(byteArray0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      NumberUtils.toInt("Xt`Nol_q*1_'nP|~IB", (-25));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte) (-16);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      NumberUtils.toDouble(bigDecimal0, Double.NaN);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NumberUtils.max(1048, 1048, 0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = (-1L);
      longArray0[1] = (-1467L);
      longArray0[2] = 3039L;
      NumberUtils.min(longArray0);
      NumberUtils.toInt("Fc%G");
      NumberUtils.toDouble("Fc%G");
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) (-1L);
      floatArray0[1] = (float) (-1467L);
      floatArray0[2] = (float) (-1467L);
      floatArray0[3] = (float) (-1L);
      floatArray0[4] = (float) (-1467L);
      NumberUtils.max(floatArray0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      NumberUtils.toShort("!+?gI`fs23Jq)|'qK");
      NumberUtils.isParsable("!+?gI`fs23Jq)|'qK");
      Double double0 = NumberUtils.DOUBLE_ZERO;
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      NumberUtils.toScaledBigDecimal(double0, 607, roundingMode0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Double double0 = new Double(1763.40126);
      Double.min(1763.40126, 1763.40126);
      Double.isFinite(0.0);
      Double.max(1763.40126, 1763.40126);
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal(double0, (-502), roundingMode0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = "The Array must not be null";
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("The Array must not be null");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // The Array must not be null is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (-1L);
      longArray0[1] = 775L;
      longArray0[2] = (-1475L);
      longArray0[3] = 0L;
      longArray0[4] = 0L;
      longArray0[5] = 4913L;
      longArray0[6] = 0L;
      NumberUtils.max(longArray0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Double double0 = NumberUtils.DOUBLE_MINUS_ONE;
      NumberUtils.toScaledBigDecimal(double0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      float float0 = 0.0F;
      NumberUtils.max(0.0F, 0.0F, 0.0F);
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte byte0 = (byte)102;
      NumberUtils.min((byte)102, (byte)102, (byte)102);
      NumberUtils.compare((-124), (-124));
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      NumberUtils.max(1L, (-1592L), 0L);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) (-1592L);
      doubleArray0[2] = (double) (-1592L);
      doubleArray0[3] = (double) 0L;
      doubleArray0[4] = (double) 0L;
      doubleArray0[5] = (double) 1L;
      doubleArray0[6] = (double) 0L;
      NumberUtils.max(doubleArray0);
      NumberUtils.toInt("");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NumberUtils.max((byte)46, (byte)108, (byte)46);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)108;
      intArray0[1] = (int) (byte)108;
      intArray0[2] = (int) (byte)46;
      intArray0[3] = (int) (byte)108;
      intArray0[4] = (int) (byte)108;
      NumberUtils.max(intArray0);
      NumberUtils.toInt("Expected type: %s, actual: %s");
      NumberUtils.toInt("0X");
      // Undeclared exception!
      try { 
        NumberUtils.createDouble("-0xGKFM>@X@\"D(3c\"'");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      NumberUtils.toDouble((String) null);
      NumberUtils.toFloat((String) null, 3184.888F);
      long[] longArray0 = new long[3];
      longArray0[0] = 0L;
      longArray0[1] = 0L;
      longArray0[2] = 0L;
      NumberUtils.min(longArray0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NumberUtils.min((short) (-1), (short) (-1), (short) (-1700));
      NumberUtils.toByte(" R1)<^=&/MI|6}{MU%", (byte) (-56));
      NumberUtils.toByte("", (byte) (-87));
      NumberUtils.toLong(" R1)<^=&/MI|6}{MU%", (long) (short) (-1));
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short) (byte) (-56);
      shortArray0[1] = (short) (-1);
      shortArray0[2] = (short) (-1);
      NumberUtils.max(shortArray0);
      long[] longArray0 = new long[1];
      longArray0[0] = (long) (byte) (-56);
      NumberUtils.min(longArray0);
      Float float0 = NumberUtils.FLOAT_MINUS_ONE;
      Float.max((byte) (-56), (short) (-1));
      Float.isFinite((short) (-1700));
      Float.max((short) (-1700), (short) (-1700));
      NumberUtils.toScaledBigDecimal(float0);
      NumberUtils.toScaledBigDecimal(float0);
      NumberUtils.isCreatable("cWNoPie}'T>Ow6");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte) (-56);
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte) (-87);
      byteArray0[6] = (byte) (-87);
      byteArray0[7] = (byte) (-87);
      byteArray0[8] = (byte) (-87);
      NumberUtils.max(byteArray0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NumberUtils.toFloat("h\"l+j4T}", 1.0F);
      Float float0 = new Float((-1.0));
      Float.isFinite(0.0F);
      Float.isFinite(0.0F);
      Float.sum((-934.3391F), (-490.2402F));
      Float.sum((-804.285F), 1.0F);
      NumberUtils.toScaledBigDecimal(float0);
      NumberUtils.toLong("N{@>", 90L);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      bigDecimal0.unscaledValue();
      bigDecimal0.toEngineeringString();
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      NumberUtils.toScaledBigDecimal(bigDecimal0, 3007, roundingMode0);
      NumberUtils.toDouble("-1", 0.0);
      NumberUtils numberUtils0 = new NumberUtils();
      long[] longArray0 = new long[3];
      longArray0[0] = (long) (short)numberUtils0.SHORT_ZERO;
      longArray0[1] = (long) (int)numberUtils0.INTEGER_MINUS_ONE;
      longArray0[2] = (long) numberUtils0.LONG_ONE;
      NumberUtils.min(longArray0);
      NumberUtils.isParsable("4");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NumberUtils.createBigInteger((String) null);
      NumberUtils.toInt((String) null, 1368);
      NumberUtils.isParsable("Oy(rGG:");
      NumberUtils.toShort((String) null);
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)0;
      shortArray0[1] = (short)0;
      shortArray0[2] = (short)55;
      shortArray0[3] = (short)0;
      NumberUtils.max(shortArray0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NumberUtils.createDouble((String) null);
      NumberUtils numberUtils0 = new NumberUtils();
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (short)numberUtils0.SHORT_ZERO;
      intArray0[1] = 1;
      NumberUtils.min(intArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)4;
      NumberUtils.max(byteArray0);
      NumberUtils.min((byte)127, (byte)0, (byte)0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      NumberUtils.toInt("0");
      NumberUtils.toByte("0", (byte) (-65));
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) (byte) (-65);
      floatArray0[2] = (-1285.592F);
      floatArray0[3] = (float) 0;
      floatArray0[4] = (float) (byte) (-65);
      floatArray0[5] = (float) (byte) (-65);
      floatArray0[6] = (float) (byte) (-65);
      floatArray0[7] = (float) (byte) (-65);
      NumberUtils.min(floatArray0);
      NumberUtils.compare(827L, (long) (byte) (-65));
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        NumberUtils.min((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
      int[] intArray0 = new int[1];
      long[] longArray0 = new long[7];
      longArray0[0] = (long) (byte)numberUtils0.BYTE_ONE;
      longArray0[1] = 682L;
      longArray0[2] = (long) numberUtils0.LONG_ONE;
      longArray0[3] = (long) numberUtils0.LONG_ONE;
      longArray0[4] = (long) (byte)numberUtils0.BYTE_ZERO;
      longArray0[5] = (long) (short)numberUtils0.SHORT_ONE;
      longArray0[6] = (long) (int)numberUtils0.INTEGER_TWO;
      NumberUtils.min(longArray0);
      intArray0[0] = (int) (short)numberUtils0.SHORT_MINUS_ONE;
      NumberUtils.max(intArray0);
      String string0 = "";
      String string1 = ":K5*:#=lMK";
      // Undeclared exception!
      try { 
        NumberUtils.max((long[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      NumberUtils.isNumber("");
      NumberUtils.max((-1.0), (-1.0), (-1.0));
      BigDecimal bigDecimal0 = new BigDecimal(2989);
      bigDecimal0.intValueExact();
      MathContext mathContext0 = MathContext.DECIMAL32;
      mathContext0.equals(bigDecimal0);
      BigDecimal bigDecimal1 = bigDecimal0.negate(mathContext0);
      bigDecimal0.min(bigDecimal1);
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      Double double0 = NumberUtils.DOUBLE_ZERO;
      Double.max((-1.0), 2989);
      Double.isFinite((-1.0));
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      NumberUtils.toScaledBigDecimal(double0, 2989, roundingMode0);
      NumberUtils.isNumber("");
      NumberUtils.max(869, 0, 2989);
      NumberUtils.toDouble("");
      NumberUtils.isCreatable((String) null);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "";
      NumberUtils.isCreatable("");
      String string1 = "";
      NumberUtils.toByte("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      NumberUtils.max(byteArray0);
      long[] longArray0 = new long[3];
      longArray0[0] = (long) (byte)0;
      longArray0[1] = (long) (byte)0;
      longArray0[2] = (long) (byte)0;
      NumberUtils.min(longArray0);
      NumberUtils.isParsable("");
      NumberUtils.toScaledBigDecimal((BigDecimal) null);
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NumberUtils.toInt("", 0);
      Float float0 = NumberUtils.FLOAT_ZERO;
      NumberUtils.toScaledBigDecimal(float0);
      NumberUtils.max((-1.0F), (-1.0F), (-2614.6F));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      NumberUtils.max((byte)82, (byte)0, (byte)82);
      NumberUtils.toFloat("");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)82;
      NumberUtils.max(byteArray0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NumberUtils.toDouble((String) null, 0.0);
      NumberUtils.max((byte)32, (byte)32, (byte)32);
      NumberUtils.max(0L, 0L, (-1L));
      BigInteger bigInteger0 = BigInteger.valueOf((-1L));
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      bigDecimal0.divideAndRemainder(bigDecimal1);
      NumberUtils.toDouble(bigDecimal0);
      BigDecimal bigDecimal2 = BigDecimal.ZERO;
      bigDecimal0.compareTo(bigDecimal2);
      NumberUtils.createFloat((String) null);
      NumberUtils.min(0.0F, (float) (-1L), (-1.0F));
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (byte)32;
      intArray0[1] = (int) (byte)32;
      NumberUtils.min(intArray0);
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      NumberUtils.min(0.0F, 1378.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      NumberUtils.max((-397L), 0L, (-397L));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      Float float0 = new Float((double) 0L);
      int int0 = 0;
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      NumberUtils.toScaledBigDecimal(float0, 0, roundingMode0);
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NumberUtils.toDouble("])+V", 492.438784206918);
      NumberUtils.min(1373, (-1), (-560));
      NumberUtils.toByte("])+V");
      NumberUtils.toShort("])+V");
      NumberUtils.toByte("])+V");
      NumberUtils.max(1L, 470L, (-1L));
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      NumberUtils.toScaledBigDecimal((String) null);
      NumberUtils.toDouble((String) null, 0.0);
      float float0 = Float.NaN;
      NumberUtils.max(Float.NaN, Float.NaN, 0.0F);
      NumberUtils.isCreatable((String) null);
      NumberUtils.isCreatable("");
      NumberUtils.isNumber("");
      String string0 = null;
      NumberUtils.toDouble((String) null, (double) Float.NaN);
      // Undeclared exception!
      try { 
        NumberUtils.min((float[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = "";
      NumberUtils.toLong("");
      // Undeclared exception!
      try { 
        NumberUtils.min((short[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = "";
      int int0 = (-2330);
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal("", (-2330), roundingMode0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NumberUtils.min(0.0F, 0.0F, 2602.33F);
      NumberUtils.toShort("--", (short)0);
      NumberUtils.toDouble((BigDecimal) null);
      NumberUtils.min((int) (short)0, (int) (short)0, (int) (short)0);
      Float float0 = NumberUtils.FLOAT_MINUS_ONE;
      Float.max((-2943.0F), (-2304.398F));
      Float.max(2602.33F, (short)0);
      NumberUtils.toScaledBigDecimal(float0);
      NumberUtils numberUtils0 = new NumberUtils();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      NumberUtils.max((-1276), 0, 0);
      Double double0 = Double.valueOf((double) 0);
      Double.min(1.0, 0);
      Double.sum((-1276), 0);
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      NumberUtils.toScaledBigDecimal(double0, (-1276), roundingMode0);
      NumberUtils.createNumber((String) null);
      NumberUtils.isParsable("");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      NumberUtils.min(0.0F, 0.0F, 0.0F);
      NumberUtils.min((double) 0.0F, (double) 0.0F, (double) 0.0F);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 4225.7105967;
      doubleArray0[1] = (double) 0.0F;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (double) 0.0F;
      doubleArray0[4] = (double) 0.0F;
      doubleArray0[5] = (double) 0.0F;
      doubleArray0[6] = (double) 0.0F;
      doubleArray0[7] = (double) 0.0F;
      doubleArray0[8] = (double) 0.0F;
      NumberUtils.min(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      NumberUtils.min((byte)0, (byte)88, (byte)0);
      NumberUtils.max((short)4136, (short)0, (short)89);
      NumberUtils.compare((int) (short)0, (int) (short)0);
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NumberUtils.min((byte)0, (byte)0, (byte) (-104));
      NumberUtils.max((short)120, (short)2055, (short)1);
      NumberUtils.createBigDecimal((String) null);
      NumberUtils numberUtils0 = new NumberUtils();
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      NumberUtils.toScaledBigDecimal((BigDecimal) null, 4938, roundingMode0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      NumberUtils.min(162.7F, 162.7F, 162.7F);
      NumberUtils.toInt("", 2087);
      NumberUtils.toInt("org.apache.commons.lang3.math.NumberUtils", (-275));
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      NumberUtils.max(68, (-2640), (-2640));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NumberUtils.toDouble("2m\u0006|1>M#5Tw1$", 1.0);
      NumberUtils.toByte("2m\u0006|1>M#5Tw1$");
      NumberUtils.min(0L, (long) (byte)0, (long) (byte)0);
      NumberUtils.min((long) (byte)0, (long) (byte)0, 0L);
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (byte)0;
      intArray0[1] = (int) (byte)0;
      NumberUtils.min(intArray0);
      NumberUtils.compare((byte)0, (byte)76);
      NumberUtils.max((short) (-425), (short)0, (short)1);
      NumberUtils.isCreatable((String) null);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) (short)1;
      floatArray0[2] = (float) 0L;
      floatArray0[3] = (float) (short)0;
      floatArray0[4] = 0.0F;
      floatArray0[5] = (float) 0;
      NumberUtils.min(floatArray0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      float[] floatArray0 = new float[9];
      floatArray0[0] = 101.51163F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = 3932.109F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = 834.0F;
      floatArray0[5] = (-1.0F);
      floatArray0[6] = 0.0F;
      floatArray0[7] = 246.5354F;
      floatArray0[8] = (-1215.341F);
      NumberUtils.min(floatArray0);
      String string0 = "e9k";
      NumberUtils.isNumber("e9k");
      // Undeclared exception!
      try { 
        NumberUtils.min((long[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      NumberUtils.toShort("", (short) (-1));
      NumberUtils.max((int) (short) (-1), (int) (short) (-1), (int) (short) (-1));
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = "MMPtX5#p5?7+7";
      byte byte0 = (byte) (-31);
      NumberUtils.toByte("MMPtX5#p5?7+7", (byte) (-31));
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("MMPtX5#p5?7+7");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"MMPtX5#p5?7+7\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      NumberUtils.min(byteArray0);
      String string0 = "#k";
      NumberUtils.toInt("#k", (int) (byte)0);
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      NumberUtils.min(340.5817, 340.5817, 1.0);
      NumberUtils.toDouble((String) null, 1.0);
      NumberUtils.createNumber((String) null);
      NumberUtils.compare(1, (-1));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)594;
      shortArray0[1] = (short) (-2114);
      shortArray0[2] = (short)0;
      shortArray0[3] = (short)0;
      NumberUtils.min(shortArray0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = (-1L);
      longArray0[1] = 171L;
      longArray0[2] = (-2420L);
      longArray0[3] = 1L;
      longArray0[4] = 1L;
      longArray0[5] = 0L;
      NumberUtils.min(longArray0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      NumberUtils.toDouble(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(2118);
      Integer integer0 = NumberUtils.INTEGER_TWO;
      bigDecimal0.equals(integer0);
      bigDecimal0.shortValueExact();
      bigDecimal0.stripTrailingZeros();
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      Float float0 = new Float((double) 2118);
      Float.min(2118, (-1015.723F));
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      NumberUtils.toScaledBigDecimal(float0, 2118, roundingMode0);
      NumberUtils.max(0.0, 1933.7, (double) (short)2118);
      NumberUtils.createBigInteger((String) null);
      NumberUtils.isParsable((String) null);
      NumberUtils.toScaledBigDecimal(bigDecimal0, (-437), roundingMode0);
      Double double0 = NumberUtils.DOUBLE_ONE;
      NumberUtils.toScaledBigDecimal(double0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      short short0 = (short)760;
      short short1 = (short)0;
      NumberUtils.min((short)760, (short)48, (short)0);
      String string0 = "@L_LY0[[";
      // Undeclared exception!
      try { 
        NumberUtils.createLong("@L_LY0[[");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"@L_LY0[[\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short) (-1144);
      shortArray0[1] = (short) (-1369);
      shortArray0[2] = (short)2365;
      shortArray0[3] = (short)88;
      shortArray0[4] = (short)0;
      shortArray0[5] = (short)0;
      NumberUtils.max(shortArray0);
      NumberUtils.min((short)0, (short)2215, (short)1529);
      NumberUtils.min(0L, (-2545L), (long) (short)88);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      MathContext mathContext0 = new MathContext(1224, roundingMode0);
      bigDecimal0.abs(mathContext0);
      bigDecimal0.floatValue();
      NumberUtils.toScaledBigDecimal(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Float float0 = NumberUtils.FLOAT_ZERO;
      Float.isFinite(0.0F);
      NumberUtils.toScaledBigDecimal(float0);
      NumberUtils.min(2206, 0, 0);
      long[] longArray0 = new long[4];
      longArray0[0] = (long) 0;
      longArray0[1] = (long) 0;
      longArray0[2] = (long) 2206;
      longArray0[3] = (long) 0;
      NumberUtils.min(longArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      NumberUtils.isCreatable("5f{nsfMY(pmZh@");
      NumberUtils.toShort("0X", (short)848);
      NumberUtils.toFloat("5f{nsfMY(pmZh@");
      NumberUtils.toLong("0X");
      NumberUtils.min((long) (short)848, 1267L, 1267L);
      NumberUtils.min(848L, (-492L), 848L);
      NumberUtils.compare((-1182), (-1182));
      NumberUtils.min((byte)22, (byte)0, (byte) (-105));
      NumberUtils.compare((byte) (-105), (byte) (-105));
      NumberUtils.max((byte)0, (byte)20, (byte) (-105));
      NumberUtils.isParsable("");
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NumberUtils.toInt((String) null, 0);
      NumberUtils numberUtils0 = new NumberUtils();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) numberUtils0.BYTE_MINUS_ONE;
      byteArray0[1] = (byte) numberUtils0.BYTE_ONE;
      byteArray0[2] = (byte) numberUtils0.BYTE_ZERO;
      byteArray0[3] = (byte) numberUtils0.BYTE_ZERO;
      NumberUtils.min(byteArray0);
      NumberUtils.min((-297L), 0L, 1L);
      NumberUtils.min(0.0F, (-1727.4708F), (-4842.454F));
      NumberUtils.compare((short) numberUtils0.SHORT_ZERO, (short) numberUtils0.BYTE_ONE);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short)0;
      NumberUtils.max(shortArray0);
      long[] longArray0 = new long[5];
      longArray0[0] = (long) (short)0;
      longArray0[1] = (long) (short)0;
      longArray0[2] = (long) (short)0;
      longArray0[4] = (long) (short)0;
      NumberUtils.min(longArray0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NumberUtils.max((byte)98, (byte)76, (byte)0);
      NumberUtils.isParsable("Z_B->5g");
      NumberUtils.toDouble("0");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      NumberUtils.compare((byte)82, (byte) (-122));
      NumberUtils.toInt("<", 0);
      Double double0 = new Double(0.0);
      Double.isFinite(Double.NaN);
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      NumberUtils.toScaledBigDecimal(double0, 204, roundingMode0);
      NumberUtils.min((short) (byte)82, (short)43, (short) (byte) (-122));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      NumberUtils.toInt("", 626);
      long[] longArray0 = new long[5];
      longArray0[0] = 3665L;
      longArray0[1] = (long) 626;
      longArray0[2] = (long) 626;
      longArray0[3] = (long) 626;
      longArray0[4] = (long) 626;
      NumberUtils.max(longArray0);
      NumberUtils.toShort("");
      NumberUtils.compare((byte)0, (byte)43);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(3720);
      BigInteger bigInteger0 = new BigInteger(3720, mockRandom0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      NumberUtils.toDouble(bigDecimal0, 0.0);
      NumberUtils.isNumber("");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 88;
      NumberUtils.min(88, 88, 88);
      NumberUtils.toInt("", 88);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 88;
      floatArray0[1] = (float) 88;
      floatArray0[2] = (float) 88;
      floatArray0[3] = (float) 88;
      floatArray0[4] = (float) 88;
      floatArray0[5] = (float) 88;
      floatArray0[6] = (float) 88;
      floatArray0[7] = (-1669.3484F);
      NumberUtils.min(floatArray0);
      NumberUtils.max((double) 88.0F, (double) 88.0F, (-378.9723181621152));
      NumberUtils.toFloat("X9uWY!?");
      NumberUtils.min(0.0F, 1.0F, 0.0F);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1669.3484F);
      NumberUtils.min(doubleArray0);
      NumberUtils.toInt(".4]E~~r:,.+x[5/3P", 88);
      NumberUtils.min(floatArray0);
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal("0?[/jFAV^T4()<4rn");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte byte0 = (byte)31;
      NumberUtils.compare((byte)31, (byte)31);
      String string0 = "";
      NumberUtils.toInt("", 0);
      // Undeclared exception!
      try { 
        NumberUtils.max((short[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte byte0 = (byte)92;
      NumberUtils.toByte("a`'Joz q", (byte)92);
      // Undeclared exception!
      try { 
        NumberUtils.createLong("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      NumberUtils.max((byte)0, (byte)0, (byte)0);
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      NumberUtils.toScaledBigDecimal((Float) null, (-126), roundingMode0);
      NumberUtils.compare((short) (byte)0, (short)0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NumberUtils.max((-4063.07108006), (-1347.23928001), 1093.984536905097);
      NumberUtils.toLong((String) null);
      NumberUtils.toScaledBigDecimal((Float) null);
      NumberUtils.compare((byte)70, (byte)70);
      NumberUtils.toDouble((String) null, (-1347.23928001));
      NumberUtils.compare(0L, 2609L);
      NumberUtils.toByte((String) null, (byte)30);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      NumberUtils.toByte("--");
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short) (byte)0;
      shortArray0[1] = (short) (byte)0;
      shortArray0[2] = (short) (byte)0;
      NumberUtils.min(shortArray0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short)1;
      NumberUtils.max(shortArray0);
      NumberUtils.min((byte)113, (byte) (-8), (byte)0);
      NumberUtils.compare(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      NumberUtils.isDigits("YsF");
      NumberUtils.compare((short)1705, (short)1705);
      NumberUtils.compare(2146L, (long) 0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      NumberUtils.min((byte)46, (byte) (-28), (byte)46);
      NumberUtils.min((float) (byte) (-28), 3195.312F, 3195.312F);
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)0;
      shortArray0[1] = (short)2479;
      shortArray0[2] = (short)1080;
      shortArray0[3] = (short) (-1);
      NumberUtils.max(shortArray0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.max((short[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NumberUtils.isNumber("");
      NumberUtils.min((-147.090355111812), (-147.090355111812), (-147.090355111812));
      NumberUtils.isNumber("");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Double double0 = NumberUtils.DOUBLE_ONE;
      NumberUtils.toScaledBigDecimal(double0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      NumberUtils.toByte("!");
      BigDecimal bigDecimal0 = new BigDecimal((int) (byte)0);
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      NumberUtils.max(0, (int) (byte)0, 0);
      NumberUtils.min((-978), (-961), 0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      short[] shortArray0 = new short[3];
      short short0 = (short) (-2871);
      shortArray0[0] = (short) (-2871);
      short short1 = (short) (-1);
      shortArray0[1] = (short) (-1);
      short short2 = (short)3;
      shortArray0[2] = (short)3;
      NumberUtils.min(shortArray0);
      String string0 = "Array cannot be empty.";
      NumberUtils.isParsable("Array cannot be empty.");
      // Undeclared exception!
      try { 
        NumberUtils.max((int[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      NumberUtils.isNumber("U");
      NumberUtils.toDouble(",", 0.0);
      NumberUtils.min(0, 0, 1314);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      NumberUtils.isDigits("0");
      float[] floatArray0 = new float[3];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 2476.1F;
      floatArray0[2] = (-1376.49F);
      NumberUtils.min(floatArray0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      NumberUtils.toScaledBigDecimal((Float) null);
      NumberUtils.isParsable("A blank string is not a valid number");
      long[] longArray0 = new long[2];
      longArray0[0] = 1L;
      longArray0[1] = (-1L);
      NumberUtils.max(longArray0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1L);
      NumberUtils.max(doubleArray0);
      NumberUtils.toInt("");
      NumberUtils.toFloat("");
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short)70;
      NumberUtils.min(shortArray0);
      NumberUtils.toScaledBigDecimal((Float) null);
      NumberUtils.isParsable("Array cannot be empty.");
      NumberUtils.compare((byte)110, (byte)0);
      NumberUtils.max(282.0F, (float) (-1L), 0.0F);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NumberUtils.isParsable("/l6GR");
      NumberUtils.isCreatable("AU|kK");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte) (-122);
      NumberUtils.max(byteArray0);
      NumberUtils.max((short) (-1338), (short)3398, (short)3275);
      Double double0 = new Double((byte) (-122));
      Double.max(0.0, 308.8);
      Double.max(0.0, (-954.2));
      Double.min((byte) (-122), (short)3398);
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      NumberUtils.toScaledBigDecimal(double0, 0, roundingMode0);
      NumberUtils.toDouble("Qk~nB1EK2D", 0.0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = "Ki,iKO1v\"Kw";
      float float0 = (-5757.0F);
      NumberUtils.toFloat("Ki,iKO1v\"Kw", (-5757.0F));
      // Undeclared exception!
      try { 
        NumberUtils.createLong("Ki,iKO1v\"Kw");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Ki,iKO1v\"Kw\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      NumberUtils.max((short)0, (short)1009, (short)0);
      NumberUtils.compare((byte) (-19), (byte) (-19));
      NumberUtils.max((byte) (-19), (byte) (-19), (byte) (-19));
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      NumberUtils.toScaledBigDecimal((Float) null);
      NumberUtils.max((short)0, (short) (-415), (short) (-415));
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (short)0;
      doubleArray0[1] = (double) (short)0;
      NumberUtils.max(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      NumberUtils.isParsable("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)44;
      byteArray0[3] = (byte)28;
      byteArray0[4] = (byte)65;
      byteArray0[5] = (byte)111;
      NumberUtils.max(byteArray0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      NumberUtils.max((short) (-3205), (short) (-3205), (short) (-3205));
      NumberUtils.toByte("");
      // Undeclared exception!
      try { 
        NumberUtils.createLong("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 0L;
      NumberUtils.max(longArray0);
      NumberUtils.toShort("");
      NumberUtils.isCreatable("");
      RoundingMode roundingMode0 = RoundingMode.HALF_UP;
      NumberUtils.toScaledBigDecimal((Double) null, (int) (short)0, roundingMode0);
      NumberUtils.max((-1.0F), (float) 0L, (float) 0L);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Double double0 = NumberUtils.DOUBLE_ONE;
      Double.max(1599.0, 0.0);
      Double.max((-1341.3672), 1599.0);
      int int0 = 48;
      Double.sum(0.0, 48);
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      BigDecimal bigDecimal0 = NumberUtils.toScaledBigDecimal(double0, 48, roundingMode0);
      float float0 = 441.5F;
      BigDecimal bigDecimal1 = BigDecimal.ZERO;
      MathContext mathContext0 = MathContext.DECIMAL64;
      // Undeclared exception!
      try { 
        bigDecimal0.divideToIntegralValue(bigDecimal1, mathContext0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Division by zero
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      NumberUtils.compare((byte)0, (byte)0);
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal1 = new BigDecimal(bigInteger0);
      bigDecimal1.abs();
      bigInteger0.intValueExact();
      MathContext mathContext0 = MathContext.DECIMAL128;
      mathContext0.getPrecision();
      bigDecimal1.round(mathContext0);
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      MathContext mathContext1 = new MathContext(97, roundingMode0);
      bigDecimal0.divide(bigDecimal1, mathContext1);
      RoundingMode roundingMode1 = RoundingMode.FLOOR;
      NumberUtils.toScaledBigDecimal(bigDecimal0, 0, roundingMode1);
      NumberUtils.compare((long) (byte)102, (long) (byte)102);
      NumberUtils.min(byteArray0);
      NumberUtils.toLong("-#", (-1L));
      NumberUtils.toScaledBigDecimal(bigDecimal0, (-1), roundingMode0);
      NumberUtils.min(byteArray0);
      NumberUtils numberUtils0 = new NumberUtils();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = ")!9";
      NumberUtils.toDouble(")!9", 4067.373263719);
      NumberUtils numberUtils0 = new NumberUtils();
      int int0 = 1;
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      RoundingMode roundingMode1 = RoundingMode.UP;
      BigDecimal bigDecimal0 = NumberUtils.toScaledBigDecimal(numberUtils0.FLOAT_MINUS_ONE, 102, roundingMode1);
      RoundingMode roundingMode2 = RoundingMode.UP;
      BigDecimal bigDecimal1 = NumberUtils.toScaledBigDecimal(numberUtils0.FLOAT_MINUS_ONE, (int) numberUtils0.SHORT_MINUS_ONE, roundingMode2);
      MathContext mathContext0 = MathContext.UNLIMITED;
      bigDecimal0.remainder(bigDecimal1, mathContext0);
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger(")!9");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \")!9\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      NumberUtils.toInt("0");
      // Undeclared exception!
      try { 
        NumberUtils.createFloat("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createDouble("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      NumberUtils.min(103.906F, 103.906F, 103.906F);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 103.906F;
      doubleArray0[1] = (double) 103.906F;
      doubleArray0[2] = (double) 103.906F;
      doubleArray0[3] = (double) 103.906F;
      doubleArray0[4] = (double) 103.906F;
      doubleArray0[5] = (double) 103.906F;
      NumberUtils.min(doubleArray0);
      String string0 = "=i+t/8A{";
      NumberUtils.toByte("=i+t/8A{");
      NumberUtils.toLong("4Iviy63", (long) (byte)0);
      NumberUtils.compare((byte)0, (byte)0);
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal("=i+t/8A{", (int) (byte)0, roundingMode0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      NumberUtils.min((short)1262, (short)1262, (short)1262);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 4;
      intArray0[1] = 3;
      NumberUtils.min(intArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createFloat("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
      NumberUtils.createInteger((String) null);
      NumberUtils.toLong("");
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (short)numberUtils0.SHORT_ZERO;
      intArray0[1] = (int) (byte)numberUtils0.BYTE_MINUS_ONE;
      intArray0[2] = (int) numberUtils0.INTEGER_TWO;
      intArray0[3] = (int) (byte)numberUtils0.BYTE_ONE;
      intArray0[4] = (int) (short)numberUtils0.SHORT_ONE;
      NumberUtils.max(intArray0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createInteger("ytc{yx]f!|Ty.PfC?");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"ytc{yx]f!|Ty.PfC?\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String string0 = "gbn)'";
      NumberUtils.toLong("gbn)'");
      String string1 = "zx(Rw-?NOS+B(6}9,C";
      NumberUtils.toDouble("zx(Rw-?NOS+B(6}9,C", (double) 0L);
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("gbn)'");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // gbn)' is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      NumberUtils.toDouble("", (-1615.59883654));
      // Undeclared exception!
      try { 
        NumberUtils.createDouble("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      NumberUtils.toFloat("The Array must not be null", (-2862.62F));
      NumberUtils.toByte("The Array must not be null");
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("2@bn<PifV&_*W");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      NumberUtils.toFloat("H]|~ +q:toH#Oe[");
      float[] floatArray0 = new float[7];
      floatArray0[0] = 288.05F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 1104.0F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = 0.0F;
      floatArray0[6] = 0.0F;
      NumberUtils.max(floatArray0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      NumberUtils.min(0.0F, 0.0F, 0.0F);
      float[] floatArray0 = new float[2];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      NumberUtils.max(floatArray0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte)0;
      NumberUtils.min(byteArray0);
      NumberUtils.max(byteArray0);
      NumberUtils.min(2263.0022F, (-4434.0F), (float) (byte)62);
      NumberUtils.toByte("\"$\"J>/fvmSL^.");
      Double double0 = NumberUtils.DOUBLE_ZERO;
      Double.max((byte) (-124), (byte)0);
      Double.isFinite((byte)62);
      NumberUtils.toScaledBigDecimal(double0);
      NumberUtils.max(byteArray0);
      int[] intArray0 = new int[9];
      intArray0[0] = (int) (byte)0;
      intArray0[1] = (int) (byte) (-124);
      intArray0[2] = (int) (byte)0;
      intArray0[3] = (int) (byte)62;
      intArray0[4] = (int) (byte) (-124);
      intArray0[5] = (int) (byte)62;
      intArray0[6] = (int) (byte)0;
      intArray0[7] = (int) (byte) (-124);
      intArray0[8] = (int) (byte)62;
      NumberUtils.min(intArray0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      NumberUtils.isDigits("3\"7E2)0)Xr$");
      NumberUtils numberUtils0 = new NumberUtils();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) numberUtils0.BYTE_MINUS_ONE;
      byteArray0[1] = (byte) numberUtils0.BYTE_ZERO;
      byteArray0[2] = (byte) numberUtils0.BYTE_ZERO;
      byteArray0[3] = (byte) numberUtils0.BYTE_ONE;
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) numberUtils0.BYTE_ONE;
      byteArray0[6] = (byte) numberUtils0.BYTE_ZERO;
      byteArray0[7] = (byte) numberUtils0.BYTE_ONE;
      byteArray0[8] = (byte) numberUtils0.BYTE_ZERO;
      NumberUtils.min(byteArray0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      NumberUtils.createLong("0");
      NumberUtils.toShort("zY!qs#");
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short)0;
      NumberUtils.max(shortArray0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)45;
      NumberUtils.min(byteArray0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = ".$g;C";
      NumberUtils.toFloat(".$g;C", 0.0F);
      NumberUtils.toInt("");
      NumberUtils.compare((long) 0, (long) 0);
      byte byte0 = (byte)0;
      NumberUtils.compare((byte)0, (byte)0);
      NumberUtils.max(0.0, (-2090.839645931845), (double) (byte)0);
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      float[] floatArray0 = new float[6];
      floatArray0[0] = (-162.0F);
      floatArray0[1] = 2346.1F;
      floatArray0[2] = 741.9213F;
      floatArray0[3] = Float.NaN;
      floatArray0[4] = (-162.0F);
      floatArray0[5] = Float.NaN;
      NumberUtils.min(floatArray0);
      // Undeclared exception!
      try { 
        NumberUtils.createNumber("0x;./=/W){Y");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \";./=/W){Y\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      float[] floatArray0 = new float[2];
      floatArray0[0] = (-164.294F);
      floatArray0[1] = (-2418.9F);
      NumberUtils.max(floatArray0);
      NumberUtils.toFloat("/Y/I0P");
      NumberUtils.compare(2, 2);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 0;
      intArray0[6] = 2;
      intArray0[7] = (-2380);
      intArray0[8] = 2;
      NumberUtils.max(intArray0);
      NumberUtils.toFloat("/Y/I0P");
      NumberUtils.isCreatable("`L%6\"u2c");
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)4;
      shortArray0[1] = (short)8192;
      shortArray0[2] = (short)70;
      shortArray0[3] = (short) (-565);
      NumberUtils.max(shortArray0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short) (-1144);
      shortArray0[1] = (short) (-1369);
      shortArray0[3] = (short)88;
      shortArray0[4] = (short)0;
      shortArray0[5] = (short)0;
      NumberUtils.min((short)0, (short)2215, (short) (-856));
      NumberUtils.min(0L, (-2545L), (long) (short)88);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      MathContext mathContext0 = new MathContext(1224, roundingMode0);
      bigDecimal0.abs(mathContext0);
      bigDecimal0.floatValue();
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (short) (-1369);
      NumberUtils.max(floatArray0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      NumberUtils.isCreatable("0Wt[LlM");
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = BigInteger.ZERO;
      bigInteger0.max(bigInteger1);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      NumberUtils.toScaledBigDecimal(bigDecimal0);
      NumberUtils.max((byte) (-64), (byte) (-64), (byte) (-114));
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      NumberUtils.max(0.0, 0.0, (-2181.143687));
      NumberUtils.isCreatable("");
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-2181.143687);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-2181.143687);
      doubleArray0[5] = 0.0;
      NumberUtils.min(doubleArray0);
      Float float0 = NumberUtils.FLOAT_ONE;
      BigDecimal bigDecimal0 = NumberUtils.toScaledBigDecimal(float0);
      BigDecimal.valueOf(1L, 55);
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      NumberUtils.toScaledBigDecimal(bigDecimal0, 5063, roundingMode0);
      short[] shortArray0 = new short[9];
      shortArray0[0] = (short) (-2540);
      shortArray0[1] = (short)1580;
      shortArray0[2] = (short)0;
      shortArray0[3] = (short)0;
      shortArray0[4] = (short)0;
      shortArray0[5] = (short)120;
      shortArray0[6] = (short)101;
      shortArray0[7] = (short)247;
      shortArray0[8] = (short)4052;
      NumberUtils.min(shortArray0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String string0 = "";
      NumberUtils.toByte("");
      int int0 = (-1);
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      // Undeclared exception!
      try { 
        NumberUtils.toScaledBigDecimal("", (-1), roundingMode0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      NumberUtils.compare((-1983L), 0L);
      NumberUtils.toShort((String) null);
      NumberUtils.toShort((String) null, (short)2364);
      NumberUtils.max((short)46, (short)1, (short)152);
      NumberUtils.compare((short)0, (short) (-637));
      BigDecimal bigDecimal0 = NumberUtils.toScaledBigDecimal((Double) null);
      Float float0 = NumberUtils.FLOAT_ZERO;
      Float.isFinite((-2184.294F));
      Float.min(0.0F, 5);
      RoundingMode roundingMode0 = RoundingMode.UP;
      NumberUtils.toScaledBigDecimal(float0, 5, roundingMode0);
      NumberUtils.max(0.0F, 0.0F, 1555.8F);
      NumberUtils.compare((-2384), 2097);
      NumberUtils.min((int) (short)2364, (-458), (-1));
      NumberUtils.toScaledBigDecimal(bigDecimal0, (-1), roundingMode0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      NumberUtils.min(234.1F, 234.1F, 234.1F);
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-96);
      byteArray0[0] = (byte) (-96);
      NumberUtils.min(byteArray0);
      String string0 = "Wt[LlM";
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("Wt[LlM");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Wt[LlM\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      NumberUtils.isCreatable("|");
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      NumberUtils.toLong((String) null);
      NumberUtils.isParsable("]%tFp\"y&1E");
      int int0 = 546;
      int int1 = 65;
      NumberUtils.max(546, 546, 65);
      // Undeclared exception!
      try { 
        NumberUtils.min((short[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Double double0 = NumberUtils.DOUBLE_ZERO;
      int int0 = (-1331);
      RoundingMode roundingMode0 = RoundingMode.HALF_EVEN;
      NumberUtils.toScaledBigDecimal(double0, (-1331), roundingMode0);
      NumberUtils numberUtils0 = new NumberUtils();
      double double1 = 1387.5871443;
      String string0 = ";./=/W){\\Y";
      // Undeclared exception!
      try { 
        NumberUtils.createNumber(";./=/W){Y");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // ;./=/W){Y is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Double double0 = NumberUtils.DOUBLE_ZERO;
      RoundingMode roundingMode0 = RoundingMode.HALF_EVEN;
      NumberUtils.toScaledBigDecimal(double0, (-1331), roundingMode0);
      NumberUtils numberUtils0 = new NumberUtils();
      double double1 = 1387.5871443;
      String string0 = ";./=/W){\\Y";
      // Undeclared exception!
      try { 
        NumberUtils.createNumber(";./=/W){Y");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // ;./=/W){Y is not a valid number.
         //
         verifyException("org.apache.commons.lang3.math.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = (-1L);
      longArray0[1] = 171L;
      longArray0[2] = (-2423L);
      longArray0[3] = 1L;
      longArray0[4] = 1L;
      longArray0[5] = (-6L);
      long long0 = NumberUtils.min(longArray0);
      assertEquals((-2423L), long0);
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      bigDecimal0.longValueExact();
      double double0 = NumberUtils.toDouble(bigDecimal0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1867.426442457104);
      doubleArray0[1] = (double) 1L;
      doubleArray0[2] = (double) (-1L);
      doubleArray0[3] = (double) 1L;
      double double1 = NumberUtils.max(doubleArray0);
      assertEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      int int0 = NumberUtils.compare((short)1013, (short) (-512));
      assertEquals(1, int0);
      
      long[] longArray0 = new long[5];
      longArray0[0] = (long) (short)1013;
      longArray0[1] = (long) (short) (-512);
      longArray0[2] = (long) (short) (-512);
      longArray0[3] = (long) (short)1013;
      longArray0[4] = (long) (short) (-512);
      long long0 = NumberUtils.max(longArray0);
      assertEquals(1013L, long0);
      
      BigDecimal bigDecimal0 = new BigDecimal(0);
      bigDecimal0.intValueExact();
      bigDecimal0.toEngineeringString();
      Object object0 = new Object();
      bigDecimal0.equals(object0);
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      BigDecimal bigDecimal2 = bigDecimal0.subtract(bigDecimal1);
      bigDecimal0.scale();
      double double0 = NumberUtils.toDouble(bigDecimal0, 1.0);
      assertEquals(0.0, double0, 0.01);
      
      NumberUtils.createBigInteger("0");
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      NumberUtils.toScaledBigDecimal(bigDecimal2, 2704, roundingMode0);
      NumberUtils.isNumber("{NXK");
      BigDecimal bigDecimal3 = NumberUtils.toScaledBigDecimal((Float) null);
      assertEquals((short)0, bigDecimal3.shortValue());
      
      short short0 = NumberUtils.max((short)1013, (short)0, (short)0);
      assertEquals((short)1013, short0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-36);
      byte byte0 = NumberUtils.max(byteArray0);
      assertEquals((byte)1, byte0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Double double0 = NumberUtils.DOUBLE_ZERO;
      Double.isFinite(0.0);
      Double.max((-1803.9375867517), (-1.0));
      Double.isFinite(Double.NaN);
      Double.sum(0.0, (-1.0));
      Double.max(780, (-104.2482319));
      Double.sum(0.0, (-104.2482319));
      Double.min(0.0, (-1193.538166));
      RoundingMode roundingMode0 = RoundingMode.HALF_EVEN;
      NumberUtils.toScaledBigDecimal(double0, 780, roundingMode0);
      NumberUtils.toLong("5JS>aO3enK.");
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 0L;
      floatArray0[1] = (float) 0L;
      NumberUtils.min(floatArray0);
      NumberUtils.toInt("5JS>aO3enK.", 108);
      NumberUtils.isNumber("5JS>aO3enK.");
      NumberUtils.max((long) 108, (long) 108, (long) 780);
      NumberUtils.compare(0L, (long) 780);
      NumberUtils.min(floatArray0);
      NumberUtils.toByte("NLXfLF6FCV/RFklC");
      NumberUtils.min(108, (int) (byte)0, 108);
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("-");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         verifyException("java.math.BigInteger", e);
      }
  }
}
