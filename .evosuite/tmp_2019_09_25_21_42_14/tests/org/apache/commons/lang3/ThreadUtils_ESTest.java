/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 02:34:30 GMT 2019
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.ThreadUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ThreadUtils_ESTest extends ThreadUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadGroups(threadGroup0, true, (ThreadUtils.ThreadGroupPredicate) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The predicate must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(2153L);
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      MockThread mockThread0 = new MockThread(threadGroup0, (Runnable) null, "");
      Thread[] threadArray0 = new Thread[9];
      MockThread mockThread1 = new MockThread((Runnable) null);
      threadArray0[0] = (Thread) mockThread1;
      threadArray0[1] = (Thread) mockThread0;
      threadArray0[2] = (Thread) mockThread0;
      threadArray0[3] = (Thread) mockThread0;
      threadArray0[4] = (Thread) mockThread0;
      threadArray0[5] = (Thread) mockThread0;
      threadArray0[6] = (Thread) mockThread0;
      threadArray0[7] = (Thread) mockThread0;
      threadArray0[8] = (Thread) mockThread0;
      MockThread.enumerate(threadArray0);
      MockThread mockThread2 = new MockThread(mockThread0);
      threadUtils_ThreadIdPredicate0.test(mockThread2);
      ThreadUtils.findThreadById(2153L);
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate1 = new ThreadUtils.ThreadIdPredicate(2153L);
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      ThreadGroup threadGroup1 = ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.findThreadById(2153L, "");
      ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) threadUtils_ThreadIdPredicate1);
      threadUtils_NamePredicate0.test(threadArray0[3]);
      ThreadUtils.findThreadGroupsByName("");
      ThreadUtils.findThreadById(1L, "");
      ThreadUtils.findThreadGroups(threadGroup0, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadById(15L, threadGroup1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThreadUtils.findThreadsByName("RMI TCP Connection(1)-127.0.0.1", "RMI Runtime");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadById(304L, threadGroup0);
      ThreadUtils.getAllThreads();
      ThreadUtils.getAllThreads();
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.getAllThreads();
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.findThreadsByName("RMI TCP Connection(1)-127.0.0.1");
      ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("RMI Runtime");
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.findThreadsByName("RMI Runtime");
      MockThread mockThread0 = new MockThread((Runnable) null);
      threadUtils_NamePredicate0.test(mockThread0);
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.getAllThreads();
      ThreadUtils.getAllThreads();
      ThreadGroup threadGroup1 = ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test(threadGroup1);
      ThreadGroup threadGroup2 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadGroups(threadGroup2, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThreadUtils.findThreadById(17L, "akoWyv6p;NV/}++Zw+");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("akoWyv6p;NV/}++Zw+");
      ThreadUtils.findThreads(threadGroup0, true, (ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadById(17L);
      ThreadUtils.findThreadById(2490L, threadGroup0);
      ThreadUtils.findThreadById(2490L);
      ThreadUtils.findThreadById(1488L, "akoWyv6p;NV/}++Zw+");
      threadUtils_NamePredicate0.test((Thread) null);
      ThreadUtils.findThreadGroupsByName("");
      ThreadUtils.findThreadsByName(".CEu*)NBdEFWj");
      ThreadUtils.findThreadById(2490L, threadGroup0);
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadGroupsByName("'");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ThreadUtils.findThreadsByName("RMI TCP Connection(1)-127.0.0.1", "RMI Runtime");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadById(304L, threadGroup0);
      ThreadUtils.getAllThreads();
      ThreadUtils.getAllThreads();
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.getAllThreads();
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.findThreadsByName("RMI Runtime", threadGroup0);
      ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("RMI Runtime");
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.findThreadsByName("RMI Runtime");
      MockThread mockThread0 = new MockThread((Runnable) null);
      threadUtils_NamePredicate0.test(mockThread0);
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.getAllThreads();
      ThreadUtils.getAllThreads();
      ThreadGroup threadGroup1 = ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test(threadGroup1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(1L);
      ThreadUtils.findThreads(threadGroup0, true, (ThreadUtils.ThreadPredicate) threadUtils_ThreadIdPredicate0);
      ThreadGroup threadGroup1 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      threadUtils_NamePredicate0.test(threadGroup1);
      ThreadUtils.findThreadGroupsByName("");
      ThreadGroup threadGroup2 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate1 = new ThreadUtils.NamePredicate("N ");
      ThreadUtils.findThreadGroups(threadGroup2, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate1);
      ThreadUtils.findThreadById(1L, "N ");
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.getAllThreads();
      threadUtils_NamePredicate1.test((Thread) null);
      ThreadUtils.findThreadsByName("", "org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate");
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      threadUtils_ThreadIdPredicate0.test((Thread) null);
      ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) threadUtils_ThreadIdPredicate0);
      threadUtils_NamePredicate0.test(threadGroup1);
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      threadUtils_ThreadIdPredicate0.test((Thread) null);
      ThreadUtils.getAllThreadGroups();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ThreadUtils.findThreadsByName("", "");
      ThreadUtils.findThreadsByName("", "");
      // Undeclared exception!
      try { 
        ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The predicate must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "";
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      MockThread mockThread0 = new MockThread();
      threadUtils_NamePredicate0.test((Thread) mockThread0);
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadById(465L, threadGroup0);
      ThreadUtils.findThreadGroups(threadGroup0, false, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadById(465L, "");
      ThreadUtils.findThreadsByName("", "");
      ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadsByName("", "");
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById(465L, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread group name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "";
      ThreadUtils.findThreadsByName("");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreads(threadGroup0, false, (ThreadUtils.ThreadPredicate) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The predicate must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(1L);
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread(mockThread0);
      MockThread.interrupted();
      MockThread.interrupted();
      threadUtils_ThreadIdPredicate0.test(mockThread1);
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("Q#v7MI=D#*F=[,4ZF8$");
      ThreadUtils.findThreadGroups(threadGroup0, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.findThreadById(1L, threadGroup0);
      ThreadUtils.findThreadGroups(threadGroup0, false, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.getAllThreads();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ThreadUtils.findThreadById(1L);
      ThreadUtils.getAllThreadGroups();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long long0 = 506L;
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(506L);
      MockThread mockThread0 = new MockThread("");
      mockThread0.getStackTrace();
      threadUtils_ThreadIdPredicate0.test(mockThread0);
      threadUtils_ThreadIdPredicate0.test(mockThread0);
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      MockThread.setDefaultUncaughtExceptionHandler(threadGroup0);
      mockThread0.setContextClassLoader((ClassLoader) null);
      ThreadUtils.findThreadsByName("", "");
      mockThread0.run();
      ThreadGroup threadGroup1 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreads(threadGroup1, false, (ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate1 = new ThreadUtils.ThreadIdPredicate(506L);
      threadUtils_NamePredicate0.test(threadGroup1);
      String string0 = "";
      ThreadUtils.findThreadGroupsByName("");
      ThreadUtils.findThreadsByName("", "");
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread group name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The predicate must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadsByName("", threadGroup0);
      ThreadUtils.findThreadsByName("", threadGroup0);
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      String string0 = "h\"?WGz4u.w7<pCW";
      ThreadUtils.findThreadsByName("h\"?WGz4u.w7<pCW");
      ThreadGroup threadGroup1 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadsByName("", threadGroup1);
      ThreadUtils.getAllThreads();
      ThreadUtils.findThreadsByName("", threadGroup0);
      ThreadUtils.getAllThreads();
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.findThreads(threadGroup1, true, (ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName((String) null, threadGroup0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ThreadUtils threadUtils0 = new ThreadUtils();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ThreadUtils.findThreadsByName("$[zj~n");
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("$[zj~n");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils threadUtils0 = new ThreadUtils();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ThreadUtils.getAllThreads();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("N:fxeg!$.");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.findThreadsByName("", "");
      ThreadUtils threadUtils0 = new ThreadUtils();
      ThreadUtils.findThreadById(871L, "\"A^Fi&");
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      Thread thread0 = MockThread.currentThread();
      threadUtils_NamePredicate0.test(thread0);
      ThreadUtils.NamePredicate threadUtils_NamePredicate1 = new ThreadUtils.NamePredicate("");
      ThreadUtils.findThreads(threadGroup0, false, (ThreadUtils.ThreadPredicate) threadUtils_NamePredicate1);
      ThreadUtils.findThreadGroupsByName("");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      boolean boolean0 = true;
      String string0 = "";
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      ThreadUtils.findThreadGroups(threadGroup0, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      ThreadUtils.getAllThreads();
      long long0 = 0L;
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById(0L, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ThreadUtils.findThreadById(587L);
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("org.apache.commons.lang3.ThreadUtils$NamePredicate");
      threadUtils_NamePredicate0.test((Thread) null);
      threadUtils_NamePredicate0.test((Thread) null);
      ThreadUtils.findThreadsByName("9Ro", "9Ro");
      ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      ThreadUtils.getAllThreads();
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadGroups(threadGroup0, false, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.getAllThreadGroups();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = null;
      try {
        threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate((-3288L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ThreadGroup threadGroup0 = null;
      String string0 = "";
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadGroups((ThreadGroup) null, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The group must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ThreadUtils.findThreadGroupsByName("org.apache.commons.lang3.ThreadUtils$NamePredicate");
      ThreadUtils.findThreadGroupsByName("org.apache.commons.lang3.ThreadUtils$NamePredicate");
      long long0 = 0L;
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById(0L, threadGroup0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ThreadUtils.findThreadsByName("5`~7/;RsVU\"F.(X2");
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = null;
      try {
        threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("~mjHXI{}jO7d[^");
      MockThread mockThread0 = new MockThread("~mjHXI{}jO7d[^");
      MockThread mockThread1 = new MockThread(mockThread0);
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.getAllStackTraces();
      mockThread1.setUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      threadUtils_NamePredicate0.test((Thread) mockThread1);
      long long0 = 0L;
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadGroupsByName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ThreadGroup threadGroup0 = null;
      boolean boolean0 = true;
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      // Undeclared exception!
      try { 
        ThreadUtils.findThreads((ThreadGroup) null, true, (ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The group must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ThreadUtils.findThreadById(1629L);
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadById(1629L, threadGroup0);
      ThreadUtils.findThreadById(1629L);
      ThreadUtils.findThreadById(1629L, threadGroup0);
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("The group must not be null");
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ThreadUtils threadUtils0 = new ThreadUtils();
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById(0L, threadGroup0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(702L);
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("dz;k~.CZ{EF");
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.findThreadGroupsByName("dz;k~.CZ{EF");
      ThreadUtils.NamePredicate threadUtils_NamePredicate1 = new ThreadUtils.NamePredicate("Th");
      ThreadUtils.NamePredicate threadUtils_NamePredicate2 = new ThreadUtils.NamePredicate("The thread name must not be null");
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadById(1L, "Th");
      ThreadUtils threadUtils0 = new ThreadUtils();
      threadUtils_ThreadIdPredicate0.test((Thread) null);
      threadUtils_ThreadIdPredicate0.test((Thread) null);
      ThreadUtils.findThreadGroupsByName("");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.getAllThreads();
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadGroupsByName("The validated character sequence is blank");
      ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadGroupsByName("5#4h16M9cA#oQ");
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById(898L, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread group name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ThreadUtils.ThreadPredicate threadUtils_ThreadPredicate0 = null;
      // Undeclared exception!
      try { 
        ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The predicate must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("@");
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadGroups((ThreadGroup) null, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The group must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("The thread group must not be null");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test(threadGroup0);
      MockThread mockThread0 = new MockThread("");
      MockThread.interrupted();
      threadUtils_NamePredicate0.test(mockThread0);
      MockThread.getAllStackTraces();
      ThreadGroup threadGroup1 = ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test(threadGroup1);
      ThreadUtils.findThreadsByName("The thread group must not be null");
      ThreadGroup threadGroup2 = ThreadUtils.getSystemThreadGroup();
      MockThread.setDefaultUncaughtExceptionHandler(threadGroup2);
      mockThread0.getStackTrace();
      ThreadUtils.findThreadById(22L, "");
      ThreadGroup threadGroup3 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreads(threadGroup3, false, (ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadsByName("");
      ThreadUtils.findThreadsByName("org.apache.commons.lang3.ThreadUtils$NamePredicate");
      threadUtils_NamePredicate0.test(threadGroup1);
      ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadById(22L, threadGroup3);
      ThreadUtils.findThreadGroupsByName("The thread group must not be null");
      threadUtils_NamePredicate0.test((Thread) null);
      ThreadUtils.getAllThreads();
      ThreadUtils.findThreadById(225L, threadGroup1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("VlGN-LcRcIO7");
      ThreadUtils.findThreads(threadGroup0, false, (ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadsByName("VlGN-LcRcIO7", threadGroup0);
      ThreadUtils.findThreadGroups(threadGroup0, false, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadsByName("VlGN-LcRcIO7", threadGroup0);
      ThreadUtils.findThreadById(2298L, threadGroup0);
      threadUtils_NamePredicate0.test(threadGroup0);
      ThreadUtils.findThreadById(2298L, "eRUuNSOmw`C(SAheA;");
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(2298L);
      threadUtils_ThreadIdPredicate0.test((Thread) null);
      ThreadGroup threadGroup1 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadGroups(threadGroup1, false, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadsByName("VlGN-LcRcIO7", "RMI Runtime");
      ThreadUtils.findThreadGroupsByName("eRUuNSOmw`C(SAheA;");
      ThreadUtils.NamePredicate threadUtils_NamePredicate1 = new ThreadUtils.NamePredicate("The group must not be null");
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("4");
      threadUtils_NamePredicate0.test((ThreadGroup) null);
      long long0 = 2010L;
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById(2010L, (ThreadGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread group must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ThreadUtils.findThreadGroupsByName("The thread id must be greater than zero");
      ThreadUtils.findThreadById(1243L, "PJXU^");
      ThreadUtils threadUtils0 = new ThreadUtils();
      ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = null;
      try {
        threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "21-rA~KS5Xb3fYD";
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("21-rA~KS5Xb3fYD");
      long long0 = 707L;
      ThreadUtils.findThreadById(707L, "21-rA~KS5Xb3fYD");
      threadUtils_NamePredicate0.test((Thread) null);
      String string1 = null;
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.getAllThreadGroups();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName("The thread name must not be null", (ThreadGroup) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The group must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "";
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      MockThread mockThread0 = new MockThread((Runnable) null, "");
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = mockThread0.getUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      threadUtils_NamePredicate0.test((Thread) mockThread0);
      String string1 = "<Nyfg&i/BFIb";
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadsByName("<Nyfg&i/BFIb", threadGroup0);
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The predicate must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      ThreadUtils.findThreadGroups(threadGroup0, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadGroups(threadGroup0, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadById(1664L, "org.apache.commons.lang3.ThreadUtils$1");
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ThreadUtils.getAllThreads();
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.findThreadById(1L, "org.apache.commons.lang3.ThreadUtils$NamePredicate");
      ThreadUtils.getAllThreads();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("[: G5");
      ThreadUtils.getSystemThreadGroup();
      threadUtils_NamePredicate0.test((Thread) null);
      threadUtils_NamePredicate0.test((Thread) null);
      threadUtils_NamePredicate0.test((Thread) null);
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName("Statistics sender in client process", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread group name must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadsByName("", threadGroup0);
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("The thread name must not be null");
      ThreadUtils.findThreadGroups(threadGroup0, false, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadGroupsByName("The thread name must not be null");
      ThreadUtils.findThreadsByName("", "The thread name must not be null");
      long long0 = 0L;
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = null;
      try {
        threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ThreadUtils.findThreadsByName("", "");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      MockThread.dumpStack();
      ThreadUtils.findThreadById(2189L, threadGroup0);
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      ThreadUtils.findThreadsByName("|]wG?20/*#!", "");
      ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      ThreadUtils.findThreadById(1L, threadGroup0);
      ThreadUtils.NamePredicate threadUtils_NamePredicate1 = new ThreadUtils.NamePredicate("");
      ThreadUtils threadUtils0 = new ThreadUtils();
      ThreadUtils.NamePredicate threadUtils_NamePredicate2 = new ThreadUtils.NamePredicate("{8L{ySd{JeS");
      ThreadUtils.findThreadGroups(threadGroup0, false, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate2);
      ThreadUtils.findThreadsByName("h_<G|,^|QEL|`b#e", "dRq");
      ThreadUtils.findThreadById(2189L);
      ThreadGroup threadGroup1 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadsByName("r_@OilacSo", threadGroup1);
      ThreadUtils.findThreadsByName("");
      ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) threadUtils_NamePredicate1);
      ThreadUtils.getAllThreadGroups();
      ThreadUtils.findThreadsByName("");
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById((-4621L), "The thread group name must not be null");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }
}
