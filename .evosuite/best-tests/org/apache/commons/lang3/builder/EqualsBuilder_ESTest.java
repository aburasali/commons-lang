/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 02:14:55 GMT 2019
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Arrays;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Set;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.IDKey;
import org.apache.commons.lang3.tuple.ImmutablePair;
import org.apache.commons.lang3.tuple.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EqualsBuilder_ESTest extends EqualsBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      int[] intArray0 = new int[5];
      intArray0[0] = (-2041);
      intArray0[1] = (-743);
      intArray0[2] = 1808;
      intArray0[3] = (-1614);
      intArray0[4] = (-203);
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(intArray0, intArray0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1808;
      doubleArray0[1] = (double) 1808;
      doubleArray0[2] = (double) 1808;
      doubleArray0[3] = 1260.1;
      doubleArray0[4] = (double) (-743);
      doubleArray0[5] = (double) (-203);
      doubleArray0[6] = 723.69712;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(doubleArray0, doubleArray0);
      short[] shortArray0 = new short[8];
      shortArray0[0] = (short) (-1);
      shortArray0[1] = (short)14981;
      shortArray0[2] = (short)28526;
      shortArray0[3] = (short)504;
      shortArray0[4] = (short)1;
      shortArray0[5] = (short)1795;
      shortArray0[6] = (short)1330;
      shortArray0[7] = (short) (-1);
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((short[]) null, shortArray0);
      Class<String> class0 = String.class;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.setReflectUpToClass(class0);
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((double) (-2041), (double) (short) (-1));
      equalsBuilder5.append('?', 'e');
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      float[] floatArray0 = new float[6];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (-1867.4F);
      equalsBuilder0.append(true, true);
      floatArray0[2] = (-1.0F);
      floatArray0[3] = (-1532.524F);
      floatArray0[4] = (-1.0F);
      floatArray0[5] = (-4561.513F);
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((float[]) null, floatArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-127);
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(byteArray0, byteArray0);
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((double) (byte) (-1), 0.0);
      EqualsBuilder equalsBuilder4 = equalsBuilder3.setTestTransients(true);
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((long) (byte)34, (-545L));
      equalsBuilder5.append(1161, (int) (byte) (-127));
      EqualsBuilder.getRegisterPair(equalsBuilder2, equalsBuilder5);
      equalsBuilder1.appendSuper(true);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Set<Pair<IDKey, IDKey>> set0 = EqualsBuilder.getRegistry();
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((short)1, (short)1);
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(0.0F, 0.0F);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) equalsBuilder1;
      objectArray0[1] = (Object) equalsBuilder2;
      objectArray0[2] = (Object) equalsBuilder2;
      objectArray0[3] = (Object) set0;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(objectArray0, objectArray0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)57;
      byteArray0[4] = (byte)39;
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte)52;
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)39;
      byteArray1[1] = (byte)90;
      byteArray1[2] = (byte)90;
      byteArray1[3] = (byte)57;
      byteArray1[4] = (byte)64;
      byteArray1[5] = (byte)64;
      byteArray1[6] = (byte)64;
      byteArray1[7] = (byte)90;
      byteArray1[8] = (byte)64;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(byteArray0, byteArray1);
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(3, 1740);
      Boolean boolean0 = Boolean.TRUE;
      equalsBuilder5.reflectionAppend(boolean0, boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      char[] charArray0 = new char[5];
      charArray0[0] = '9';
      charArray0[1] = '}';
      charArray0[2] = 'i';
      charArray0[3] = 'G';
      charArray0[4] = ' ';
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(charArray0, charArray0);
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setTestTransients(false);
      Object[] objectArray0 = new Object[0];
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(objectArray0, (Object[]) null);
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append('}', '5');
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((-1.0F), (-1.0F));
      equalsBuilder5.build();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      Object object0 = new Object();
      EqualsBuilder equalsBuilder1 = equalsBuilder0.reflectionAppend(object0, object0);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(booleanArray0, booleanArray0);
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short)124;
      shortArray0[1] = (short)1356;
      shortArray0[2] = (short) (-69);
      shortArray0[3] = (short)1167;
      shortArray0[4] = (short)0;
      short[] shortArray1 = new short[0];
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(shortArray0, shortArray1);
      Class<Integer> class0 = Integer.class;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.setReflectUpToClass(class0);
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((-406.19847249), (-1308.381246890417));
      equalsBuilder5.append((float[]) null, (float[]) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 565;
      intArray0[2] = 0;
      intArray0[3] = 124;
      intArray0[4] = (-2146608551);
      intArray0[5] = 116;
      intArray0[6] = (-423);
      int[] intArray1 = new int[1];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = 0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(intArray0, intArray1);
      assertEquals(7, intArray0.length);
      assertEquals(1, intArray1.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new int[] {0, 565, 0, 124, (-2146608551), 116, (-423)}, intArray0);
      assertArrayEquals(new int[] {0}, intArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(intArray0, intArray1);
      assertNotSame(intArray1, intArray0);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) equalsBuilder1;
      objectArray0[1] = (Object) equalsBuilder1;
      objectArray0[2] = (Object) 0;
      objectArray0[3] = (Object) 124;
      objectArray0[4] = (Object) 565;
      objectArray0[5] = (Object) 124;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(objectArray0, objectArray0);
      assertEquals(7, intArray0.length);
      assertEquals(1, intArray1.length);
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new int[] {0, 565, 0, 124, (-2146608551), 116, (-423)}, intArray0);
      assertArrayEquals(new int[] {0}, intArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertNotSame(intArray1, intArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.reflectionAppend(boolean0, objectArray0[1]);
      assertEquals(7, intArray0.length);
      assertEquals(1, intArray1.length);
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new int[] {0, 565, 0, 124, (-2146608551), 116, (-423)}, intArray0);
      assertArrayEquals(new int[] {0}, intArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertNotSame(intArray1, intArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((short[]) null, (short[]) null);
      assertEquals(7, intArray0.length);
      assertEquals(1, intArray1.length);
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new int[] {0, 565, 0, 124, (-2146608551), 116, (-423)}, intArray0);
      assertArrayEquals(new int[] {0}, intArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertNotSame(intArray1, intArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.appendSuper(true);
      assertEquals(7, intArray0.length);
      assertEquals(1, intArray1.length);
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new int[] {0, 565, 0, 124, (-2146608551), 116, (-423)}, intArray0);
      assertArrayEquals(new int[] {0}, intArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertNotSame(intArray1, intArray0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((byte) (-125), (byte)103);
      assertEquals(7, intArray0.length);
      assertEquals(1, intArray1.length);
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new int[] {0, 565, 0, 124, (-2146608551), 116, (-423)}, intArray0);
      assertArrayEquals(new int[] {0}, intArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertNotSame(intArray1, intArray0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      IDKey iDKey0 = new IDKey(equalsBuilder0);
      assertNotNull(iDKey0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((Object) "YlaFr.U", (Object) iDKey0);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(0.0F, 0.0F);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "YlaFr.U";
      stringArray0[1] = "YlaFr.U";
      stringArray0[2] = "YlaFr.U";
      stringArray0[3] = "YlaFr.U";
      EqualsBuilder equalsBuilder3 = equalsBuilder2.setExcludeFields(stringArray0);
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(1836.48596, (double) 0.0F);
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder3.append((-1385.597726635087), (-1385.597726635087));
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder3.append(false, true);
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder6.setTestTransients(false);
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder7);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder7.build());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder3);
      
      EqualsBuilder equalsBuilder8 = equalsBuilder7.append((-1385.597726635087), 1.5);
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder8);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder8.isEquals());
      assertFalse(equalsBuilder8.build());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder8);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder8);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder8, equalsBuilder2);
      assertSame(equalsBuilder8, equalsBuilder0);
      assertSame(equalsBuilder8, equalsBuilder6);
      assertSame(equalsBuilder8, equalsBuilder3);
      assertSame(equalsBuilder8, equalsBuilder5);
      assertSame(equalsBuilder8, equalsBuilder1);
      assertSame(equalsBuilder8, equalsBuilder4);
      assertSame(equalsBuilder8, equalsBuilder7);
      
      EqualsBuilder equalsBuilder9 = equalsBuilder7.setTestRecursive(false);
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder9);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder9.build());
      assertFalse(equalsBuilder9.isEquals());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder9);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder9);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder8);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder8);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder9);
      assertSame(equalsBuilder9, equalsBuilder6);
      assertSame(equalsBuilder9, equalsBuilder0);
      assertSame(equalsBuilder9, equalsBuilder2);
      assertSame(equalsBuilder9, equalsBuilder8);
      assertSame(equalsBuilder9, equalsBuilder3);
      assertSame(equalsBuilder9, equalsBuilder1);
      assertSame(equalsBuilder9, equalsBuilder5);
      assertSame(equalsBuilder9, equalsBuilder4);
      assertSame(equalsBuilder9, equalsBuilder7);
      
      EqualsBuilder equalsBuilder10 = equalsBuilder9.append((-2208.927934870409), 0.0);
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder10);
      assertFalse(equalsBuilder10.isEquals());
      assertFalse(equalsBuilder10.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder9.build());
      assertFalse(equalsBuilder9.isEquals());
      assertSame(equalsBuilder10, equalsBuilder8);
      assertSame(equalsBuilder10, equalsBuilder2);
      assertSame(equalsBuilder10, equalsBuilder3);
      assertSame(equalsBuilder10, equalsBuilder5);
      assertSame(equalsBuilder10, equalsBuilder0);
      assertSame(equalsBuilder10, equalsBuilder6);
      assertSame(equalsBuilder10, equalsBuilder4);
      assertSame(equalsBuilder10, equalsBuilder7);
      assertSame(equalsBuilder10, equalsBuilder9);
      assertSame(equalsBuilder10, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder10);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder10);
      assertSame(equalsBuilder1, equalsBuilder9);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder10);
      assertSame(equalsBuilder2, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder10);
      assertSame(equalsBuilder3, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder9);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder10);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder8);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder8);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder9);
      assertSame(equalsBuilder7, equalsBuilder10);
      assertSame(equalsBuilder9, equalsBuilder6);
      assertSame(equalsBuilder9, equalsBuilder0);
      assertSame(equalsBuilder9, equalsBuilder2);
      assertSame(equalsBuilder9, equalsBuilder8);
      assertSame(equalsBuilder9, equalsBuilder3);
      assertSame(equalsBuilder9, equalsBuilder1);
      assertSame(equalsBuilder9, equalsBuilder10);
      assertSame(equalsBuilder9, equalsBuilder5);
      assertSame(equalsBuilder9, equalsBuilder4);
      assertSame(equalsBuilder9, equalsBuilder7);
      
      equalsBuilder5.reset();
      assertEquals(4, stringArray0.length);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder5.isEquals());
      assertTrue(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder10);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder10);
      assertSame(equalsBuilder1, equalsBuilder9);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder10);
      assertSame(equalsBuilder2, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder10);
      assertSame(equalsBuilder3, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder9);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder10);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder8);
      
      Boolean boolean0 = equalsBuilder0.build();
      assertTrue(boolean0);
      assertNotNull(boolean0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder10);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder8);
      
      EqualsBuilder equalsBuilder11 = equalsBuilder8.setExcludeFields(stringArray0);
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder11);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder11.build());
      assertTrue(equalsBuilder11.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder6.build());
      assertTrue(equalsBuilder6.isEquals());
      assertTrue(equalsBuilder7.build());
      assertTrue(equalsBuilder7.isEquals());
      assertTrue(equalsBuilder8.isEquals());
      assertTrue(equalsBuilder8.build());
      assertSame(equalsBuilder0, equalsBuilder11);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder10);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder10);
      assertSame(equalsBuilder1, equalsBuilder9);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder11);
      assertSame(equalsBuilder11, equalsBuilder1);
      assertSame(equalsBuilder11, equalsBuilder10);
      assertSame(equalsBuilder11, equalsBuilder5);
      assertSame(equalsBuilder11, equalsBuilder9);
      assertSame(equalsBuilder11, equalsBuilder4);
      assertSame(equalsBuilder11, equalsBuilder7);
      assertSame(equalsBuilder11, equalsBuilder0);
      assertSame(equalsBuilder11, equalsBuilder6);
      assertSame(equalsBuilder11, equalsBuilder2);
      assertSame(equalsBuilder11, equalsBuilder3);
      assertSame(equalsBuilder11, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder10);
      assertSame(equalsBuilder2, equalsBuilder9);
      assertSame(equalsBuilder2, equalsBuilder11);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder11);
      assertSame(equalsBuilder3, equalsBuilder10);
      assertSame(equalsBuilder3, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder9);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder10);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder8);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder11);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder11);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder8);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder9);
      assertSame(equalsBuilder7, equalsBuilder10);
      assertSame(equalsBuilder8, equalsBuilder2);
      assertSame(equalsBuilder8, equalsBuilder0);
      assertSame(equalsBuilder8, equalsBuilder6);
      assertSame(equalsBuilder8, equalsBuilder3);
      assertSame(equalsBuilder8, equalsBuilder5);
      assertSame(equalsBuilder8, equalsBuilder10);
      assertSame(equalsBuilder8, equalsBuilder11);
      assertSame(equalsBuilder8, equalsBuilder1);
      assertSame(equalsBuilder8, equalsBuilder4);
      assertSame(equalsBuilder8, equalsBuilder9);
      assertSame(equalsBuilder8, equalsBuilder7);
      
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = true;
      boolean[] booleanArray1 = new boolean[1];
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      
      booleanArray1[0] = false;
      EqualsBuilder equalsBuilder12 = equalsBuilder2.append(booleanArray0, booleanArray1);
      assertEquals(9, booleanArray0.length);
      assertEquals(1, booleanArray1.length);
      assertNotNull(equalsBuilder12);
      assertTrue(Arrays.equals(new boolean[] {true, true, false, false, true, true, false, false, true}, booleanArray0));
      assertTrue(Arrays.equals(new boolean[] {false}, booleanArray1));
      assertFalse(equalsBuilder12.isEquals());
      assertFalse(equalsBuilder12.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(booleanArray0.equals((Object)booleanArray1));
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      assertSame(equalsBuilder12, equalsBuilder1);
      assertSame(equalsBuilder12, equalsBuilder11);
      assertSame(equalsBuilder12, equalsBuilder8);
      assertSame(equalsBuilder12, equalsBuilder2);
      assertSame(equalsBuilder12, equalsBuilder3);
      assertSame(equalsBuilder12, equalsBuilder0);
      assertSame(equalsBuilder12, equalsBuilder6);
      assertSame(equalsBuilder12, equalsBuilder7);
      assertSame(equalsBuilder12, equalsBuilder10);
      assertSame(equalsBuilder12, equalsBuilder5);
      assertSame(equalsBuilder12, equalsBuilder4);
      assertSame(equalsBuilder12, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder11);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder10);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder12);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder10);
      assertSame(equalsBuilder1, equalsBuilder9);
      assertSame(equalsBuilder1, equalsBuilder12);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder11);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder10);
      assertSame(equalsBuilder2, equalsBuilder12);
      assertSame(equalsBuilder2, equalsBuilder9);
      assertSame(equalsBuilder2, equalsBuilder11);
      assertNotSame(booleanArray0, booleanArray1);
      assertNotSame(booleanArray1, booleanArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestRecursive(true);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((Object) boolean0, (Object) equalsBuilder0);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(0.0, (-2407.091336));
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      EqualsBuilder equalsBuilder4 = equalsBuilder0.append(true, true);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = false;
      EqualsBuilder equalsBuilder5 = equalsBuilder3.append(booleanArray0, booleanArray0);
      assertEquals(7, booleanArray0.length);
      assertNotNull(equalsBuilder5);
      assertTrue(Arrays.equals(new boolean[] {true, true, true, true, true, true, false}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.appendSuper(false);
      assertEquals(7, booleanArray0.length);
      assertNotNull(equalsBuilder6);
      assertTrue(Arrays.equals(new boolean[] {true, true, true, true, true, true, false}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder6.append(booleanArray0, booleanArray0);
      assertEquals(7, booleanArray0.length);
      assertNotNull(equalsBuilder7);
      assertTrue(Arrays.equals(new boolean[] {true, true, true, true, true, true, false}, booleanArray0));
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      
      boolean boolean1 = EqualsBuilder.isRegistered((Object) null, boolean0);
      assertFalse(boolean1);
      
      EqualsBuilder equalsBuilder8 = equalsBuilder6.setTestRecursive(true);
      assertEquals(7, booleanArray0.length);
      assertNotNull(equalsBuilder8);
      assertTrue(Arrays.equals(new boolean[] {true, true, true, true, true, true, false}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder8.build());
      assertFalse(equalsBuilder8.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertTrue(boolean0.equals((Object)boolean1));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder8, equalsBuilder5);
      assertSame(equalsBuilder8, equalsBuilder0);
      assertSame(equalsBuilder8, equalsBuilder7);
      assertSame(equalsBuilder8, equalsBuilder1);
      assertSame(equalsBuilder8, equalsBuilder6);
      assertSame(equalsBuilder8, equalsBuilder3);
      assertSame(equalsBuilder8, equalsBuilder2);
      assertSame(equalsBuilder8, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder8);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder8);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-583);
      intArray0[4] = 0;
      EqualsBuilder equalsBuilder9 = equalsBuilder6.append(intArray0, intArray0);
      assertEquals(5, intArray0.length);
      assertEquals(7, booleanArray0.length);
      assertNotNull(equalsBuilder9);
      assertArrayEquals(new int[] {0, 0, 0, (-583), 0}, intArray0);
      assertTrue(Arrays.equals(new boolean[] {true, true, true, true, true, true, false}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder9.build());
      assertFalse(equalsBuilder9.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertTrue(boolean0.equals((Object)boolean1));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder9);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder9);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder9, equalsBuilder5);
      assertSame(equalsBuilder9, equalsBuilder7);
      assertSame(equalsBuilder9, equalsBuilder2);
      assertSame(equalsBuilder9, equalsBuilder1);
      assertSame(equalsBuilder9, equalsBuilder8);
      assertSame(equalsBuilder9, equalsBuilder6);
      assertSame(equalsBuilder9, equalsBuilder3);
      assertSame(equalsBuilder9, equalsBuilder4);
      assertSame(equalsBuilder9, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder8);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder9);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder8);
      assertSame(equalsBuilder6, equalsBuilder9);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "$";
      stringArray0[1] = "$";
      stringArray0[2] = "$";
      stringArray0[3] = "$";
      stringArray0[4] = "$";
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) "$", (Object) "$", false, (Class<?>) class0, false, stringArray0);
      assertTrue(boolean0);
      assertEquals(5, stringArray0.length);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.appendSuper(true);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setTestRecursive(false);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.setExcludeFields(stringArray0);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      charArray0[1] = 'Y';
      charArray0[2] = '\'';
      charArray0[3] = 'N';
      char[] charArray1 = new char[7];
      assertFalse(charArray1.equals((Object)charArray0));
      
      charArray1[0] = 'Y';
      charArray1[1] = '=';
      charArray1[2] = 'N';
      charArray1[3] = '=';
      charArray1[4] = '^';
      charArray1[5] = '=';
      charArray1[6] = 'N';
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(charArray0, charArray1);
      assertEquals(7, charArray1.length);
      assertEquals(5, stringArray0.length);
      assertEquals(4, charArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new char[] {'Y', '=', 'N', '=', '^', '=', 'N'}, charArray1);
      assertArrayEquals(new char[] {'=', 'Y', '\'', 'N'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(charArray1.equals((Object)charArray0));
      assertFalse(charArray0.equals((Object)charArray1));
      assertNotSame(charArray1, charArray0);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertNotSame(charArray0, charArray1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((byte) (-61), (byte)0);
      assertEquals(7, charArray1.length);
      assertEquals(5, stringArray0.length);
      assertEquals(4, charArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new char[] {'Y', '=', 'N', '=', '^', '=', 'N'}, charArray1);
      assertArrayEquals(new char[] {'=', 'Y', '\'', 'N'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(charArray1.equals((Object)charArray0));
      assertFalse(charArray0.equals((Object)charArray1));
      assertNotSame(charArray1, charArray0);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertNotSame(charArray0, charArray1);
      
      Boolean boolean1 = equalsBuilder5.build();
      assertFalse(boolean1);
      assertEquals(7, charArray1.length);
      assertEquals(5, stringArray0.length);
      assertEquals(4, charArray0.length);
      assertNotNull(boolean1);
      assertArrayEquals(new char[] {'Y', '=', 'N', '=', '^', '=', 'N'}, charArray1);
      assertArrayEquals(new char[] {'=', 'Y', '\'', 'N'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(charArray1.equals((Object)charArray0));
      assertFalse(boolean1.equals((Object)boolean0));
      assertFalse(charArray0.equals((Object)charArray1));
      assertNotSame(charArray1, charArray0);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertNotSame(charArray0, charArray1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      float[] floatArray0 = new float[8];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 2455.0F;
      floatArray0[2] = 477.0F;
      floatArray0[3] = 124.0F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = 0.0F;
      floatArray0[6] = 1204.1F;
      floatArray0[7] = 0.0F;
      float[] floatArray1 = new float[0];
      assertFalse(floatArray1.equals((Object)floatArray0));
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(floatArray0, floatArray1);
      assertEquals(8, floatArray0.length);
      assertEquals(0, floatArray1.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new float[] {0.0F, 2455.0F, 477.0F, 124.0F, 0.0F, 0.0F, 1204.1F, 0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {}, floatArray1, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(floatArray0, floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(2438, 41);
      assertEquals(8, floatArray0.length);
      assertEquals(0, floatArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new float[] {0.0F, 2455.0F, 477.0F, 124.0F, 0.0F, 0.0F, 1204.1F, 0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {}, floatArray1, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(floatArray0, floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(0.0F, 0.0F);
      assertEquals(8, floatArray0.length);
      assertEquals(0, floatArray1.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new float[] {0.0F, 2455.0F, 477.0F, 124.0F, 0.0F, 0.0F, 1204.1F, 0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {}, floatArray1, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertNotSame(floatArray0, floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.setTestTransients(false);
      assertEquals(8, floatArray0.length);
      assertEquals(0, floatArray1.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new float[] {0.0F, 2455.0F, 477.0F, 124.0F, 0.0F, 0.0F, 1204.1F, 0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {}, floatArray1, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertNotSame(floatArray0, floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      charArray0[1] = 'I';
      charArray0[2] = 'G';
      charArray0[3] = 't';
      charArray0[4] = 'b';
      charArray0[5] = 'L';
      charArray0[6] = '5';
      charArray0[7] = 'm';
      charArray0[8] = 'f';
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(charArray0, charArray0);
      assertEquals(8, floatArray0.length);
      assertEquals(0, floatArray1.length);
      assertEquals(9, charArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new float[] {0.0F, 2455.0F, 477.0F, 124.0F, 0.0F, 0.0F, 1204.1F, 0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {}, floatArray1, 0.01F);
      assertArrayEquals(new char[] {']', 'I', 'G', 't', 'b', 'L', '5', 'm', 'f'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertNotSame(floatArray0, floatArray1);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      
      IDKey iDKey0 = new IDKey(equalsBuilder4);
      assertEquals(8, floatArray0.length);
      assertEquals(0, floatArray1.length);
      assertNotNull(iDKey0);
      assertArrayEquals(new float[] {0.0F, 2455.0F, 477.0F, 124.0F, 0.0F, 0.0F, 1204.1F, 0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {}, floatArray1, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.reflectionAppend(equalsBuilder1, iDKey0);
      assertEquals(8, floatArray0.length);
      assertEquals(0, floatArray1.length);
      assertEquals(9, charArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new float[] {0.0F, 2455.0F, 477.0F, 124.0F, 0.0F, 0.0F, 1204.1F, 0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {}, floatArray1, 0.01F);
      assertArrayEquals(new char[] {']', 'I', 'G', 't', 'b', 'L', '5', 'm', 'f'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertNotSame(floatArray0, floatArray1);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Set<Pair<IDKey, IDKey>> set0 = EqualsBuilder.getRegistry();
      assertNotNull(set0);
      assertFalse(set0.isEmpty());
      assertEquals(22, set0.size());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Class<String> class0 = String.class;
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) set0, object0, false, (Class<?>) class0, false, (String[]) null);
      assertTrue(boolean0);
      assertFalse(set0.isEmpty());
      assertEquals(23, set0.size());
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setExcludeFields((String[]) null);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(0.0F, 1.0F);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1.0F;
      doubleArray0[1] = (double) 0.0F;
      doubleArray0[2] = (double) 0.0F;
      doubleArray0[3] = (double) 0.0F;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(doubleArray0, doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(doubleArray0, doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder3.append((byte) (-124), (byte)63);
      assertEquals(4, doubleArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte) (-124);
      intArray0[1] = (int) (byte) (-124);
      intArray0[2] = (int) (byte) (-124);
      intArray0[3] = (int) (byte) (-124);
      intArray0[4] = (int) (byte)63;
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(intArray0, intArray0);
      assertEquals(4, doubleArray0.length);
      assertEquals(5, intArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new int[] {(-124), (-124), (-124), (-124), 63}, intArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder6.append((Object[]) null, (Object[]) null);
      assertEquals(4, doubleArray0.length);
      assertEquals(5, intArray0.length);
      assertNotNull(equalsBuilder7);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new int[] {(-124), (-124), (-124), (-124), 63}, intArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder7);
      
      EqualsBuilder equalsBuilder8 = equalsBuilder1.setTestTransients(false);
      assertNotNull(equalsBuilder8);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder8.build());
      assertFalse(equalsBuilder8.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder8, equalsBuilder1);
      assertSame(equalsBuilder8, equalsBuilder5);
      assertSame(equalsBuilder8, equalsBuilder7);
      assertSame(equalsBuilder8, equalsBuilder2);
      assertSame(equalsBuilder8, equalsBuilder4);
      assertSame(equalsBuilder8, equalsBuilder6);
      assertSame(equalsBuilder8, equalsBuilder3);
      assertSame(equalsBuilder8, equalsBuilder0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-124);
      EqualsBuilder equalsBuilder9 = equalsBuilder0.append(byteArray0, byteArray0);
      assertEquals(1, byteArray0.length);
      assertNotNull(equalsBuilder9);
      assertArrayEquals(new byte[] {(byte) (-124)}, byteArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder9.isEquals());
      assertFalse(equalsBuilder9.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder9, equalsBuilder1);
      assertSame(equalsBuilder9, equalsBuilder2);
      assertSame(equalsBuilder9, equalsBuilder8);
      assertSame(equalsBuilder9, equalsBuilder7);
      assertSame(equalsBuilder9, equalsBuilder4);
      assertSame(equalsBuilder9, equalsBuilder6);
      assertSame(equalsBuilder9, equalsBuilder3);
      assertSame(equalsBuilder9, equalsBuilder0);
      assertSame(equalsBuilder9, equalsBuilder5);
      
      EqualsBuilder equalsBuilder10 = equalsBuilder3.append((-1.0F), 1.0F);
      assertEquals(4, doubleArray0.length);
      assertNotNull(equalsBuilder10);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder10.isEquals());
      assertFalse(equalsBuilder10.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder10);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder10);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder9);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder10);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder9);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder10, equalsBuilder4);
      assertSame(equalsBuilder10, equalsBuilder6);
      assertSame(equalsBuilder10, equalsBuilder3);
      assertSame(equalsBuilder10, equalsBuilder9);
      assertSame(equalsBuilder10, equalsBuilder0);
      assertSame(equalsBuilder10, equalsBuilder2);
      assertSame(equalsBuilder10, equalsBuilder1);
      assertSame(equalsBuilder10, equalsBuilder5);
      assertSame(equalsBuilder10, equalsBuilder7);
      assertSame(equalsBuilder10, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder10);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append('r', 'r');
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      char[] charArray0 = new char[9];
      charArray0[0] = 'r';
      charArray0[1] = 'r';
      charArray0[2] = 'r';
      charArray0[3] = 'r';
      charArray0[4] = 'r';
      charArray0[5] = 'r';
      charArray0[6] = 'r';
      charArray0[7] = 'u';
      charArray0[8] = 'r';
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((char[]) null, charArray0);
      assertEquals(9, charArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new char[] {'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      Class<Object> class0 = Object.class;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.setReflectUpToClass(class0);
      assertEquals(9, charArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new char[] {'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((short) (-792), (short)59);
      assertEquals(9, charArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new char[] {'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "31VoQ m/&]{@S%;g)h";
      stringArray0[1] = "";
      stringArray0[2] = "_i$TA75+K8&_%PM_V%K";
      stringArray0[3] = "";
      EqualsBuilder equalsBuilder5 = equalsBuilder4.setExcludeFields(stringArray0);
      assertEquals(4, stringArray0.length);
      assertEquals(9, charArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new char[] {'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((int) (short) (-792), (-1644));
      assertEquals(4, stringArray0.length);
      assertEquals(9, charArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new char[] {'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.reflectionAppend(object0, "");
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((int[]) null, (int[]) null);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((byte)0, (byte)0);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      Object object2 = new Object();
      assertNotNull(object2);
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      
      IDKey iDKey0 = new IDKey(object2);
      assertNotNull(iDKey0);
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(object1, (Object) iDKey0);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)object2));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertNotSame(object1, object0);
      assertNotSame(object1, object2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((long[]) null, (long[]) null);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)object2));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertNotSame(object1, object0);
      assertNotSame(object1, object2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      
      equalsBuilder5.reset();
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder4.isEquals());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder5.isEquals());
      assertTrue(equalsBuilder5.build());
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)object2));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertNotSame(object1, object0);
      assertNotSame(object1, object2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder4.append((double) (byte)0, 1899.2674309975);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)object2));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertNotSame(object1, object0);
      assertNotSame(object1, object2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder2);
      
      boolean[] booleanArray0 = new boolean[5];
      EqualsBuilder equalsBuilder7 = equalsBuilder0.append('c', 'c');
      assertNotNull(equalsBuilder7);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder7.build());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder4);
      
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      EqualsBuilder equalsBuilder8 = equalsBuilder4.append(booleanArray0, booleanArray0);
      assertEquals(5, booleanArray0.length);
      assertNotNull(equalsBuilder8);
      assertTrue(Arrays.equals(new boolean[] {true, true, false, true, true}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder8.isEquals());
      assertFalse(equalsBuilder8.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)object2));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder8, equalsBuilder5);
      assertSame(equalsBuilder8, equalsBuilder4);
      assertSame(equalsBuilder8, equalsBuilder3);
      assertSame(equalsBuilder8, equalsBuilder1);
      assertSame(equalsBuilder8, equalsBuilder0);
      assertSame(equalsBuilder8, equalsBuilder2);
      assertSame(equalsBuilder8, equalsBuilder6);
      assertSame(equalsBuilder8, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertNotSame(object1, object0);
      assertNotSame(object1, object2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder8);
      assertSame(equalsBuilder4, equalsBuilder7);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      EqualsBuilder equalsBuilder9 = equalsBuilder8.append(byteArray0, byteArray0);
      assertEquals(5, byteArray0.length);
      assertEquals(5, booleanArray0.length);
      assertNotNull(equalsBuilder9);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertTrue(Arrays.equals(new boolean[] {true, true, false, true, true}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder8.isEquals());
      assertFalse(equalsBuilder8.build());
      assertFalse(equalsBuilder9.isEquals());
      assertFalse(equalsBuilder9.build());
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)object2));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder9);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder9);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertNotSame(object1, object0);
      assertNotSame(object1, object2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder8);
      assertSame(equalsBuilder4, equalsBuilder7);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder9);
      assertSame(equalsBuilder8, equalsBuilder5);
      assertSame(equalsBuilder8, equalsBuilder4);
      assertSame(equalsBuilder8, equalsBuilder3);
      assertSame(equalsBuilder8, equalsBuilder9);
      assertSame(equalsBuilder8, equalsBuilder1);
      assertSame(equalsBuilder8, equalsBuilder0);
      assertSame(equalsBuilder8, equalsBuilder2);
      assertSame(equalsBuilder8, equalsBuilder6);
      assertSame(equalsBuilder8, equalsBuilder7);
      assertSame(equalsBuilder9, equalsBuilder8);
      assertSame(equalsBuilder9, equalsBuilder0);
      assertSame(equalsBuilder9, equalsBuilder2);
      assertSame(equalsBuilder9, equalsBuilder6);
      assertSame(equalsBuilder9, equalsBuilder7);
      assertSame(equalsBuilder9, equalsBuilder1);
      assertSame(equalsBuilder9, equalsBuilder4);
      assertSame(equalsBuilder9, equalsBuilder5);
      assertSame(equalsBuilder9, equalsBuilder3);
      
      EqualsBuilder equalsBuilder10 = equalsBuilder6.append((int) (byte)0, 0);
      assertNotNull(equalsBuilder10);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder10.isEquals());
      assertFalse(equalsBuilder10.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)object2));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder9);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder10);
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder9);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder10);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder9);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder10);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder9);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder10);
      assertNotSame(object1, object0);
      assertNotSame(object1, object2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder8);
      assertSame(equalsBuilder4, equalsBuilder7);
      assertSame(equalsBuilder4, equalsBuilder10);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder9);
      assertSame(equalsBuilder10, equalsBuilder6);
      assertSame(equalsBuilder10, equalsBuilder0);
      assertSame(equalsBuilder10, equalsBuilder8);
      assertSame(equalsBuilder10, equalsBuilder7);
      assertSame(equalsBuilder10, equalsBuilder9);
      assertSame(equalsBuilder10, equalsBuilder4);
      assertSame(equalsBuilder10, equalsBuilder2);
      assertSame(equalsBuilder10, equalsBuilder5);
      assertSame(equalsBuilder10, equalsBuilder3);
      assertSame(equalsBuilder10, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder10);
      assertSame(equalsBuilder6, equalsBuilder8);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder9);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      int[] intArray0 = new int[4];
      intArray0[0] = 4943;
      intArray0[1] = (-996);
      intArray0[2] = 3770;
      intArray0[3] = (-451);
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(intArray0, intArray0);
      assertEquals(4, intArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new int[] {4943, (-996), 3770, (-451)}, intArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "meCcSVt*v";
      stringArray0[1] = "";
      stringArray0[2] = "<";
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setExcludeFields(stringArray0);
      assertEquals(4, intArray0.length);
      assertEquals(3, stringArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new int[] {4943, (-996), 3770, (-451)}, intArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((double) 3770, (double) 3770);
      assertEquals(4, intArray0.length);
      assertEquals(3, stringArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new int[] {4943, (-996), 3770, (-451)}, intArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      boolean[] booleanArray1 = new boolean[6];
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      
      booleanArray1[0] = true;
      booleanArray1[1] = false;
      booleanArray1[2] = false;
      booleanArray1[3] = false;
      booleanArray1[4] = true;
      booleanArray1[5] = true;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(booleanArray0, booleanArray1);
      assertEquals(6, booleanArray1.length);
      assertEquals(4, intArray0.length);
      assertEquals(3, stringArray0.length);
      assertEquals(2, booleanArray0.length);
      assertNotNull(equalsBuilder4);
      assertTrue(Arrays.equals(new boolean[] {true, false, false, false, true, true}, booleanArray1));
      assertArrayEquals(new int[] {4943, (-996), 3770, (-451)}, intArray0);
      assertTrue(Arrays.equals(new boolean[] {false, true}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      assertFalse(booleanArray0.equals((Object)booleanArray1));
      assertNotSame(booleanArray1, booleanArray0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertNotSame(booleanArray0, booleanArray1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((short) (-1632), (short)2);
      assertEquals(6, booleanArray1.length);
      assertEquals(4, intArray0.length);
      assertEquals(3, stringArray0.length);
      assertEquals(2, booleanArray0.length);
      assertNotNull(equalsBuilder5);
      assertTrue(Arrays.equals(new boolean[] {true, false, false, false, true, true}, booleanArray1));
      assertArrayEquals(new int[] {4943, (-996), 3770, (-451)}, intArray0);
      assertTrue(Arrays.equals(new boolean[] {false, true}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      assertFalse(booleanArray0.equals((Object)booleanArray1));
      assertNotSame(booleanArray1, booleanArray0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertNotSame(booleanArray0, booleanArray1);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(3770, 0);
      assertEquals(6, booleanArray1.length);
      assertEquals(4, intArray0.length);
      assertEquals(3, stringArray0.length);
      assertEquals(2, booleanArray0.length);
      assertNotNull(equalsBuilder6);
      assertTrue(Arrays.equals(new boolean[] {true, false, false, false, true, true}, booleanArray1));
      assertArrayEquals(new int[] {4943, (-996), 3770, (-451)}, intArray0);
      assertTrue(Arrays.equals(new boolean[] {false, true}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      assertFalse(booleanArray0.equals((Object)booleanArray1));
      assertNotSame(booleanArray1, booleanArray0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertNotSame(booleanArray0, booleanArray1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((Object) "b{Tg", (Object) "b{Tg");
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-437.1);
      doubleArray0[1] = (-890.465);
      double[] doubleArray1 = new double[6];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (-437.1);
      doubleArray1[1] = (-437.1);
      doubleArray1[2] = (-890.465);
      doubleArray1[3] = (-437.1);
      doubleArray1[4] = (-437.1);
      doubleArray1[5] = (-890.465);
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(doubleArray0, doubleArray1);
      assertEquals(2, doubleArray0.length);
      assertEquals(6, doubleArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new double[] {(-437.1), (-890.465)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-437.1), (-437.1), (-890.465), (-437.1), (-437.1), (-890.465)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((short) (-722), (short) (-722));
      assertEquals(2, doubleArray0.length);
      assertEquals(6, doubleArray1.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new double[] {(-437.1), (-890.465)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-437.1), (-437.1), (-890.465), (-437.1), (-437.1), (-890.465)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      Object[] objectArray0 = new Object[2];
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[0] = object0;
      objectArray0[1] = (Object) (-437.1);
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(objectArray0, objectArray0);
      assertEquals(2, doubleArray0.length);
      assertEquals(6, doubleArray1.length);
      assertEquals(2, objectArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new double[] {(-437.1), (-890.465)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-437.1), (-437.1), (-890.465), (-437.1), (-437.1), (-890.465)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.appendSuper(false);
      assertEquals(2, doubleArray0.length);
      assertEquals(6, doubleArray1.length);
      assertEquals(2, objectArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new double[] {(-437.1), (-890.465)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-437.1), (-437.1), (-890.465), (-437.1), (-437.1), (-890.465)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertNotSame(doubleArray0, doubleArray1);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "b{Tg";
      stringArray0[1] = "b{Tg";
      EqualsBuilder equalsBuilder6 = equalsBuilder3.setExcludeFields(stringArray0);
      assertEquals(2, doubleArray0.length);
      assertEquals(2, stringArray0.length);
      assertEquals(6, doubleArray1.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new double[] {(-437.1), (-890.465)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-437.1), (-437.1), (-890.465), (-437.1), (-437.1), (-890.465)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestTransients(true);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Class<String> class0 = String.class;
      EqualsBuilder equalsBuilder2 = equalsBuilder0.setReflectUpToClass(class0);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder1.reflectionAppend(equalsBuilder0, equalsBuilder0);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      boolean[] booleanArray1 = new boolean[3];
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      
      booleanArray1[0] = true;
      booleanArray1[1] = true;
      booleanArray1[2] = false;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(booleanArray0, booleanArray1);
      assertEquals(3, booleanArray0.length);
      assertEquals(3, booleanArray1.length);
      assertNotNull(equalsBuilder4);
      assertTrue(Arrays.equals(new boolean[] {true, true, true}, booleanArray0));
      assertTrue(Arrays.equals(new boolean[] {true, true, false}, booleanArray1));
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(booleanArray0.equals((Object)booleanArray1));
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertNotSame(booleanArray0, booleanArray1);
      assertNotSame(booleanArray1, booleanArray0);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      long[] longArray0 = new long[4];
      longArray0[0] = (-1642L);
      longArray0[1] = 0L;
      longArray0[2] = 0L;
      longArray0[3] = 0L;
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(longArray0, longArray0);
      assertEquals(3, booleanArray0.length);
      assertEquals(3, booleanArray1.length);
      assertEquals(4, longArray0.length);
      assertNotNull(equalsBuilder5);
      assertTrue(Arrays.equals(new boolean[] {true, true, true}, booleanArray0));
      assertTrue(Arrays.equals(new boolean[] {true, true, false}, booleanArray1));
      assertArrayEquals(new long[] {(-1642L), 0L, 0L, 0L}, longArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(booleanArray0.equals((Object)booleanArray1));
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertNotSame(booleanArray0, booleanArray1);
      assertNotSame(booleanArray1, booleanArray0);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append('L', 'L');
      assertEquals(3, booleanArray0.length);
      assertEquals(3, booleanArray1.length);
      assertEquals(4, longArray0.length);
      assertNotNull(equalsBuilder6);
      assertTrue(Arrays.equals(new boolean[] {true, true, true}, booleanArray0));
      assertTrue(Arrays.equals(new boolean[] {true, true, false}, booleanArray1));
      assertArrayEquals(new long[] {(-1642L), 0L, 0L, 0L}, longArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(booleanArray0.equals((Object)booleanArray1));
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertNotSame(booleanArray0, booleanArray1);
      assertNotSame(booleanArray1, booleanArray0);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder6.append((short)44, (short)0);
      assertEquals(3, booleanArray0.length);
      assertEquals(3, booleanArray1.length);
      assertEquals(4, longArray0.length);
      assertNotNull(equalsBuilder7);
      assertTrue(Arrays.equals(new boolean[] {true, true, true}, booleanArray0));
      assertTrue(Arrays.equals(new boolean[] {true, true, false}, booleanArray1));
      assertArrayEquals(new long[] {(-1642L), 0L, 0L, 0L}, longArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(booleanArray0.equals((Object)booleanArray1));
      assertFalse(booleanArray1.equals((Object)booleanArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertNotSame(booleanArray0, booleanArray1);
      assertNotSame(booleanArray1, booleanArray0);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder7);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(0.0, 0.0);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      long[] longArray0 = new long[7];
      longArray0[0] = (-2038L);
      longArray0[1] = (-2534L);
      longArray0[2] = 2101L;
      longArray0[3] = (-345L);
      longArray0[4] = 721L;
      longArray0[5] = 0L;
      longArray0[6] = 1L;
      long[] longArray1 = new long[3];
      assertFalse(longArray1.equals((Object)longArray0));
      
      longArray1[0] = 0L;
      longArray1[1] = 721L;
      longArray1[2] = 1L;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(longArray0, longArray1);
      assertEquals(7, longArray0.length);
      assertEquals(3, longArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new long[] {(-2038L), (-2534L), 2101L, (-345L), 721L, 0L, 1L}, longArray0);
      assertArrayEquals(new long[] {0L, 721L, 1L}, longArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertNotSame(longArray0, longArray1);
      assertNotSame(longArray1, longArray0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 721L;
      floatArray0[1] = (float) 2101L;
      floatArray0[2] = (float) 0L;
      floatArray0[3] = (float) (-2534L);
      floatArray0[4] = (float) (-345L);
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(floatArray0, floatArray0);
      assertEquals(7, longArray0.length);
      assertEquals(3, longArray1.length);
      assertEquals(5, floatArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new long[] {(-2038L), (-2534L), 2101L, (-345L), 721L, 0L, 1L}, longArray0);
      assertArrayEquals(new long[] {0L, 721L, 1L}, longArray1);
      assertArrayEquals(new float[] {721.0F, 2101.0F, 0.0F, (-2534.0F), (-345.0F)}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertNotSame(longArray0, longArray1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertNotSame(longArray1, longArray0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((-531L), (-767L));
      assertEquals(7, longArray0.length);
      assertEquals(3, longArray1.length);
      assertEquals(5, floatArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new long[] {(-2038L), (-2534L), 2101L, (-345L), 721L, 0L, 1L}, longArray0);
      assertArrayEquals(new long[] {0L, 721L, 1L}, longArray1);
      assertArrayEquals(new float[] {721.0F, 2101.0F, 0.0F, (-2534.0F), (-345.0F)}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertNotSame(longArray0, longArray1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertNotSame(longArray1, longArray0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(970.0F, 0.0F);
      assertEquals(7, longArray0.length);
      assertEquals(3, longArray1.length);
      assertEquals(5, floatArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new long[] {(-2038L), (-2534L), 2101L, (-345L), 721L, 0L, 1L}, longArray0);
      assertArrayEquals(new long[] {0L, 721L, 1L}, longArray1);
      assertArrayEquals(new float[] {721.0F, 2101.0F, 0.0F, (-2534.0F), (-345.0F)}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertNotSame(longArray0, longArray1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertNotSame(longArray1, longArray0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((char[]) null, (char[]) null);
      assertEquals(7, longArray0.length);
      assertEquals(3, longArray1.length);
      assertEquals(5, floatArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new long[] {(-2038L), (-2534L), 2101L, (-345L), 721L, 0L, 1L}, longArray0);
      assertArrayEquals(new long[] {0L, 721L, 1L}, longArray1);
      assertArrayEquals(new float[] {721.0F, 2101.0F, 0.0F, (-2534.0F), (-345.0F)}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertNotSame(longArray0, longArray1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertNotSame(longArray1, longArray0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("void");
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = Boolean.getBoolean("void");
      assertFalse(boolean1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Pair<IDKey, IDKey> pair0 = EqualsBuilder.getRegisterPair(boolean0, object0);
      assertNotNull(pair0);
      assertTrue(boolean0.equals((Object)boolean1));
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestTransients(false);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((short[]) null, (short[]) null);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(false, false);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      long[] longArray0 = new long[1];
      longArray0[0] = 723L;
      long[] longArray1 = new long[5];
      assertFalse(longArray1.equals((Object)longArray0));
      
      longArray1[0] = 723L;
      longArray1[1] = 723L;
      longArray1[2] = 723L;
      longArray1[3] = 723L;
      longArray1[4] = (-1618L);
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(longArray0, longArray1);
      assertEquals(1, longArray0.length);
      assertEquals(5, longArray1.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new long[] {723L}, longArray0);
      assertArrayEquals(new long[] {723L, 723L, 723L, 723L, (-1618L)}, longArray1);
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertNotSame(longArray0, longArray1);
      assertNotSame(longArray1, longArray0);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(0.0F, (float) 723L);
      assertEquals(1, longArray0.length);
      assertEquals(5, longArray1.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new long[] {723L}, longArray0);
      assertArrayEquals(new long[] {723L, 723L, 723L, 723L, (-1618L)}, longArray1);
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertNotSame(longArray0, longArray1);
      assertNotSame(longArray1, longArray0);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-118);
      byteArray0[3] = (byte) (-34);
      byteArray0[4] = (byte)121;
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(byteArray0, byteArray0);
      assertEquals(5, byteArray0.length);
      assertEquals(1, longArray0.length);
      assertEquals(5, longArray1.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new byte[] {(byte)105, (byte) (-104), (byte) (-118), (byte) (-34), (byte)121}, byteArray0);
      assertArrayEquals(new long[] {723L}, longArray0);
      assertArrayEquals(new long[] {723L, 723L, 723L, 723L, (-1618L)}, longArray1);
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertNotSame(longArray0, longArray1);
      assertNotSame(longArray1, longArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      IDKey iDKey0 = new IDKey(object0);
      assertNotNull(iDKey0);
      
      boolean boolean0 = EqualsBuilder.reflectionEquals(object0, (Object) iDKey0, false);
      assertFalse(boolean0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      byte[] byteArray0 = new byte[0];
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(byteArray0, byteArray0);
      assertEquals(0, byteArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(doubleArray0, doubleArray0);
      assertEquals(0, byteArray0.length);
      assertEquals(2, doubleArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((byte) (-15), (byte) (-15));
      assertEquals(0, byteArray0.length);
      assertEquals(2, doubleArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.appendSuper(true);
      assertEquals(0, byteArray0.length);
      assertEquals(2, doubleArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      
      long[] longArray0 = new long[2];
      longArray0[0] = (long) (byte) (-15);
      longArray0[1] = (long) (byte) (-15);
      long[] longArray1 = new long[2];
      assertFalse(longArray1.equals((Object)longArray0));
      
      longArray1[0] = (long) (byte) (-15);
      longArray1[1] = (-953L);
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(longArray0, longArray1);
      assertEquals(0, byteArray0.length);
      assertEquals(2, doubleArray0.length);
      assertEquals(2, longArray0.length);
      assertEquals(2, longArray1.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new long[] {(-15L), (-15L)}, longArray0);
      assertArrayEquals(new long[] {(-15L), (-953L)}, longArray1);
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertNotSame(longArray0, longArray1);
      assertNotSame(longArray1, longArray0);
      
      equalsBuilder5.reset();
      assertEquals(0, byteArray0.length);
      assertEquals(2, doubleArray0.length);
      assertEquals(2, longArray0.length);
      assertEquals(2, longArray1.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new long[] {(-15L), (-15L)}, longArray0);
      assertArrayEquals(new long[] {(-15L), (-953L)}, longArray1);
      assertTrue(equalsBuilder5.isEquals());
      assertTrue(equalsBuilder5.build());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertFalse(longArray0.equals((Object)longArray1));
      assertFalse(longArray1.equals((Object)longArray0));
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertNotSame(longArray0, longArray1);
      assertNotSame(longArray1, longArray0);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder2.append((int) (byte) (-15), (int) (byte) (-15));
      assertEquals(0, byteArray0.length);
      assertEquals(2, doubleArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder6.build());
      assertTrue(equalsBuilder6.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder4.append((int[]) null, (int[]) null);
      assertEquals(0, byteArray0.length);
      assertEquals(2, doubleArray0.length);
      assertNotNull(equalsBuilder7);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder7.build());
      assertTrue(equalsBuilder7.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder7);
      assertSame(equalsBuilder4, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "4fErQj";
      stringArray0[1] = "v#}1R=xx)l%";
      stringArray0[2] = "";
      stringArray0[3] = "f-tu";
      stringArray0[4] = "r2aw\"2";
      stringArray0[5] = "4+kEOYr|'=";
      stringArray0[6] = "Unexpected IllegalAccessException";
      stringArray0[7] = ",R";
      stringArray0[8] = "";
      boolean boolean0 = EqualsBuilder.reflectionEquals(object0, object0, stringArray0);
      assertTrue(boolean0);
      assertEquals(9, stringArray0.length);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.appendSuper(true);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.reflectionAppend("f-tu", object1);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(931.0331601824633, 0.0);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.setExcludeFields(stringArray0);
      assertEquals(9, stringArray0.length);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((byte)0, (byte)0);
      assertEquals(9, stringArray0.length);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      long[] longArray0 = new long[8];
      longArray0[0] = (long) (byte)0;
      longArray0[1] = (long) (byte)0;
      longArray0[2] = (long) (byte)0;
      longArray0[3] = (long) (byte)0;
      longArray0[4] = (long) (byte)0;
      longArray0[5] = (long) (byte)0;
      longArray0[6] = (-1217L);
      longArray0[7] = (long) (byte)0;
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(longArray0, longArray0);
      assertEquals(9, stringArray0.length);
      assertEquals(8, longArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, (-1217L), 0L}, longArray0);
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Class<Integer> class0 = Integer.class;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setReflectUpToClass(class0);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setExcludeFields(stringArray0);
      assertEquals(1, stringArray0.length);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.reflectionAppend(equalsBuilder1, "");
      assertEquals(1, stringArray0.length);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = '{';
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(charArray0, charArray0);
      assertEquals(1, stringArray0.length);
      assertEquals(2, charArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new char[] {'T', '{'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.setTestRecursive(false);
      assertEquals(1, stringArray0.length);
      assertEquals(2, charArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new char[] {'T', '{'}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) '{';
      floatArray0[1] = (float) 'T';
      floatArray0[2] = (float) '{';
      floatArray0[3] = (float) '{';
      floatArray0[4] = 489.43817F;
      floatArray0[5] = (float) 'T';
      floatArray0[6] = 1.0F;
      floatArray0[7] = (float) 'T';
      floatArray0[8] = (float) 'T';
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(floatArray0, floatArray0);
      assertEquals(1, stringArray0.length);
      assertEquals(2, charArray0.length);
      assertEquals(9, floatArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new char[] {'T', '{'}, charArray0);
      assertArrayEquals(new float[] {123.0F, 84.0F, 123.0F, 123.0F, 489.43817F, 84.0F, 1.0F, 84.0F, 84.0F}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestTransients(false);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-22);
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(byteArray0, byteArray0);
      assertEquals(1, byteArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new byte[] {(byte) (-22)}, byteArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.reflectionAppend(object0, (Object) null);
      assertEquals(1, byteArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new byte[] {(byte) (-22)}, byteArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      charArray0[1] = '$';
      charArray0[2] = 'J';
      charArray0[3] = '$';
      charArray0[4] = 'b';
      charArray0[5] = 'K';
      charArray0[6] = ' ';
      charArray0[7] = 'u';
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(charArray0, charArray0);
      assertEquals(1, byteArray0.length);
      assertEquals(8, charArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new byte[] {(byte) (-22)}, byteArray0);
      assertArrayEquals(new char[] {'r', '$', 'J', '$', 'b', 'K', ' ', 'u'}, charArray0);
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((Object) equalsBuilder0, object0);
      assertEquals(1, byteArray0.length);
      assertEquals(8, charArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new byte[] {(byte) (-22)}, byteArray0);
      assertArrayEquals(new char[] {'r', '$', 'J', '$', 'b', 'K', ' ', 'u'}, charArray0);
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(0, 0);
      assertEquals(1, byteArray0.length);
      assertEquals(8, charArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new byte[] {(byte) (-22)}, byteArray0);
      assertArrayEquals(new char[] {'r', '$', 'J', '$', 'b', 'K', ' ', 'u'}, charArray0);
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = EqualsBuilder.isRegistered((Object) null, (Object) null);
      assertFalse(boolean0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((byte)99, (byte)99);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append('+', 'X');
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = (-2771.8821655307);
      doubleArray0[3] = 0.0;
      EqualsBuilder equalsBuilder3 = equalsBuilder0.append(doubleArray0, doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new double[] {0.0, (-1.0), (-2771.8821655307), 0.0}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder2.append((float) (byte)99, 2819.25F);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = EqualsBuilder.isRegistered((Object) null, (Object) null);
      assertFalse(boolean0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((byte)99, (byte)99);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.reflectionAppend(equalsBuilder0, (Object) null);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      Set<Pair<IDKey, IDKey>> set0 = EqualsBuilder.getRegistry();
      assertNotNull(set0);
      assertEquals(21, set0.size());
      assertFalse(set0.isEmpty());
      
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = (-2771.8821655307);
      doubleArray0[3] = 0.0;
      EqualsBuilder equalsBuilder3 = equalsBuilder0.append(doubleArray0, doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new double[] {0.0, (-1.0), (-2771.8821655307), 0.0}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder2.append((float) (byte)99, 2819.25F);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.reflectionAppend((Object) null, object0);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.0F;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(floatArray0, floatArray0);
      assertEquals(1, floatArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      char[] charArray0 = new char[0];
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(charArray0, charArray0);
      assertEquals(1, floatArray0.length);
      assertEquals(0, charArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new char[] {}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(0.0, 0.0);
      assertEquals(1, floatArray0.length);
      assertEquals(0, charArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new char[] {}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      
      boolean[] booleanArray0 = new boolean[0];
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(booleanArray0, booleanArray0);
      assertEquals(1, floatArray0.length);
      assertEquals(0, charArray0.length);
      assertEquals(0, booleanArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new char[] {}, charArray0);
      assertTrue(Arrays.equals(new boolean[] {}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(true, true);
      assertEquals(1, floatArray0.length);
      assertEquals(0, charArray0.length);
      assertEquals(0, booleanArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new char[] {}, charArray0);
      assertTrue(Arrays.equals(new boolean[] {}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) equalsBuilder0;
      objectArray0[1] = (Object) equalsBuilder0;
      objectArray0[2] = (Object) equalsBuilder0;
      objectArray0[3] = (Object) equalsBuilder0;
      objectArray0[4] = (Object) equalsBuilder0;
      objectArray0[5] = (Object) equalsBuilder0;
      objectArray0[6] = (Object) equalsBuilder0;
      objectArray0[7] = (Object) equalsBuilder0;
      objectArray0[8] = (Object) equalsBuilder0;
      Object[] objectArray1 = new Object[2];
      assertFalse(objectArray1.equals((Object)objectArray0));
      
      objectArray1[0] = (Object) equalsBuilder0;
      objectArray1[1] = (Object) equalsBuilder0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(objectArray0, objectArray1);
      assertEquals(9, objectArray0.length);
      assertEquals(2, objectArray1.length);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(objectArray0.equals((Object)objectArray1));
      assertFalse(objectArray1.equals((Object)objectArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(objectArray0, objectArray1);
      assertNotSame(objectArray1, objectArray0);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(false, false);
      assertEquals(9, objectArray0.length);
      assertEquals(2, objectArray1.length);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(objectArray0.equals((Object)objectArray1));
      assertFalse(objectArray1.equals((Object)objectArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(objectArray0, objectArray1);
      assertNotSame(objectArray1, objectArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((short)0, (short) (-4354));
      assertEquals(9, objectArray0.length);
      assertEquals(2, objectArray1.length);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(objectArray0.equals((Object)objectArray1));
      assertFalse(objectArray1.equals((Object)objectArray0));
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(objectArray0, objectArray1);
      assertNotSame(objectArray1, objectArray0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((double) (short) (-4354), (double) (short) (-4354));
      assertEquals(9, objectArray0.length);
      assertEquals(2, objectArray1.length);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(objectArray0.equals((Object)objectArray1));
      assertFalse(objectArray1.equals((Object)objectArray0));
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertNotSame(objectArray0, objectArray1);
      assertNotSame(objectArray1, objectArray0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      char[] charArray0 = new char[8];
      charArray0[0] = '\"';
      charArray0[1] = '^';
      charArray0[2] = 'f';
      charArray0[3] = '|';
      charArray0[4] = '(';
      charArray0[5] = '0';
      charArray0[6] = 'l';
      charArray0[7] = '.';
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(charArray0, charArray0);
      assertEquals(9, objectArray0.length);
      assertEquals(8, charArray0.length);
      assertEquals(2, objectArray1.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new char[] {'\"', '^', 'f', '|', '(', '0', 'l', '.'}, charArray0);
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(objectArray0.equals((Object)objectArray1));
      assertFalse(objectArray1.equals((Object)objectArray0));
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertNotSame(objectArray0, objectArray1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertNotSame(objectArray1, objectArray0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short)0;
      short[] shortArray1 = new short[8];
      assertFalse(shortArray1.equals((Object)shortArray0));
      
      shortArray1[0] = (short)0;
      shortArray1[1] = (short)0;
      shortArray1[2] = (short)0;
      shortArray1[3] = (short)0;
      shortArray1[4] = (short)0;
      shortArray1[5] = (short)0;
      shortArray1[6] = (short)0;
      shortArray1[7] = (short)0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(shortArray0, shortArray1);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(shortArray0, shortArray1);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append('J', 'J');
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(shortArray0, shortArray1);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.appendSuper(true);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(shortArray0, shortArray1);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Set<Pair<IDKey, IDKey>> set0 = EqualsBuilder.getRegistry();
      assertNotNull(set0);
      assertEquals(21, set0.size());
      assertFalse(set0.isEmpty());
      
      IDKey iDKey0 = new IDKey(object0);
      assertNotNull(iDKey0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((Object) equalsBuilder2, (Object) iDKey0);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(shortArray0, shortArray1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.reflectionAppend(object0, equalsBuilder3);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertNotSame(shortArray0, shortArray1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(0.0, 1211.409471525239);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertNotSame(shortArray0, shortArray1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder5.append(shortArray1, shortArray1);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder7);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertNotSame(shortArray0, shortArray1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder7);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short) (-1484);
      shortArray0[1] = (short)0;
      shortArray0[2] = (short)869;
      shortArray0[3] = (short)665;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(shortArray0, (short[]) null);
      assertEquals(4, shortArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new short[] {(short) (-1484), (short)0, (short)869, (short)665}, shortArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.appendSuper(true);
      assertEquals(4, shortArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new short[] {(short) (-1484), (short)0, (short)869, (short)665}, shortArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append('a', 'A');
      assertEquals(4, shortArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new short[] {(short) (-1484), (short)0, (short)869, (short)665}, shortArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(booleanArray0, booleanArray0);
      assertEquals(4, shortArray0.length);
      assertEquals(3, booleanArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new short[] {(short) (-1484), (short)0, (short)869, (short)665}, shortArray0);
      assertTrue(Arrays.equals(new boolean[] {true, true, true}, booleanArray0));
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      Class<Integer> class0 = Integer.class;
      EqualsBuilder equalsBuilder5 = equalsBuilder4.setReflectUpToClass(class0);
      assertEquals(4, shortArray0.length);
      assertEquals(3, booleanArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new short[] {(short) (-1484), (short)0, (short)869, (short)665}, shortArray0);
      assertTrue(Arrays.equals(new boolean[] {true, true, true}, booleanArray0));
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.setTestTransients(false);
      assertEquals(4, shortArray0.length);
      assertEquals(3, booleanArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new short[] {(short) (-1484), (short)0, (short)869, (short)665}, shortArray0);
      assertTrue(Arrays.equals(new boolean[] {true, true, true}, booleanArray0));
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(675L, 675L);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((short)909, (short)76);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((double) 675L, (double) (short)76);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((long[]) null, (long[]) null);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.appendSuper(true);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "HKbIZx@QzGqlB6";
      stringArray0[1] = "";
      stringArray0[2] = "D";
      stringArray0[3] = "";
      stringArray0[4] = "', is neither of type Map.Entry nor an Array";
      EqualsBuilder equalsBuilder6 = equalsBuilder0.setExcludeFields(stringArray0);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder5.append((byte) (-3), (byte)0);
      assertNotNull(equalsBuilder7);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder7.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder7);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<String> class0 = String.class;
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) null, (Object) null, true, class0, (String[]) null);
      assertTrue(boolean0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      byte[] byteArray0 = new byte[0];
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(byteArray0, byteArray0);
      assertEquals(0, byteArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.0F;
      float[] floatArray1 = new float[6];
      assertFalse(floatArray1.equals((Object)floatArray0));
      
      floatArray1[0] = 0.0F;
      floatArray1[1] = 0.0F;
      floatArray1[2] = 0.0F;
      floatArray1[3] = 0.0F;
      floatArray1[4] = 0.0F;
      floatArray1[5] = 0.0F;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(floatArray0, floatArray1);
      assertEquals(0, byteArray0.length);
      assertEquals(1, floatArray0.length);
      assertEquals(6, floatArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray1, 0.01F);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertNotSame(floatArray0, floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.setExcludeFields((String[]) null);
      assertEquals(0, byteArray0.length);
      assertEquals(1, floatArray0.length);
      assertEquals(6, floatArray1.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray1, 0.01F);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertNotSame(floatArray0, floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(true, true);
      assertEquals(0, byteArray0.length);
      assertEquals(1, floatArray0.length);
      assertEquals(6, floatArray1.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray1, 0.01F);
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertNotSame(floatArray0, floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(0, 0);
      assertEquals(0, byteArray0.length);
      assertEquals(1, floatArray0.length);
      assertEquals(6, floatArray1.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray1, 0.01F);
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertNotSame(floatArray0, floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(0L, 0L);
      assertEquals(0, byteArray0.length);
      assertEquals(1, floatArray0.length);
      assertEquals(6, floatArray1.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray1, 0.01F);
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(floatArray0.equals((Object)floatArray1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertNotSame(floatArray0, floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      short[] shortArray0 = new short[3];
      shortArray0[0] = (short)0;
      shortArray0[1] = (short)1695;
      shortArray0[2] = (short) (-2684);
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(shortArray0, shortArray0);
      assertEquals(3, shortArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new short[] {(short)0, (short)1695, (short) (-2684)}, shortArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((byte)36, (byte)36);
      assertEquals(3, shortArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new short[] {(short)0, (short)1695, (short) (-2684)}, shortArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((-1L), (-408L));
      assertEquals(3, shortArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new short[] {(short)0, (short)1695, (short) (-2684)}, shortArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      Boolean boolean0 = Boolean.valueOf(false);
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((Object) boolean0, (Object) equalsBuilder2);
      assertEquals(3, shortArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new short[] {(short)0, (short)1695, (short) (-2684)}, shortArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)36;
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(byteArray0, byteArray0);
      assertEquals(3, shortArray0.length);
      assertEquals(2, byteArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new short[] {(short)0, (short)1695, (short) (-2684)}, shortArray0);
      assertArrayEquals(new byte[] {(byte)36, (byte)36}, byteArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      boolean boolean1 = equalsBuilder5.isEquals();
      assertFalse(boolean1);
      assertEquals(3, shortArray0.length);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new short[] {(short)0, (short)1695, (short) (-2684)}, shortArray0);
      assertArrayEquals(new byte[] {(byte)36, (byte)36}, byteArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((-272), (-3615));
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Gf78)&v";
      stringArray0[1] = "";
      stringArray0[2] = "Can't find a public method for ";
      stringArray0[3] = "Array element ";
      stringArray0[4] = "d[%Cd=|Inlv]HD#hy7v";
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setExcludeFields(stringArray0);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertFalse(linkedList0.contains("Array element "));
      assertEquals(0, linkedList0.size());
      
      boolean boolean0 = EqualsBuilder.reflectionEquals(object0, (Object) "Can't find a public method for ", (Collection<String>) linkedList0);
      assertFalse(boolean0);
      assertFalse(linkedList0.contains("Can't find a public method for "));
      assertEquals(0, linkedList0.size());
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.setTestTransients(false);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append('B', 'B');
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.reflectionAppend("", equalsBuilder3);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.appendSuper(true);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      IDKey iDKey0 = new IDKey(object0);
      assertNotNull(iDKey0);
      
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) iDKey0, object0, (String[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      String string0 = linkedList0.pollFirst();
      assertNull(string0);
      assertEquals(0, linkedList0.size());
      
      boolean boolean0 = linkedList0.offerFirst("");
      assertTrue(boolean0);
      assertTrue(linkedList0.contains(""));
      assertEquals(1, linkedList0.size());
      
      boolean boolean1 = linkedList0.add("p3h]GvW9)TE");
      assertTrue(boolean1);
      assertTrue(linkedList0.contains(""));
      assertEquals(2, linkedList0.size());
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = EqualsBuilder.reflectionEquals(object0, object0, (Collection<String>) linkedList0);
      assertTrue(boolean2);
      assertTrue(linkedList0.contains(""));
      assertEquals(2, linkedList0.size());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      Class<Object> class0 = Object.class;
      String[] stringArray0 = new String[0];
      boolean boolean3 = EqualsBuilder.reflectionEquals((Object) null, (Object) null, false, class0, stringArray0);
      assertTrue(boolean3);
      assertEquals(0, stringArray0.length);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      Pair<IDKey, IDKey> pair0 = EqualsBuilder.getRegisterPair(object1, "p3h]GvW9)TE");
      assertNotNull(pair0);
      assertFalse(object1.equals((Object)object0));
      assertNotSame(object1, object0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 1;
      intArray0[2] = (-3118);
      intArray0[3] = (-1131);
      intArray0[4] = 0;
      intArray0[5] = 1672;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((int[]) null, intArray0);
      assertEquals(6, intArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new int[] {0, 1, (-3118), (-1131), 0, 1672}, intArray0);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder1);
      
      boolean[] booleanArray0 = new boolean[0];
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(booleanArray0, booleanArray0);
      assertEquals(0, booleanArray0.length);
      assertEquals(6, intArray0.length);
      assertNotNull(equalsBuilder2);
      assertTrue(Arrays.equals(new boolean[] {}, booleanArray0));
      assertArrayEquals(new int[] {0, 1, (-3118), (-1131), 0, 1672}, intArray0);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((Object[]) stringArray0, (Object[]) pair0.EMPTY_ARRAY);
      assertEquals(0, booleanArray0.length);
      assertEquals(0, stringArray0.length);
      assertEquals(6, intArray0.length);
      assertNotNull(equalsBuilder3);
      assertTrue(Arrays.equals(new boolean[] {}, booleanArray0));
      assertArrayEquals(new int[] {0, 1, (-3118), (-1131), 0, 1672}, intArray0);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.appendSuper(true);
      assertEquals(0, booleanArray0.length);
      assertEquals(0, stringArray0.length);
      assertEquals(6, intArray0.length);
      assertNotNull(equalsBuilder4);
      assertTrue(Arrays.equals(new boolean[] {}, booleanArray0));
      assertArrayEquals(new int[] {0, 1, (-3118), (-1131), 0, 1672}, intArray0);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((short) (-260), (short) (-260));
      assertEquals(0, booleanArray0.length);
      assertEquals(0, stringArray0.length);
      assertEquals(6, intArray0.length);
      assertNotNull(equalsBuilder5);
      assertTrue(Arrays.equals(new boolean[] {}, booleanArray0));
      assertArrayEquals(new int[] {0, 1, (-3118), (-1131), 0, 1672}, intArray0);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((short)0, (short) (-260));
      assertEquals(0, booleanArray0.length);
      assertEquals(0, stringArray0.length);
      assertEquals(6, intArray0.length);
      assertNotNull(equalsBuilder6);
      assertTrue(Arrays.equals(new boolean[] {}, booleanArray0));
      assertArrayEquals(new int[] {0, 1, (-3118), (-1131), 0, 1672}, intArray0);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 1121;
      intArray0[2] = (-860);
      intArray0[3] = (-2331);
      intArray0[4] = 91;
      int[] intArray1 = new int[8];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = 0;
      intArray1[1] = (-860);
      intArray1[2] = 91;
      intArray1[3] = 0;
      intArray1[4] = (-860);
      intArray1[5] = 0;
      intArray1[6] = (-2331);
      intArray1[7] = 1121;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(intArray0, intArray1);
      assertEquals(5, intArray0.length);
      assertEquals(8, intArray1.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new int[] {0, 1121, (-860), (-2331), 91}, intArray0);
      assertArrayEquals(new int[] {0, (-860), 91, 0, (-860), 0, (-2331), 1121}, intArray1);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(intArray0, intArray1);
      assertNotSame(intArray1, intArray0);
      
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 0;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(longArray0, longArray0);
      assertEquals(1, longArray0.length);
      assertEquals(5, intArray0.length);
      assertEquals(8, intArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new long[] {0L}, longArray0);
      assertArrayEquals(new int[] {0, 1121, (-860), (-2331), 91}, intArray0);
      assertArrayEquals(new int[] {0, (-860), 91, 0, (-860), 0, (-2331), 1121}, intArray1);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertNotSame(intArray1, intArray0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((-1758), 2315);
      assertEquals(1, longArray0.length);
      assertEquals(5, intArray0.length);
      assertEquals(8, intArray1.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new long[] {0L}, longArray0);
      assertArrayEquals(new int[] {0, 1121, (-860), (-2331), 91}, intArray0);
      assertArrayEquals(new int[] {0, (-860), 91, 0, (-860), 0, (-2331), 1121}, intArray1);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertNotSame(intArray1, intArray0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((double) 91, (double) 2315);
      assertEquals(1, longArray0.length);
      assertEquals(5, intArray0.length);
      assertEquals(8, intArray1.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new long[] {0L}, longArray0);
      assertArrayEquals(new int[] {0, 1121, (-860), (-2331), 91}, intArray0);
      assertArrayEquals(new int[] {0, (-860), 91, 0, (-860), 0, (-2331), 1121}, intArray1);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertNotSame(intArray1, intArray0);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((byte)30, (byte)30);
      assertEquals(1, longArray0.length);
      assertEquals(5, intArray0.length);
      assertEquals(8, intArray1.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new long[] {0L}, longArray0);
      assertArrayEquals(new int[] {0, 1121, (-860), (-2331), 91}, intArray0);
      assertArrayEquals(new int[] {0, (-860), 91, 0, (-860), 0, (-2331), 1121}, intArray1);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertNotSame(intArray1, intArray0);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(0L, (-505L));
      assertEquals(1, longArray0.length);
      assertEquals(5, intArray0.length);
      assertEquals(8, intArray1.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new long[] {0L}, longArray0);
      assertArrayEquals(new int[] {0, 1121, (-860), (-2331), 91}, intArray0);
      assertArrayEquals(new int[] {0, (-860), 91, 0, (-860), 0, (-2331), 1121}, intArray1);
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertNotSame(intArray0, intArray1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertNotSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Set<Pair<IDKey, IDKey>> set0 = EqualsBuilder.getRegistry();
      assertNotNull(set0);
      assertEquals(20, set0.size());
      assertFalse(set0.isEmpty());
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestRecursive(true);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)3309;
      shortArray0[1] = (short)3142;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(shortArray0, shortArray0);
      assertEquals(2, shortArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new short[] {(short)3309, (short)3142}, shortArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "zP!Ws}o";
      stringArray0[2] = "pr\"[2 d:-|";
      stringArray0[3] = "BaQJC:J~h";
      stringArray0[4] = "$";
      EqualsBuilder equalsBuilder3 = equalsBuilder2.setExcludeFields(stringArray0);
      assertEquals(2, shortArray0.length);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new short[] {(short)3309, (short)3142}, shortArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((byte[]) null, (byte[]) null);
      assertEquals(2, shortArray0.length);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new short[] {(short)3309, (short)3142}, shortArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      
      IDKey iDKey0 = new IDKey((Object) null);
      assertNotNull(iDKey0);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((Object) "BaQJC:J~h", (Object) iDKey0);
      assertEquals(2, shortArray0.length);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new short[] {(short)3309, (short)3142}, shortArray0);
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((int) (short)3309, (int) (short)3142);
      assertEquals(2, shortArray0.length);
      assertEquals(5, stringArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new short[] {(short)3309, (short)3142}, shortArray0);
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = Boolean.logicalXor(false, true);
      assertTrue(boolean1);
      
      Object object0 = null;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((Object) boolean0, (Object) null);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertTrue(boolean0.equals((Object)boolean1));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) equalsBuilder0;
      objectArray0[1] = (Object) equalsBuilder0;
      objectArray0[2] = (Object) boolean0;
      objectArray0[3] = (Object) equalsBuilder1;
      objectArray0[4] = (Object) equalsBuilder1;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(objectArray0, objectArray0);
      assertEquals(5, objectArray0.length);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertTrue(boolean0.equals((Object)boolean1));
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      String string0 = "5-0J#l";
      LinkedHashSet<String> linkedHashSet0 = null;
      try {
        linkedHashSet0 = new LinkedHashSet<String>(0, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal load factor: 0.0
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = EqualsBuilder.reflectionEquals(object0, (Object) null, true);
      assertFalse(boolean0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      Boolean boolean1 = equalsBuilder0.build();
      assertTrue(boolean1);
      assertNotNull(boolean1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertFalse(boolean1.equals((Object)boolean0));
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((byte)85, (byte)0);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Class<String> class0 = String.class;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "8lA9C";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "char";
      stringArray0[4] = "";
      stringArray0[5] = "RLK:w Ls+?XTZKh";
      stringArray0[6] = "$";
      boolean boolean2 = EqualsBuilder.reflectionEquals(object0, (Object) null, true, class0, true, stringArray0);
      assertFalse(boolean2);
      assertEquals(7, stringArray0.length);
      assertTrue(boolean2 == boolean0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      boolean boolean3 = EqualsBuilder.reflectionEquals(object1, (Object) equalsBuilder0, false);
      assertFalse(boolean3);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      IDKey iDKey0 = new IDKey(object0);
      assertNotNull(iDKey0);
      
      IDKey iDKey1 = new IDKey(iDKey0);
      assertNotNull(iDKey1);
      assertFalse(iDKey1.equals((Object)iDKey0));
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      boolean boolean0 = EqualsBuilder.reflectionEquals(object0, (Object) iDKey1, (Collection<String>) linkedHashSet0);
      assertFalse(boolean0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertFalse(iDKey0.equals((Object)iDKey1));
      assertFalse(iDKey1.equals((Object)iDKey0));
      assertNotSame(iDKey0, iDKey1);
      assertNotSame(iDKey1, iDKey0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Class<Object> class0 = Object.class;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setReflectUpToClass(class0);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(0.0, 0.0);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) equalsBuilder0, (Object) equalsBuilder2, false);
      assertTrue(boolean0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder0.append(0.0, 0.0);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(true, false);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestRecursive(false);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Class<String> class0 = String.class;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setReflectUpToClass(class0);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(false, false);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder2.append((Object) class0, (Object) null);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder3.append(0L, 0L);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      
      Boolean boolean0 = equalsBuilder1.build();
      assertFalse(boolean0);
      assertNotNull(boolean0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Boolean boolean1 = Boolean.FALSE;
      assertFalse(boolean1);
      assertNotNull(boolean1);
      
      boolean boolean2 = Boolean.getBoolean("iUZgA");
      assertFalse(boolean2);
      
      boolean boolean3 = Boolean.getBoolean("*zX[Qez*A0");
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean2);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.reflectionAppend(boolean0, boolean1);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertTrue(boolean0.equals((Object)boolean2));
      assertTrue(boolean0.equals((Object)boolean3));
      assertTrue(boolean1.equals((Object)boolean3));
      assertTrue(boolean1.equals((Object)boolean2));
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      
      equalsBuilder6.reset();
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder5.isEquals());
      assertTrue(equalsBuilder5.build());
      assertTrue(equalsBuilder6.isEquals());
      assertTrue(equalsBuilder6.build());
      assertTrue(boolean0.equals((Object)boolean2));
      assertTrue(boolean0.equals((Object)boolean3));
      assertTrue(boolean1.equals((Object)boolean3));
      assertTrue(boolean1.equals((Object)boolean2));
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      
      Boolean boolean4 = equalsBuilder3.build();
      assertTrue(boolean4);
      assertNotNull(boolean4);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertFalse(boolean4.equals((Object)boolean1));
      assertFalse(boolean4.equals((Object)boolean0));
      assertFalse(boolean4.equals((Object)boolean3));
      assertFalse(boolean4.equals((Object)boolean2));
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      
      boolean boolean5 = equalsBuilder1.isEquals();
      assertTrue(boolean5);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean3);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder3.append((double) 0L, (double) 0L);
      assertNotNull(equalsBuilder7);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder7.build());
      assertTrue(equalsBuilder7.isEquals());
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder2);
      
      Boolean boolean6 = Boolean.FALSE;
      assertFalse(boolean6);
      assertNotNull(boolean6);
      assertTrue(boolean6.equals((Object)boolean2));
      assertFalse(boolean6.equals((Object)boolean4));
      assertFalse(boolean6.equals((Object)boolean5));
      assertTrue(boolean6.equals((Object)boolean3));
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ?hk-)A,~n";
      stringArray0[1] = "";
      boolean boolean7 = EqualsBuilder.reflectionEquals((Object) class0, (Object) boolean6, false, (Class<?>) class0, stringArray0);
      assertFalse(boolean7);
      assertEquals(2, stringArray0.length);
      assertTrue(boolean6.equals((Object)boolean2));
      assertFalse(boolean6.equals((Object)boolean4));
      assertFalse(boolean6.equals((Object)boolean5));
      assertTrue(boolean6.equals((Object)boolean3));
      assertTrue(boolean7 == boolean2);
      assertFalse(boolean7 == boolean5);
      assertTrue(boolean7 == boolean3);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) equalsBuilder0, (Object) null, true);
      assertFalse(boolean0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestTransients(true);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder0.reflectionAppend(equalsBuilder1, equalsBuilder1);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.setTestRecursive(false);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      EqualsBuilder equalsBuilder4 = equalsBuilder1.append(booleanArray0, (boolean[]) null);
      assertEquals(2, booleanArray0.length);
      assertNotNull(equalsBuilder4);
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder1.setTestRecursive(true);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      
      IDKey iDKey0 = new IDKey(equalsBuilder1);
      assertNotNull(iDKey0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      
      EqualsBuilder equalsBuilder6 = equalsBuilder1.reflectionAppend(iDKey0, equalsBuilder4);
      assertEquals(2, booleanArray0.length);
      assertNotNull(equalsBuilder6);
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder5.append(0.0F, 0.0F);
      assertNotNull(equalsBuilder7);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder7.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder0);
      
      IDKey iDKey1 = new IDKey(equalsBuilder0);
      assertNotNull(iDKey1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertTrue(iDKey1.equals((Object)iDKey0));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Class<Object> class0 = Object.class;
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      boolean boolean1 = EqualsBuilder.reflectionEquals((Object) iDKey1, object0, false, (Class<?>) class0, false, stringArray0);
      assertFalse(boolean1);
      assertEquals(3, stringArray0.length);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertTrue(boolean1 == boolean0);
      assertTrue(iDKey1.equals((Object)iDKey0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertNotSame(iDKey1, iDKey0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.reflectionAppend(object0, object0);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = object0;
      objectArray0[1] = (Object) equalsBuilder1;
      objectArray0[2] = (Object) equalsBuilder0;
      objectArray0[3] = (Object) equalsBuilder0;
      objectArray0[4] = object0;
      objectArray0[5] = object0;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(objectArray0, objectArray0);
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((long[]) null, (long[]) null);
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      IDKey iDKey0 = new IDKey(object1);
      assertNotNull(iDKey0);
      assertFalse(object1.equals((Object)object0));
      
      boolean boolean0 = EqualsBuilder.isRegistered(iDKey0, iDKey0);
      assertFalse(boolean0);
      assertFalse(object1.equals((Object)object0));
      assertNotSame(object1, object0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append('N', '?');
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(object0.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.appendSuper(false);
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(object0.equals((Object)object1));
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((-2563.2297F), (-2563.2297F));
      assertEquals(6, objectArray0.length);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(object0.equals((Object)object1));
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertNotSame(object0, object1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(0, 0);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.appendSuper(true);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      Class<Integer> class0 = Integer.class;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.setReflectUpToClass(class0);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(booleanArray0, booleanArray0);
      assertEquals(4, booleanArray0.length);
      assertNotNull(equalsBuilder4);
      assertTrue(Arrays.equals(new boolean[] {true, true, true, true}, booleanArray0));
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder4.isEquals());
      assertTrue(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      
      equalsBuilder4.setEquals(true);
      assertEquals(4, booleanArray0.length);
      assertTrue(Arrays.equals(new boolean[] {true, true, true, true}, booleanArray0));
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder4.isEquals());
      assertTrue(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) equalsBuilder0, (Object) equalsBuilder0, false);
      assertTrue(boolean0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(false, false);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 203.34;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(doubleArray0, doubleArray0);
      assertEquals(1, doubleArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new double[] {203.34}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((Object) equalsBuilder1, (Object) equalsBuilder0);
      assertEquals(1, doubleArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new double[] {203.34}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(0.0F, 0.0F);
      assertEquals(1, doubleArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new double[] {203.34}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) equalsBuilder4;
      objectArray0[1] = (Object) equalsBuilder0;
      objectArray0[2] = (Object) equalsBuilder3;
      objectArray0[3] = (Object) 203.34;
      EqualsBuilder equalsBuilder5 = equalsBuilder1.append(doubleArray0, doubleArray0);
      assertEquals(1, doubleArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new double[] {203.34}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder5.isEquals());
      assertTrue(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      objectArray0[4] = (Object) equalsBuilder1;
      objectArray0[5] = (Object) equalsBuilder2;
      EqualsBuilder equalsBuilder6 = equalsBuilder2.append((byte)0, (byte)69);
      assertEquals(1, doubleArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new double[] {203.34}, doubleArray0, 0.01);
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      
      objectArray0[6] = (Object) 203.34;
      EqualsBuilder equalsBuilder7 = equalsBuilder4.append(objectArray0, objectArray0);
      assertEquals(1, doubleArray0.length);
      assertEquals(7, objectArray0.length);
      assertNotNull(equalsBuilder7);
      assertArrayEquals(new double[] {203.34}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder7);
      
      EqualsBuilder equalsBuilder8 = equalsBuilder7.append((short) (-339), (short)1166);
      assertEquals(1, doubleArray0.length);
      assertEquals(7, objectArray0.length);
      assertNotNull(equalsBuilder8);
      assertArrayEquals(new double[] {203.34}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder8.isEquals());
      assertFalse(equalsBuilder8.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder8);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder7, equalsBuilder8);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder8);
      assertSame(equalsBuilder8, equalsBuilder0);
      assertSame(equalsBuilder8, equalsBuilder2);
      assertSame(equalsBuilder8, equalsBuilder1);
      assertSame(equalsBuilder8, equalsBuilder7);
      assertSame(equalsBuilder8, equalsBuilder4);
      assertSame(equalsBuilder8, equalsBuilder3);
      assertSame(equalsBuilder8, equalsBuilder6);
      assertSame(equalsBuilder8, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder8);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder8);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder8);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder7);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Pair<IDKey, IDKey> pair0 = EqualsBuilder.getRegisterPair((Object) null, (Object) null);
      assertNotNull(pair0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)38;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)69;
      byteArray0[8] = (byte)59;
      byte[] byteArray1 = new byte[7];
      assertFalse(byteArray1.equals((Object)byteArray0));
      
      byteArray1[0] = (byte)91;
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte)91;
      byteArray1[3] = (byte) (-23);
      byteArray1[4] = (byte)91;
      byteArray1[5] = (byte)74;
      byteArray1[6] = (byte)0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(byteArray0, byteArray1);
      assertEquals(9, byteArray0.length);
      assertEquals(7, byteArray1.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-23), (byte)91, (byte)23, (byte)74, (byte)38, (byte)0, (byte)69, (byte)59}, byteArray0);
      assertArrayEquals(new byte[] {(byte)91, (byte)1, (byte)91, (byte) (-23), (byte)91, (byte)74, (byte)0}, byteArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(byteArray0.equals((Object)byteArray1));
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(byteArray0, byteArray1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertNotSame(byteArray1, byteArray0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.appendSuper(true);
      assertEquals(9, byteArray0.length);
      assertEquals(7, byteArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-23), (byte)91, (byte)23, (byte)74, (byte)38, (byte)0, (byte)69, (byte)59}, byteArray0);
      assertArrayEquals(new byte[] {(byte)91, (byte)1, (byte)91, (byte) (-23), (byte)91, (byte)74, (byte)0}, byteArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(byteArray0.equals((Object)byteArray1));
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(byteArray0, byteArray1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertNotSame(byteArray1, byteArray0);
      
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)38;
      intArray0[1] = (int) (byte)0;
      intArray0[2] = (int) (byte)74;
      intArray0[3] = (int) (byte)69;
      intArray0[4] = (int) (byte)69;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(intArray0, intArray0);
      assertEquals(9, byteArray0.length);
      assertEquals(5, intArray0.length);
      assertEquals(7, byteArray1.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-23), (byte)91, (byte)23, (byte)74, (byte)38, (byte)0, (byte)69, (byte)59}, byteArray0);
      assertArrayEquals(new int[] {38, 0, 74, 69, 69}, intArray0);
      assertArrayEquals(new byte[] {(byte)91, (byte)1, (byte)91, (byte) (-23), (byte)91, (byte)74, (byte)0}, byteArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(byteArray0.equals((Object)byteArray1));
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(byteArray0, byteArray1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertNotSame(byteArray1, byteArray0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((short) (-332), (short)0);
      assertEquals(9, byteArray0.length);
      assertEquals(5, intArray0.length);
      assertEquals(7, byteArray1.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-23), (byte)91, (byte)23, (byte)74, (byte)38, (byte)0, (byte)69, (byte)59}, byteArray0);
      assertArrayEquals(new int[] {38, 0, 74, 69, 69}, intArray0);
      assertArrayEquals(new byte[] {(byte)91, (byte)1, (byte)91, (byte) (-23), (byte)91, (byte)74, (byte)0}, byteArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(byteArray0.equals((Object)byteArray1));
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(byteArray0, byteArray1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertNotSame(byteArray1, byteArray0);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append('8', 'V');
      assertEquals(9, byteArray0.length);
      assertEquals(5, intArray0.length);
      assertEquals(7, byteArray1.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-23), (byte)91, (byte)23, (byte)74, (byte)38, (byte)0, (byte)69, (byte)59}, byteArray0);
      assertArrayEquals(new int[] {38, 0, 74, 69, 69}, intArray0);
      assertArrayEquals(new byte[] {(byte)91, (byte)1, (byte)91, (byte) (-23), (byte)91, (byte)74, (byte)0}, byteArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(byteArray0.equals((Object)byteArray1));
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertNotSame(byteArray0, byteArray1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertNotSame(byteArray1, byteArray0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(booleanArray0, booleanArray0);
      assertEquals(9, byteArray0.length);
      assertEquals(5, intArray0.length);
      assertEquals(7, byteArray1.length);
      assertEquals(2, booleanArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-23), (byte)91, (byte)23, (byte)74, (byte)38, (byte)0, (byte)69, (byte)59}, byteArray0);
      assertArrayEquals(new int[] {38, 0, 74, 69, 69}, intArray0);
      assertArrayEquals(new byte[] {(byte)91, (byte)1, (byte)91, (byte) (-23), (byte)91, (byte)74, (byte)0}, byteArray1);
      assertTrue(Arrays.equals(new boolean[] {true, true}, booleanArray0));
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(byteArray0.equals((Object)byteArray1));
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertNotSame(byteArray0, byteArray1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertNotSame(byteArray1, byteArray0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      long[] longArray0 = new long[4];
      longArray0[0] = (-329L);
      longArray0[1] = 0L;
      longArray0[2] = 0L;
      longArray0[3] = 4176L;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(longArray0, longArray0);
      assertEquals(4, longArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new long[] {(-329L), 0L, 0L, 4176L}, longArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setTestRecursive(true);
      assertEquals(4, longArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new long[] {(-329L), 0L, 0L, 4176L}, longArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      short[] shortArray0 = new short[7];
      shortArray0[0] = (short)0;
      shortArray0[1] = (short) (-1678);
      shortArray0[2] = (short) (-664);
      shortArray0[3] = (short)0;
      shortArray0[4] = (short) (-323);
      shortArray0[5] = (short)59;
      shortArray0[6] = (short)734;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(shortArray0, shortArray0);
      assertEquals(4, longArray0.length);
      assertEquals(7, shortArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new long[] {(-329L), 0L, 0L, 4176L}, longArray0);
      assertArrayEquals(new short[] {(short)0, (short) (-1678), (short) (-664), (short)0, (short) (-323), (short)59, (short)734}, shortArray0);
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      
      IDKey iDKey0 = new IDKey(equalsBuilder1);
      assertEquals(4, longArray0.length);
      assertNotNull(iDKey0);
      assertArrayEquals(new long[] {(-329L), 0L, 0L, 4176L}, longArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.reflectionAppend(iDKey0, object0);
      assertEquals(4, longArray0.length);
      assertEquals(7, shortArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new long[] {(-329L), 0L, 0L, 4176L}, longArray0);
      assertArrayEquals(new short[] {(short)0, (short) (-1678), (short) (-664), (short)0, (short) (-323), (short)59, (short)734}, shortArray0);
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (short) (-323);
      intArray0[1] = (int) (short) (-323);
      intArray0[2] = (int) (short)59;
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(intArray0, intArray0);
      assertEquals(4, longArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(7, shortArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new long[] {(-329L), 0L, 0L, 4176L}, longArray0);
      assertArrayEquals(new int[] {(-323), (-323), 59}, intArray0);
      assertArrayEquals(new short[] {(short)0, (short) (-1678), (short) (-664), (short)0, (short) (-323), (short)59, (short)734}, shortArray0);
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((char[]) null, (char[]) null);
      assertEquals(4, longArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(7, shortArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new long[] {(-329L), 0L, 0L, 4176L}, longArray0);
      assertArrayEquals(new int[] {(-323), (-323), 59}, intArray0);
      assertArrayEquals(new short[] {(short)0, (short) (-1678), (short) (-664), (short)0, (short) (-323), (short)59, (short)734}, shortArray0);
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder5);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "4%pbXIxDGvIM` 0E]r";
      stringArray0[1] = "org.apache.commons.lang3.ClassUtils";
      stringArray0[2] = "Unexpected IllegalAccessException";
      boolean boolean0 = EqualsBuilder.reflectionEquals(object0, object0, stringArray0);
      assertTrue(boolean0);
      assertEquals(3, stringArray0.length);
      
      Boolean boolean1 = new Boolean(true);
      assertTrue(boolean1);
      assertNotNull(boolean1);
      assertTrue(boolean1.equals((Object)boolean0));
      
      Class<Object> class0 = Object.class;
      boolean boolean2 = EqualsBuilder.reflectionEquals((Object) boolean1, object0, true, (Class<?>) class0, true, stringArray0);
      assertFalse(boolean2);
      assertEquals(3, stringArray0.length);
      assertTrue(boolean1.equals((Object)boolean0));
      assertFalse(boolean2 == boolean0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((byte) (-107), (byte) (-107));
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(false, false);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((double) (byte) (-107), (double) (byte) (-107));
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append('q', 'q');
      assertNotNull(equalsBuilder4);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder4.isEquals());
      assertTrue(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((short) (byte) (-107), (short)0);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.appendSuper(true);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append('a', 'e');
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) equalsBuilder0, (Object) equalsBuilder0, (Collection<String>) linkedList0);
      assertTrue(boolean0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertEquals(0, linkedList0.size());
      assertSame(equalsBuilder0, equalsBuilder1);
      
      Class<Integer> class0 = Integer.class;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setReflectUpToClass(class0);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 'e';
      floatArray0[1] = (float) 'a';
      short[] shortArray0 = new short[0];
      EqualsBuilder equalsBuilder3 = equalsBuilder1.append(shortArray0, shortArray0);
      assertEquals(0, shortArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new short[] {}, shortArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      floatArray0[2] = (float) 'a';
      EqualsBuilder equalsBuilder4 = equalsBuilder2.append(floatArray0, floatArray0);
      assertEquals(3, floatArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new float[] {101.0F, 97.0F, 97.0F}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder0.append(floatArray0, floatArray0);
      assertEquals(3, floatArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new float[] {101.0F, 97.0F, 97.0F}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      
      equalsBuilder2.setEquals(true);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      equalsBuilder5.setEquals(false);
      assertEquals(3, floatArray0.length);
      assertArrayEquals(new float[] {101.0F, 97.0F, 97.0F}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) "", (Object) "", true);
      assertTrue(boolean0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) equalsBuilder0;
      objectArray0[2] = (Object) equalsBuilder0;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) equalsBuilder0;
      objectArray0[5] = (Object) "";
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[6] = object0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(objectArray0, objectArray0);
      assertEquals(7, objectArray0.length);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Boolean boolean1 = equalsBuilder1.build();
      assertTrue(boolean1);
      assertEquals(7, objectArray0.length);
      assertNotNull(boolean1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(boolean1.equals((Object)boolean0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      assertFalse(boolean0);
      assertNotNull(boolean0);
      
      Class<IDKey> class0 = IDKey.class;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "w";
      stringArray0[1] = "I:zb";
      boolean boolean1 = EqualsBuilder.reflectionEquals((Object) boolean0, (Object) boolean0, false, (Class<?>) class0, false, stringArray0);
      assertTrue(boolean1);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "5WO2}P7H;";
      stringArray0[1] = "";
      stringArray0[2] = "^4/tT(3rtar/Y4\"";
      stringArray0[3] = "";
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setExcludeFields(stringArray0);
      assertEquals(4, stringArray0.length);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder0.append(562.552, 562.552);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      long[] longArray0 = new long[6];
      longArray0[0] = (-985L);
      longArray0[1] = (-3417L);
      longArray0[2] = 482L;
      longArray0[3] = 1L;
      longArray0[4] = 1L;
      longArray0[5] = 508L;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(longArray0, longArray0);
      assertEquals(6, longArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new long[] {(-985L), (-3417L), 482L, 1L, 1L, 508L}, longArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      char[] charArray0 = new char[0];
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(charArray0, charArray0);
      assertEquals(6, longArray0.length);
      assertEquals(0, charArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new long[] {(-985L), (-3417L), 482L, 1L, 1L, 508L}, longArray0);
      assertArrayEquals(new char[] {}, charArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((Object) null, (Object) equalsBuilder0);
      assertEquals(6, longArray0.length);
      assertEquals(0, charArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new long[] {(-985L), (-3417L), 482L, 1L, 1L, 508L}, longArray0);
      assertArrayEquals(new char[] {}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      Boolean boolean0 = equalsBuilder3.build();
      assertFalse(boolean0);
      assertEquals(6, longArray0.length);
      assertEquals(0, charArray0.length);
      assertNotNull(boolean0);
      assertArrayEquals(new long[] {(-985L), (-3417L), 482L, 1L, 1L, 508L}, longArray0);
      assertArrayEquals(new char[] {}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      Pair<IDKey, IDKey> pair0 = EqualsBuilder.getRegisterPair((Object) null, boolean0);
      assertEquals(6, longArray0.length);
      assertEquals(0, charArray0.length);
      assertNotNull(pair0);
      assertArrayEquals(new long[] {(-985L), (-3417L), 482L, 1L, 1L, 508L}, longArray0);
      assertArrayEquals(new char[] {}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestRecursive(true);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      double[] doubleArray0 = new double[0];
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(0.0, 0.0);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder1.append(doubleArray0, (double[]) null);
      assertEquals(0, doubleArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertNotNull(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      boolean boolean0 = linkedHashSet0.add("aq");
      assertTrue(boolean0);
      assertTrue(linkedHashSet0.contains("aq"));
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(1, linkedHashSet0.size());
      
      boolean boolean1 = linkedHashSet0.add("=:2e`voo3ue#n");
      assertTrue(boolean1);
      assertTrue(linkedHashSet0.contains("aq"));
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(2, linkedHashSet0.size());
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = linkedHashSet0.contains(object1);
      assertFalse(boolean2);
      assertTrue(linkedHashSet0.contains("aq"));
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(2, linkedHashSet0.size());
      assertFalse(object1.equals((Object)object0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertNotSame(object1, object0);
      
      boolean boolean3 = EqualsBuilder.reflectionEquals(object0, object1, (Collection<String>) linkedHashSet0);
      assertTrue(boolean3);
      assertTrue(linkedHashSet0.contains("aq"));
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(2, linkedHashSet0.size());
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertNotSame(object0, object1);
      assertNotSame(object1, object0);
      
      Class<String> class0 = String.class;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "aq";
      stringArray0[2] = "=:2e`voo3ue#n";
      boolean boolean4 = EqualsBuilder.reflectionEquals((Object) null, (Object) "aq", true, (Class<?>) class0, true, stringArray0);
      assertFalse(boolean4);
      assertEquals(3, stringArray0.length);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(object0, object1);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(object0, object1);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "7HCP";
      stringArray0[2] = "[]";
      stringArray0[3] = "Unexpected IllegalAccessException";
      stringArray0[4] = ", '";
      stringArray0[5] = "N]8f1Se4wrsnLF19i";
      stringArray0[6] = "";
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setExcludeFields(stringArray0);
      assertEquals(7, stringArray0.length);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(object0, object1);
      assertNotSame(object1, object0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) "(Ixg:fT", (Object) equalsBuilder0, true);
      assertFalse(boolean0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((byte) (-1), (byte) (-97));
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Class<Object> class0 = Object.class;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setReflectUpToClass(class0);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((short[]) null, (short[]) null);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((-2517.7273F), (-2517.7273F));
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      double[] doubleArray0 = new double[0];
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(doubleArray0, doubleArray0);
      assertEquals(0, doubleArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      
      boolean[] booleanArray0 = new boolean[0];
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(booleanArray0, booleanArray0);
      assertEquals(0, doubleArray0.length);
      assertEquals(0, booleanArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertTrue(Arrays.equals(new boolean[] {}, booleanArray0));
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertTrue(equalsBuilder5.build());
      assertTrue(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = '4';
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(charArray0, charArray0);
      assertEquals(0, doubleArray0.length);
      assertEquals(0, booleanArray0.length);
      assertEquals(2, charArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertTrue(Arrays.equals(new boolean[] {}, booleanArray0));
      assertArrayEquals(new char[] {'n', '4'}, charArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertTrue(equalsBuilder5.build());
      assertTrue(equalsBuilder5.isEquals());
      assertTrue(equalsBuilder6.isEquals());
      assertTrue(equalsBuilder6.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append('a', 'a');
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      int[] intArray0 = new int[0];
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(intArray0, intArray0);
      assertEquals(0, intArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new int[] {}, intArray0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.appendSuper(false);
      assertEquals(0, intArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new int[] {}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(booleanArray0, booleanArray0);
      assertEquals(0, intArray0.length);
      assertEquals(9, booleanArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new int[] {}, intArray0);
      assertTrue(Arrays.equals(new boolean[] {false, false, false, false, false, false, false, false, false}, booleanArray0));
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((byte)1, (byte)0);
      assertEquals(0, intArray0.length);
      assertEquals(9, booleanArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new int[] {}, intArray0);
      assertTrue(Arrays.equals(new boolean[] {false, false, false, false, false, false, false, false, false}, booleanArray0));
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestTransients(false);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(false, false);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      IDKey iDKey0 = new IDKey(equalsBuilder2);
      assertNotNull(iDKey0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.reflectionAppend(object0, iDKey0);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.0F;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(floatArray0, floatArray0);
      assertEquals(1, floatArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      long[] longArray0 = new long[1];
      longArray0[0] = 1980L;
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(longArray0, longArray0);
      assertEquals(1, floatArray0.length);
      assertEquals(1, longArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new float[] {0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new long[] {1980L}, longArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      float[] floatArray0 = new float[4];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (-1883.91F);
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(floatArray0, floatArray0);
      assertEquals(4, floatArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new float[] {1.0F, (-1883.91F), 0.0F, 0.0F}, floatArray0, 0.01F);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(584.33229, 584.33229);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) equalsBuilder0;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(objectArray0, objectArray0);
      assertEquals(1, objectArray0.length);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      Class<IDKey> class0 = IDKey.class;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.setReflectUpToClass(class0);
      assertEquals(1, objectArray0.length);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((byte)0, (byte)0);
      assertEquals(1, objectArray0.length);
      assertNotNull(equalsBuilder4);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.appendSuper(true);
      assertEquals(1, objectArray0.length);
      assertNotNull(equalsBuilder5);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertTrue(equalsBuilder5.isEquals());
      assertTrue(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(1211.27F, (float) (byte)0);
      assertEquals(1, objectArray0.length);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = EqualsBuilder.reflectionEquals(object0, object0, false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestTransients(true);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((-1978.178), 0.0);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((Object) equalsBuilder1, (Object) null);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append('=', 'e');
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = null;
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(objectArray0, objectArray0);
      assertEquals(1, objectArray0.length);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(byteArray0, byteArray0);
      assertEquals(1, objectArray0.length);
      assertEquals(2, byteArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new byte[] {(byte)2, (byte)0}, byteArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      long[] longArray0 = new long[3];
      longArray0[0] = 3654L;
      longArray0[1] = (-1L);
      longArray0[2] = 0L;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(longArray0, longArray0);
      assertEquals(3, longArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new long[] {3654L, (-1L), 0L}, longArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((byte) (-117), (byte) (-117));
      assertEquals(3, longArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new long[] {3654L, (-1L), 0L}, longArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append('I', 'f');
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      equalsBuilder0.reset();
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(1121L, 1L);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder1.setTestTransients(true);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((short)698, (short)1522);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(1.0, 169.334507822);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      long[] longArray0 = new long[4];
      longArray0[0] = (long) (short)698;
      longArray0[1] = (long) (short)698;
      longArray0[2] = (long) (short)1522;
      longArray0[3] = (long) (short)1522;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(longArray0, longArray0);
      assertEquals(4, longArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new long[] {698L, 698L, 1522L, 1522L}, longArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = (double) 1522L;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(doubleArray0, doubleArray0);
      assertEquals(4, longArray0.length);
      assertEquals(2, doubleArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new long[] {698L, 698L, 1522L, 1522L}, longArray0);
      assertArrayEquals(new double[] {1.0, 1522.0}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((-945.58F), 0.0F);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((Object) equalsBuilder0, (Object) equalsBuilder0);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      int[] intArray0 = new int[3];
      intArray0[0] = 3496;
      intArray0[1] = 0;
      intArray0[2] = 0;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(intArray0, (int[]) null);
      assertEquals(3, intArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new int[] {3496, 0, 0}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((short[]) null, (short[]) null);
      assertEquals(3, intArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new int[] {3496, 0, 0}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.setTestRecursive(false);
      assertEquals(3, intArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new int[] {3496, 0, 0}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((short)0, (short)0);
      assertEquals(3, intArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new int[] {3496, 0, 0}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      Pair<IDKey, IDKey> pair0 = EqualsBuilder.getRegisterPair(object0, object1);
      assertNotNull(pair0);
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertNotSame(object0, object1);
      assertNotSame(object1, object0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      Boolean boolean0 = new Boolean(true);
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      Object object2 = new Object();
      assertNotNull(object2);
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.reflectionAppend(boolean0, object2);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setTestRecursive(true);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.appendSuper(true);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(0L, 0L);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((short) (-1027), (short)1);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((Object[]) pair0.EMPTY_ARRAY, (Object[]) pair0.EMPTY_ARRAY);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertFalse(object1.equals((Object)object2));
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertNotSame(object1, object0);
      assertNotSame(object1, object2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertNotSame(object2, object0);
      assertNotSame(object2, object1);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      IDKey iDKey0 = new IDKey(equalsBuilder0);
      assertNotNull(iDKey0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((Object) iDKey0, (Object) iDKey0);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setTestRecursive(true);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(1.5, 1.5);
      assertNotNull(equalsBuilder3);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((short) (-1133), (short) (-1133));
      assertNotNull(equalsBuilder4);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(36, 0);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.reflectionAppend(equalsBuilder3, equalsBuilder2);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(true, true);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((-1968L), (-2477L));
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      Object[] objectArray0 = new Object[0];
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(objectArray0, objectArray0);
      assertEquals(0, objectArray0.length);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((float) (-1968L), (float) (-2477L));
      assertEquals(0, objectArray0.length);
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.reflectionAppend(equalsBuilder3, equalsBuilder1);
      assertEquals(0, objectArray0.length);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(937L, 937L);
      assertEquals(0, objectArray0.length);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      Integer integer0 = new Integer((-2261));
      assertEquals((-2261), (int)integer0);
      assertNotNull(integer0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.reflectionAppend(integer0, object0);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((short)2123, (short)9);
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      String[] stringArray0 = new String[0];
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setExcludeFields(stringArray0);
      assertEquals(0, stringArray0.length);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      long[] longArray0 = new long[5];
      longArray0[0] = (-2585L);
      longArray0[1] = (long) (short)2123;
      longArray0[2] = (long) (short)2123;
      longArray0[3] = (long) (short)9;
      longArray0[4] = (long) (short)9;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(longArray0, longArray0);
      assertEquals(0, stringArray0.length);
      assertEquals(5, longArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new long[] {(-2585L), 2123L, 2123L, 9L, 9L}, longArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(true, true);
      assertEquals(0, stringArray0.length);
      assertEquals(5, longArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new long[] {(-2585L), 2123L, 2123L, 9L, 9L}, longArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      Class<Object> class0 = Object.class;
      EqualsBuilder equalsBuilder5 = equalsBuilder4.setReflectUpToClass(class0);
      assertEquals(0, stringArray0.length);
      assertEquals(5, longArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new long[] {(-2585L), 2123L, 2123L, 9L, 9L}, longArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      
      int[] intArray0 = new int[8];
      intArray0[0] = (int) (short)2123;
      intArray0[1] = (int) (short)9;
      intArray0[2] = (int) (short)2123;
      intArray0[3] = 887;
      intArray0[4] = (int) (short)2123;
      intArray0[5] = (int) (short)9;
      intArray0[6] = (int) (short)9;
      intArray0[7] = (int) (short)2123;
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(intArray0, intArray0);
      assertEquals(0, stringArray0.length);
      assertEquals(5, longArray0.length);
      assertEquals(8, intArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new long[] {(-2585L), 2123L, 2123L, 9L, 9L}, longArray0);
      assertArrayEquals(new int[] {2123, 9, 2123, 887, 2123, 9, 9, 2123}, intArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(1.0F, 1.0F);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((byte) (-4), (byte)40);
      assertNotNull(equalsBuilder2);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(4636409935956721795L, 4635048441494372352L);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append('|', '|');
      assertNotNull(equalsBuilder4);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((short[]) null, (short[]) null);
      assertNotNull(equalsBuilder5);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "=}1. }hn1`BA";
      stringArray0[1] = "$";
      stringArray0[2] = "";
      stringArray0[3] = "+c\";nIaG2A,~t`C^v";
      stringArray0[4] = "S*e?";
      stringArray0[5] = "$";
      stringArray0[6] = "%=A";
      stringArray0[7] = "{}";
      stringArray0[8] = "";
      EqualsBuilder equalsBuilder6 = equalsBuilder5.setExcludeFields(stringArray0);
      assertEquals(9, stringArray0.length);
      assertNotNull(equalsBuilder6);
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short)0;
      short[] shortArray1 = new short[8];
      assertFalse(shortArray1.equals((Object)shortArray0));
      
      shortArray1[0] = (short)0;
      shortArray1[1] = (short)0;
      shortArray1[2] = (short)0;
      shortArray1[3] = (short)0;
      shortArray1[5] = (short)0;
      shortArray1[6] = (short)0;
      shortArray1[7] = (short)0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(shortArray0, shortArray1);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(shortArray0, shortArray1);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append('J', 'J');
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(shortArray0, shortArray1);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.appendSuper(true);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(shortArray0, shortArray1);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Set<Pair<IDKey, IDKey>> set0 = EqualsBuilder.getRegistry();
      assertNotNull(set0);
      assertEquals(11, set0.size());
      assertFalse(set0.isEmpty());
      
      IDKey iDKey0 = new IDKey(object0);
      assertNotNull(iDKey0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((Object) equalsBuilder2, (Object) iDKey0);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertNotSame(shortArray0, shortArray1);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.reflectionAppend(object0, equalsBuilder3);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertNotSame(shortArray0, shortArray1);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(shortArray1, shortArray1);
      assertEquals(1, shortArray0.length);
      assertEquals(8, shortArray1.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new short[] {(short)0}, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertNotSame(shortArray0, shortArray1);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append((Object) null, (Object) null);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      char[] charArray0 = new char[6];
      charArray0[0] = 'y';
      charArray0[1] = 'O';
      charArray0[2] = '=';
      charArray0[3] = 'e';
      charArray0[4] = 'e';
      charArray0[5] = '';
      char[] charArray1 = new char[0];
      assertFalse(charArray1.equals((Object)charArray0));
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(charArray0, charArray1);
      assertEquals(6, charArray0.length);
      assertEquals(0, charArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new char[] {'y', 'O', '=', 'e', 'e', ''}, charArray0);
      assertArrayEquals(new char[] {}, charArray1);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(charArray0.equals((Object)charArray1));
      assertFalse(charArray1.equals((Object)charArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertNotSame(charArray0, charArray1);
      assertNotSame(charArray1, charArray0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 59;
      intArray0[1] = 91;
      EqualsBuilder equalsBuilder3 = equalsBuilder1.append(intArray0, intArray0);
      assertEquals(2, intArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new int[] {59, 91}, intArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      IDKey iDKey0 = new IDKey(equalsBuilder1);
      assertNotNull(iDKey0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      
      Class<String> class0 = String.class;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "}L}3FO";
      stringArray0[2] = "93t^TAIdclX4Wj";
      boolean boolean0 = EqualsBuilder.reflectionEquals(object0, (Object) iDKey0, true, (Class<?>) class0, true, stringArray0);
      assertFalse(boolean0);
      assertEquals(3, stringArray0.length);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.setTestTransients(false);
      assertEquals(2, intArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new int[] {59, 91}, intArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      long[] longArray0 = new long[3];
      longArray0[0] = (long) 'e';
      longArray0[1] = (long) '';
      longArray0[2] = 44L;
      EqualsBuilder equalsBuilder5 = equalsBuilder0.append(longArray0, longArray0);
      assertEquals(3, longArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new long[] {101L, 127L, 44L}, longArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-60);
      byteArray0[2] = (byte)0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(byteArray0, (byte[]) null);
      assertEquals(3, byteArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new byte[] {(byte)4, (byte) (-60), (byte)0}, byteArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) (byte) (-60);
      doubleArray0[1] = (double) (byte)0;
      doubleArray0[2] = (-731.859066936);
      doubleArray0[3] = (double) (byte) (-60);
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(doubleArray0, doubleArray0);
      assertEquals(3, byteArray0.length);
      assertEquals(4, doubleArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new byte[] {(byte)4, (byte) (-60), (byte)0}, byteArray0);
      assertArrayEquals(new double[] {(-60.0), 0.0, (-731.859066936), (-60.0)}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((Object[]) null, (Object[]) null);
      assertEquals(3, byteArray0.length);
      assertEquals(4, doubleArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new byte[] {(byte)4, (byte) (-60), (byte)0}, byteArray0);
      assertArrayEquals(new double[] {(-60.0), 0.0, (-731.859066936), (-60.0)}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (byte)4;
      intArray0[1] = (int) (byte)0;
      intArray0[2] = (int) (byte)4;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(intArray0, intArray0);
      assertEquals(3, byteArray0.length);
      assertEquals(4, doubleArray0.length);
      assertEquals(3, intArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new byte[] {(byte)4, (byte) (-60), (byte)0}, byteArray0);
      assertArrayEquals(new double[] {(-60.0), 0.0, (-731.859066936), (-60.0)}, doubleArray0, 0.01);
      assertArrayEquals(new int[] {4, 0, 4}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((-985.0F), (-42.0F));
      assertEquals(3, byteArray0.length);
      assertEquals(4, doubleArray0.length);
      assertEquals(3, intArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new byte[] {(byte)4, (byte) (-60), (byte)0}, byteArray0);
      assertArrayEquals(new double[] {(-60.0), 0.0, (-731.859066936), (-60.0)}, doubleArray0, 0.01);
      assertArrayEquals(new int[] {4, 0, 4}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(booleanArray0, booleanArray0);
      assertEquals(3, byteArray0.length);
      assertEquals(3, booleanArray0.length);
      assertEquals(4, doubleArray0.length);
      assertEquals(3, intArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new byte[] {(byte)4, (byte) (-60), (byte)0}, byteArray0);
      assertTrue(Arrays.equals(new boolean[] {true, false, false}, booleanArray0));
      assertArrayEquals(new double[] {(-60.0), 0.0, (-731.859066936), (-60.0)}, doubleArray0, 0.01);
      assertArrayEquals(new int[] {4, 0, 4}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte) (-96);
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte)76;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(byteArray0, byteArray0);
      assertEquals(6, byteArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new byte[] {(byte)1, (byte)72, (byte) (-96), (byte)46, (byte)72, (byte)76}, byteArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append((short)1, (short) (byte)1);
      assertEquals(6, byteArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new byte[] {(byte)1, (byte)72, (byte) (-96), (byte)46, (byte)72, (byte)76}, byteArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      int[] intArray0 = new int[8];
      intArray0[0] = (int) (byte) (-96);
      intArray0[1] = (int) (byte)72;
      intArray0[2] = (int) (byte)72;
      intArray0[3] = (int) (byte) (-96);
      intArray0[4] = (int) (byte)72;
      intArray0[5] = (int) (byte)76;
      intArray0[6] = (int) (byte)1;
      intArray0[7] = (int) (byte)72;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(intArray0, intArray0);
      assertEquals(6, byteArray0.length);
      assertEquals(8, intArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new byte[] {(byte)1, (byte)72, (byte) (-96), (byte)46, (byte)72, (byte)76}, byteArray0);
      assertArrayEquals(new int[] {(-96), 72, 72, (-96), 72, 76, 1, 72}, intArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append('%', '%');
      assertEquals(6, byteArray0.length);
      assertEquals(8, intArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new byte[] {(byte)1, (byte)72, (byte) (-96), (byte)46, (byte)72, (byte)76}, byteArray0);
      assertArrayEquals(new int[] {(-96), 72, 72, (-96), 72, 76, 1, 72}, intArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder3.build());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder4.isEquals());
      assertTrue(equalsBuilder4.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder3.appendSuper(false);
      assertEquals(6, byteArray0.length);
      assertEquals(8, intArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new byte[] {(byte)1, (byte)72, (byte) (-96), (byte)46, (byte)72, (byte)76}, byteArray0);
      assertArrayEquals(new int[] {(-96), 72, 72, (-96), 72, 76, 1, 72}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (byte)1;
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(floatArray0, floatArray0);
      assertEquals(6, byteArray0.length);
      assertEquals(1, floatArray0.length);
      assertEquals(8, intArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new byte[] {(byte)1, (byte)72, (byte) (-96), (byte)46, (byte)72, (byte)76}, byteArray0);
      assertArrayEquals(new float[] {1.0F}, floatArray0, 0.01F);
      assertArrayEquals(new int[] {(-96), 72, 72, (-96), 72, 76, 1, 72}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      EqualsBuilder equalsBuilder7 = equalsBuilder6.append((double) 76, (double) (byte) (-96));
      assertEquals(6, byteArray0.length);
      assertEquals(1, floatArray0.length);
      assertEquals(8, intArray0.length);
      assertNotNull(equalsBuilder7);
      assertArrayEquals(new byte[] {(byte)1, (byte)72, (byte) (-96), (byte)46, (byte)72, (byte)76}, byteArray0);
      assertArrayEquals(new float[] {1.0F}, floatArray0, 0.01F);
      assertArrayEquals(new int[] {(-96), 72, 72, (-96), 72, 76, 1, 72}, intArray0);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder7.build());
      assertFalse(equalsBuilder7.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder7);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder7);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder7);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder7);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder7);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder3);
      assertSame(equalsBuilder7, equalsBuilder5);
      assertSame(equalsBuilder7, equalsBuilder2);
      assertSame(equalsBuilder7, equalsBuilder6);
      assertSame(equalsBuilder7, equalsBuilder0);
      assertSame(equalsBuilder7, equalsBuilder4);
      assertSame(equalsBuilder7, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder7);
      assertSame(equalsBuilder2, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 670.0358162614912;
      doubleArray0[1] = (double) (short)1740;
      doubleArray0[2] = (-142.0);
      doubleArray0[3] = (double) (byte)4;
      doubleArray0[6] = (double) (byte)99;
      int[] intArray0 = new int[5];
      intArray0[1] = (int) (short)3;
      intArray0[2] = 44;
      intArray0[3] = (int) (byte)4;
      intArray0[4] = (int) (short)1740;
      int[] intArray1 = new int[6];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = (int) (short)3;
      intArray1[1] = (int) (short)3;
      intArray1[2] = (int) (short)1740;
      intArray1[3] = (int) (byte)99;
      intArray1[4] = (int) (byte)99;
      intArray1[5] = (int) (short)3;
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "92`$Pj'";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "Pl(F;N";
      stringArray0[5] = "";
      stringArray0[6] = "org.apache.commons.lang3.builder.EqualsBuilder";
      stringArray0[7] = "Y|xs,L4j\"XMa37";
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setExcludeFields(stringArray0);
      assertEquals(8, stringArray0.length);
      assertNotNull(equalsBuilder1);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(false, false);
      assertEquals(8, stringArray0.length);
      assertNotNull(equalsBuilder2);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short)3;
      shortArray0[1] = (short) (byte)4;
      shortArray0[2] = (short)3;
      shortArray0[3] = (short)1740;
      shortArray0[4] = (short)1740;
      shortArray0[5] = (short) (byte)4;
      short[] shortArray1 = new short[2];
      assertFalse(shortArray1.equals((Object)shortArray0));
      
      shortArray1[0] = (short) (byte)99;
      shortArray1[1] = (short) (byte)4;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(shortArray0, shortArray1);
      assertEquals(8, stringArray0.length);
      assertEquals(2, shortArray1.length);
      assertEquals(6, shortArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new short[] {(short)99, (short)4}, shortArray1);
      assertArrayEquals(new short[] {(short)3, (short)4, (short)3, (short)1740, (short)1740, (short)4}, shortArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertNotSame(shortArray0, shortArray1);
      
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(booleanArray0, booleanArray0);
      assertEquals(8, stringArray0.length);
      assertEquals(2, shortArray1.length);
      assertEquals(8, booleanArray0.length);
      assertEquals(6, shortArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new short[] {(short)99, (short)4}, shortArray1);
      assertTrue(Arrays.equals(new boolean[] {false, false, true, false, true, false, false, false}, booleanArray0));
      assertArrayEquals(new short[] {(short)3, (short)4, (short)3, (short)1740, (short)1740, (short)4}, shortArray0);
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertNotSame(shortArray0, shortArray1);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((double) (byte)4, (double) (short)1740);
      assertEquals(8, stringArray0.length);
      assertEquals(2, shortArray1.length);
      assertEquals(8, booleanArray0.length);
      assertEquals(6, shortArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new short[] {(short)99, (short)4}, shortArray1);
      assertTrue(Arrays.equals(new boolean[] {false, false, true, false, true, false, false, false}, booleanArray0));
      assertArrayEquals(new short[] {(short)3, (short)4, (short)3, (short)1740, (short)1740, (short)4}, shortArray0);
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertNotSame(shortArray0, shortArray1);
      
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append((-225), (int) (short)1740);
      assertEquals(8, stringArray0.length);
      assertEquals(2, shortArray1.length);
      assertEquals(8, booleanArray0.length);
      assertEquals(6, shortArray0.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new short[] {(short)99, (short)4}, shortArray1);
      assertTrue(Arrays.equals(new boolean[] {false, false, true, false, true, false, false, false}, booleanArray0));
      assertArrayEquals(new short[] {(short)3, (short)4, (short)3, (short)1740, (short)1740, (short)4}, shortArray0);
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(shortArray1.equals((Object)shortArray0));
      assertFalse(shortArray0.equals((Object)shortArray1));
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertNotSame(shortArray1, shortArray0);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertNotSame(shortArray0, shortArray1);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 1394.181;
      doubleArray0[2] = (-2138.24998167188);
      doubleArray0[3] = (-3309.05607);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1994.1597032;
      doubleArray0[6] = (-2496.0);
      doubleArray0[7] = 95.348;
      doubleArray0[8] = (-1.0);
      double[] doubleArray1 = new double[2];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (-3309.05607);
      doubleArray1[1] = (-1.0);
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(doubleArray0, doubleArray1);
      assertEquals(9, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new double[] {0.0, 1394.181, (-2138.24998167188), (-3309.05607), 0.0, 1994.1597032, (-2496.0), 95.348, (-1.0)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-3309.05607), (-1.0)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      Class<String> class0 = String.class;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setReflectUpToClass(class0);
      assertEquals(9, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new double[] {0.0, 1394.181, (-2138.24998167188), (-3309.05607), 0.0, 1994.1597032, (-2496.0), 95.348, (-1.0)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-3309.05607), (-1.0)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((long[]) null, (long[]) null);
      assertEquals(9, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new double[] {0.0, 1394.181, (-2138.24998167188), (-3309.05607), 0.0, 1994.1597032, (-2496.0), 95.348, (-1.0)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-3309.05607), (-1.0)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((-807.0), 1.0);
      assertEquals(9, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new double[] {0.0, 1394.181, (-2138.24998167188), (-3309.05607), 0.0, 1994.1597032, (-2496.0), 95.348, (-1.0)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-3309.05607), (-1.0)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertNotSame(doubleArray0, doubleArray1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder4);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(false, false);
      assertEquals(9, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new double[] {0.0, 1394.181, (-2138.24998167188), (-3309.05607), 0.0, 1994.1597032, (-2496.0), 95.348, (-1.0)}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-3309.05607), (-1.0)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertNotSame(doubleArray0, doubleArray1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
      
      char[] charArray0 = new char[9];
      charArray0[0] = '}';
      charArray0[1] = 'R';
      charArray0[2] = 'S';
      charArray0[3] = '3';
      charArray0[4] = '?';
      charArray0[5] = '/';
      charArray0[6] = 'k';
      charArray0[7] = 'p';
      charArray0[8] = 'A';
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(charArray0, charArray0);
      assertEquals(9, doubleArray0.length);
      assertEquals(9, charArray0.length);
      assertEquals(2, doubleArray1.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new double[] {0.0, 1394.181, (-2138.24998167188), (-3309.05607), 0.0, 1994.1597032, (-2496.0), 95.348, (-1.0)}, doubleArray0, 0.01);
      assertArrayEquals(new char[] {'}', 'R', 'S', '3', '?', '/', 'k', 'p', 'A'}, charArray0);
      assertArrayEquals(new double[] {(-3309.05607), (-1.0)}, doubleArray1, 0.01);
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder6);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder6);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertNotSame(doubleArray0, doubleArray1);
      assertSame(equalsBuilder4, equalsBuilder2);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder6);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder6);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertNotSame(doubleArray1, doubleArray0);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      boolean boolean0 = EqualsBuilder.isRegistered((Object) null, (Object) null);
      assertFalse(boolean0);
      
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder0.isEquals());
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append('+', 'X');
      assertNotNull(equalsBuilder1);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      doubleArray0[1] = (-1.0);
      doubleArray0[3] = 0.0;
      EqualsBuilder equalsBuilder2 = equalsBuilder0.append(doubleArray0, doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new double[] {0.0, (-1.0), 0.0, 0.0}, doubleArray0, 0.01);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder0);
      
      Integer integer0 = new Integer((byte)99);
      assertEquals(99, (int)integer0);
      assertNotNull(integer0);
      
      ImmutablePair<String, Integer> immutablePair0 = ImmutablePair.of("", integer0);
      assertNotNull(immutablePair0);
      
      Integer integer1 = new Integer((-1033));
      assertEquals((-1033), (int)integer1);
      assertNotNull(integer1);
      assertFalse(integer1.equals((Object)integer0));
      
      boolean boolean1 = EqualsBuilder.reflectionEquals((Object) immutablePair0, (Object) integer1, false);
      assertFalse(boolean1);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(integer1.equals((Object)integer0));
      assertTrue(boolean1 == boolean0);
      
      EqualsBuilder equalsBuilder3 = equalsBuilder1.append((float) (byte)99, 2819.25F);
      assertNotNull(equalsBuilder3);
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      assertNotNull(equalsBuilder0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      
      char[] charArray0 = new char[5];
      charArray0[0] = '9';
      charArray0[1] = '}';
      charArray0[2] = 'i';
      charArray0[4] = ' ';
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(charArray0, charArray0);
      assertEquals(5, charArray0.length);
      assertNotNull(equalsBuilder1);
      assertArrayEquals(new char[] {'9', '}', 'i', '\u0000', ' '}, charArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setTestTransients(false);
      assertEquals(5, charArray0.length);
      assertNotNull(equalsBuilder2);
      assertArrayEquals(new char[] {'9', '}', 'i', '\u0000', ' '}, charArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      
      Object[] objectArray0 = new Object[0];
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(objectArray0, objectArray0);
      assertEquals(5, charArray0.length);
      assertEquals(0, objectArray0.length);
      assertNotNull(equalsBuilder3);
      assertArrayEquals(new char[] {'9', '}', 'i', '\u0000', ' '}, charArray0);
      assertTrue(equalsBuilder0.isEquals());
      assertTrue(equalsBuilder0.build());
      assertTrue(equalsBuilder1.build());
      assertTrue(equalsBuilder1.isEquals());
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder2.isEquals());
      assertTrue(equalsBuilder3.isEquals());
      assertTrue(equalsBuilder3.build());
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append('}', '5');
      assertEquals(5, charArray0.length);
      assertEquals(0, objectArray0.length);
      assertNotNull(equalsBuilder4);
      assertArrayEquals(new char[] {'9', '}', 'i', '\u0000', ' '}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      Class<String> class0 = String.class;
      String[] stringArray0 = new String[5];
      stringArray0[0] = ",";
      stringArray0[1] = ",";
      stringArray0[2] = ",";
      stringArray0[3] = ",";
      stringArray0[4] = ",";
      boolean boolean0 = EqualsBuilder.reflectionEquals((Object) ",", object0, true, (Class<?>) class0, stringArray0);
      assertFalse(boolean0);
      assertEquals(5, stringArray0.length);
      
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((-1.0F), (-1.0F));
      assertEquals(5, charArray0.length);
      assertEquals(0, objectArray0.length);
      assertNotNull(equalsBuilder5);
      assertArrayEquals(new char[] {'9', '}', 'i', '\u0000', ' '}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      Boolean boolean1 = equalsBuilder5.build();
      assertFalse(boolean1);
      assertEquals(5, charArray0.length);
      assertEquals(0, objectArray0.length);
      assertNotNull(boolean1);
      assertArrayEquals(new char[] {'9', '}', 'i', '\u0000', ' '}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder5.build());
      assertFalse(equalsBuilder5.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder2.isEquals());
      assertFalse(equalsBuilder2.build());
      assertFalse(equalsBuilder3.build());
      assertFalse(equalsBuilder3.isEquals());
      assertFalse(equalsBuilder4.build());
      assertFalse(equalsBuilder4.isEquals());
      assertTrue(boolean1.equals((Object)boolean0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertSame(equalsBuilder5, equalsBuilder3);
      assertSame(equalsBuilder5, equalsBuilder2);
      assertSame(equalsBuilder5, equalsBuilder4);
      assertSame(equalsBuilder5, equalsBuilder0);
      assertSame(equalsBuilder5, equalsBuilder1);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder2, equalsBuilder3);
      assertSame(equalsBuilder2, equalsBuilder0);
      assertSame(equalsBuilder2, equalsBuilder5);
      assertSame(equalsBuilder2, equalsBuilder1);
      assertSame(equalsBuilder2, equalsBuilder4);
      assertSame(equalsBuilder3, equalsBuilder1);
      assertSame(equalsBuilder3, equalsBuilder5);
      assertSame(equalsBuilder3, equalsBuilder0);
      assertSame(equalsBuilder3, equalsBuilder2);
      assertSame(equalsBuilder3, equalsBuilder4);
      assertSame(equalsBuilder4, equalsBuilder0);
      assertSame(equalsBuilder4, equalsBuilder3);
      assertSame(equalsBuilder4, equalsBuilder1);
      assertSame(equalsBuilder4, equalsBuilder5);
      assertSame(equalsBuilder4, equalsBuilder2);
      
      String[] stringArray1 = new String[3];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "X;$K0)9}Dv/~N";
      stringArray1[1] = "Specified class is not a superclass of the object";
      stringArray1[2] = "";
      EqualsBuilder equalsBuilder6 = equalsBuilder1.setExcludeFields(stringArray1);
      assertEquals(5, charArray0.length);
      assertEquals(3, stringArray1.length);
      assertNotNull(equalsBuilder6);
      assertArrayEquals(new char[] {'9', '}', 'i', '\u0000', ' '}, charArray0);
      assertFalse(equalsBuilder0.build());
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.build());
      assertFalse(equalsBuilder1.isEquals());
      assertFalse(equalsBuilder6.build());
      assertFalse(equalsBuilder6.isEquals());
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertSame(equalsBuilder0, equalsBuilder4);
      assertSame(equalsBuilder0, equalsBuilder5);
      assertSame(equalsBuilder0, equalsBuilder2);
      assertSame(equalsBuilder0, equalsBuilder3);
      assertSame(equalsBuilder0, equalsBuilder6);
      assertSame(equalsBuilder0, equalsBuilder1);
      assertNotSame(stringArray1, stringArray0);
      assertSame(equalsBuilder1, equalsBuilder6);
      assertSame(equalsBuilder1, equalsBuilder4);
      assertSame(equalsBuilder1, equalsBuilder3);
      assertSame(equalsBuilder1, equalsBuilder0);
      assertSame(equalsBuilder1, equalsBuilder5);
      assertSame(equalsBuilder1, equalsBuilder2);
      assertSame(equalsBuilder6, equalsBuilder4);
      assertSame(equalsBuilder6, equalsBuilder5);
      assertSame(equalsBuilder6, equalsBuilder1);
      assertSame(equalsBuilder6, equalsBuilder3);
      assertSame(equalsBuilder6, equalsBuilder0);
      assertSame(equalsBuilder6, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.apache.commons.lang3.builder.EqualsBuilder";
      stringArray0[1] = "org.apache.commons.lang3.builder.EqualsBuilder";
      stringArray0[2] = "fl-Td8Vr7%pV";
      stringArray0[3] = "org.apache.commons.lang3.builder.EqualsBuilder";
      stringArray0[4] = "org.apache.commons.lang3.builder.EqualsBuilder";
      EqualsBuilder.reflectionEquals((Object) "org.apache.commons.lang3.builder.EqualsBuilder", (Object) "org.apache.commons.lang3.builder.EqualsBuilder", stringArray0);
      IDKey iDKey0 = new IDKey("org.apache.commons.lang3.builder.EqualsBuilder");
      IDKey iDKey1 = new IDKey(iDKey0);
      Object object0 = new Object();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      EqualsBuilder.reflectionEquals((Object) iDKey1, object0, (Collection<String>) linkedList0);
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short)2378;
      shortArray0[1] = (short)1254;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(true, true);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "org.apache.commons.lang3.builder.EqualsBuilder";
      stringArray1[1] = "fl-Td8Vr7%pV";
      stringArray1[2] = "fl-Td8Vr7%pV";
      stringArray1[3] = "fl-Td8Vr7%pV";
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setExcludeFields(stringArray1);
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((long) (short)1254, 3707L);
      char[] charArray0 = new char[0];
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(charArray0, charArray0);
      EqualsBuilder equalsBuilder5 = equalsBuilder4.setTestRecursive(true);
      equalsBuilder5.append((Object) "org.apache.commons.lang3.builder.EqualsBuilder", (Object) "org.apache.commons.lang3.builder.EqualsBuilder");
      assertFalse(equalsBuilder0.isEquals());
      assertFalse(equalsBuilder1.isEquals());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      float[] floatArray0 = new float[8];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 2455.0F;
      floatArray0[2] = 477.0F;
      floatArray0[3] = 124.0F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = 0.0F;
      floatArray0[6] = 0.0F;
      floatArray0[7] = 0.0F;
      float[] floatArray1 = new float[0];
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(floatArray0, floatArray1);
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(2438, 41);
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(0.0F, 0.0F);
      EqualsBuilder equalsBuilder4 = equalsBuilder3.setTestTransients(false);
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      charArray0[1] = 'I';
      charArray0[2] = 'G';
      charArray0[3] = 't';
      charArray0[4] = 'b';
      charArray0[5] = 'L';
      charArray0[6] = '5';
      charArray0[7] = 'm';
      charArray0[8] = 'f';
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(charArray0, charArray0);
      IDKey iDKey0 = new IDKey(equalsBuilder4);
      EqualsBuilder equalsBuilder6 = equalsBuilder5.reflectionAppend(equalsBuilder1, iDKey0);
      assertSame(equalsBuilder6, equalsBuilder2);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      float[] floatArray0 = new float[8];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 2455.0F;
      floatArray0[2] = 477.0F;
      floatArray0[3] = 124.0F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = 0.0F;
      floatArray0[6] = 1204.1F;
      floatArray0[7] = 0.0F;
      float[] floatArray1 = new float[0];
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(floatArray0, floatArray1);
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(2438, 41);
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(0.0F, 0.0F);
      EqualsBuilder equalsBuilder4 = equalsBuilder3.setTestTransients(false);
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      charArray0[1] = 'I';
      charArray0[2] = 'G';
      charArray0[3] = 't';
      charArray0[4] = 'b';
      charArray0[5] = 'L';
      charArray0[6] = '5';
      charArray0[7] = 't';
      charArray0[8] = 'f';
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append(charArray0, charArray0);
      IDKey iDKey0 = new IDKey(equalsBuilder4);
      EqualsBuilder equalsBuilder6 = equalsBuilder5.reflectionAppend(equalsBuilder1, iDKey0);
      assertSame(equalsBuilder6, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(0.0F, 0.0F);
      EqualsBuilder equalsBuilder2 = equalsBuilder1.appendSuper(true);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte) (-73);
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(byteArray0, byteArray0);
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append((int) (byte)34, 1369);
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((long) 1369, 0L);
      long[] longArray0 = new long[0];
      EqualsBuilder equalsBuilder6 = equalsBuilder5.append(longArray0, longArray0);
      assertSame(equalsBuilder6, equalsBuilder4);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      long[] longArray0 = new long[9];
      longArray0[0] = (-1L);
      longArray0[1] = 0L;
      longArray0[2] = (-2757L);
      longArray0[3] = 187L;
      longArray0[4] = 822L;
      longArray0[5] = 914L;
      longArray0[6] = 1369L;
      longArray0[7] = (-1720L);
      longArray0[8] = (-451L);
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(longArray0, longArray0);
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      boolean[] booleanArray1 = new boolean[8];
      booleanArray1[0] = true;
      booleanArray1[1] = true;
      booleanArray1[2] = true;
      booleanArray1[4] = true;
      booleanArray1[5] = true;
      booleanArray1[6] = true;
      booleanArray1[7] = true;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.append(booleanArray0, booleanArray1);
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append((double) (-451L), 917.4);
      equalsBuilder3.append((short)2949, (short)2);
      EqualsBuilder equalsBuilder4 = equalsBuilder1.appendSuper(true);
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((int) (short)2, (-1467));
      assertSame(equalsBuilder5, equalsBuilder1);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-4925.537041);
      doubleArray0[1] = 1102.1;
      doubleArray0[2] = 1102.1;
      doubleArray0[3] = 649.0897580929441;
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 1.5;
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(doubleArray0, doubleArray0);
      Boolean boolean0 = new Boolean(true);
      Boolean boolean1 = Boolean.TRUE;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.reflectionAppend(boolean0, boolean1);
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short)2143;
      shortArray0[1] = (short)1396;
      shortArray0[2] = (short)4859;
      shortArray0[3] = (short)0;
      shortArray0[4] = (short)0;
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(shortArray0, shortArray0);
      EqualsBuilder equalsBuilder4 = equalsBuilder3.appendSuper(true);
      EqualsBuilder equalsBuilder5 = equalsBuilder4.append((byte) (-73), (byte) (-73));
      equalsBuilder5.appendSuper(true);
      float[] floatArray0 = new float[0];
      equalsBuilder5.append(floatArray0, floatArray0);
      assertTrue(equalsBuilder2.build());
      assertTrue(equalsBuilder0.build());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = new EqualsBuilder();
      EqualsBuilder equalsBuilder1 = equalsBuilder0.setTestRecursive(false);
      Class<String> class0 = String.class;
      EqualsBuilder equalsBuilder2 = equalsBuilder1.setReflectUpToClass(class0);
      EqualsBuilder equalsBuilder3 = equalsBuilder2.append(false, false);
      EqualsBuilder equalsBuilder4 = equalsBuilder3.append(0L, 0L);
      Boolean boolean0 = equalsBuilder1.build();
      Boolean boolean1 = Boolean.FALSE;
      Boolean.getBoolean("iUZgA");
      EqualsBuilder equalsBuilder5 = equalsBuilder4.reflectionAppend(boolean0, boolean1);
      assertFalse(equalsBuilder5.isEquals());
      
      equalsBuilder5.reset();
      equalsBuilder3.build();
      equalsBuilder1.isEquals();
      equalsBuilder3.append((double) 0L, (double) 0L);
      Boolean boolean2 = Boolean.FALSE;
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ?hk-)A,~n";
      stringArray0[1] = "";
      boolean boolean3 = EqualsBuilder.reflectionEquals((Object) class0, (Object) boolean2, false, (Class<?>) class0, stringArray0);
      assertFalse(boolean3);
  }
}
