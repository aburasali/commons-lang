/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 02:33:42 GMT 2019
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle;
import org.apache.commons.lang3.builder.RecursiveToStringStyle;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ToStringBuilder_ESTest extends ToStringBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "";
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      short[] shortArray0 = new short[5];
      String string1 = "The style must not be null";
      long long0 = (-3254L);
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("\u0001", toStringStyle0, stringBuffer0);
      int[] intArray0 = new int[0];
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        toStringBuilder0.append("", intArray0, false);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      short[] shortArray0 = new short[5];
      String string1 = "The style must not be null";
      long long0 = (-3254L);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("", toStringStyle0);
      // Undeclared exception!
      try { 
        toStringBuilder0.append((float) (-3254L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      assertNotNull(toStringStyle0);
      
      short[] shortArray0 = new short[5];
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("", toStringStyle0, stringBuffer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("P/", shortArray0);
      String string0 = "";
      ToStringBuilder toStringBuilder2 = toStringBuilder1.appendToString("");
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (-3254L);
      // Undeclared exception!
      try { 
        toStringBuilder2.append("]p c@Ur|", floatArray0, false);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, toStringStyle0);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-736);
      intArray0[2] = 2098;
      // Undeclared exception!
      try { 
        toStringBuilder0.append(intArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "";
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      byte byte0 = (byte)0;
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short) (byte)0;
      shortArray0[0] = (short) (byte)0;
      Integer integer0 = new Integer(1);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        toStringBuilder0.append(true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null, toStringStyle0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      // Undeclared exception!
      try { 
        toStringBuilder0.append(byteArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "YH`ul):nQg}!xXxe$$U";
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("YH`ul):nQg}!xXxe$$U", toStringStyle0);
      byte byte0 = (byte) (-85);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("YH`ul):nQg}!xXxe$$U", (byte) (-85));
      String string1 = "g ||mAZ2PTxN_ri'N*";
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) toStringBuilder0;
      objectArray0[1] = (Object) toStringStyle0;
      objectArray0[2] = (Object) toStringBuilder0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) toStringBuilder1;
      objectArray0[5] = (Object) toStringBuilder1;
      objectArray0[6] = (Object) toStringStyle0;
      // Undeclared exception!
      try { 
        toStringBuilder1.append("g ||mAZ2PTxN_ri'N*", objectArray0, false);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringBuilder.getDefaultStyle();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null, toStringStyle0);
      int[] intArray0 = new int[8];
      intArray0[0] = (-271);
      intArray0[1] = 56;
      intArray0[2] = 725;
      intArray0[3] = (-299);
      intArray0[4] = 0;
      intArray0[5] = 512;
      intArray0[6] = (-1008);
      intArray0[7] = (-1);
      toStringBuilder0.append("", intArray0);
      toStringBuilder0.getObject();
      char[] charArray0 = new char[0];
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", charArray0);
      assertSame(toStringBuilder1, toStringBuilder0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("VpT`;..qK", toStringStyle0, (StringBuffer) null);
      int[] intArray0 = new int[9];
      intArray0[0] = (-5469);
      intArray0[1] = (-2771);
      intArray0[2] = 0;
      int int0 = 0;
      intArray0[3] = 0;
      int int1 = (-3096);
      intArray0[4] = (-3096);
      intArray0[5] = 0;
      intArray0[6] = (-4551);
      intArray0[7] = 0;
      intArray0[8] = (-3528);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("VpT`;..qK", intArray0);
      long[] longArray0 = new long[9];
      longArray0[0] = (long) 0;
      longArray0[1] = (long) (-3096);
      longArray0[2] = (long) (-5469);
      longArray0[3] = (long) (-5469);
      longArray0[4] = (long) (-4551);
      longArray0[5] = (long) 0;
      longArray0[6] = (long) (-2771);
      longArray0[7] = (long) (-4551);
      longArray0[8] = (long) 0;
      // Undeclared exception!
      try { 
        toStringBuilder1.append(longArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToStringBuilder.setDefaultStyle((ToStringStyle) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The style must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("", toStringStyle0);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) toStringBuilder0;
      objectArray0[1] = (Object) " ";
      objectArray0[2] = (Object) "foIL";
      objectArray0[3] = (Object) "foIL";
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) toStringStyle0;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("foIL", objectArray0);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (-2000.29F);
      floatArray0[1] = (-1.0F);
      floatArray0[2] = (-4771.0F);
      floatArray0[3] = 3713.13F;
      floatArray0[4] = 0.0F;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("", floatArray0);
      // Undeclared exception!
      try { 
        toStringBuilder2.append(objectArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("", toStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.appendSuper("");
      short[] shortArray0 = new short[5];
      ToStringBuilder toStringBuilder2 = toStringBuilder1.appendToString("");
      toStringBuilder2.toString();
      char[] charArray0 = new char[9];
      charArray0[0] = ';';
      charArray0[1] = '+';
      charArray0[2] = ',';
      charArray0[3] = ':';
      charArray0[4] = 'e';
      charArray0[5] = 'm';
      charArray0[6] = 'm';
      charArray0[7] = ']';
      charArray0[8] = '!';
      // Undeclared exception!
      try { 
        toStringBuilder0.append(charArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      ToStringBuilder.getDefaultStyle();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) objectArray0;
      objectArray0[1] = (Object) "";
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 'U';
      floatArray0[1] = (float) 'U';
      floatArray0[2] = (float) 'U';
      floatArray0[3] = (float) 'U';
      floatArray0[4] = (float) 'U';
      floatArray0[0] = (float) 'U';
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte)122;
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) (byte)122;
      doubleArray0[1] = (double) 85.0F;
      doubleArray0[2] = (double) 85.0F;
      doubleArray0[3] = (double) 0.0F;
      doubleArray0[4] = (double) 'U';
      doubleArray0[6] = (double) 'U';
      byte byte0 = (byte) (-1);
      // Undeclared exception!
      try { 
        ToStringBuilder.reflectionToString(objectArray0[2]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Object passed in should not be null.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-42);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", byteArray0);
      long[] longArray0 = new long[4];
      longArray0[0] = (long) (byte)0;
      longArray0[1] = (long) (byte)0;
      longArray0[2] = (long) (byte) (-42);
      longArray0[3] = 0L;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", longArray0, true);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) toStringBuilder2;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) 0L;
      toStringBuilder2.append("NY+", objectArray0, true);
      toStringBuilder1.append("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", 0.0F);
      toStringBuilder2.append("NY+", true);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      ToStringBuilder toStringBuilder3 = toStringBuilder1.append(booleanArray0);
      toStringBuilder3.toString();
      ToStringBuilder toStringBuilder4 = toStringBuilder0.append("The style must not be null", booleanArray0, true);
      assertSame(toStringBuilder4, toStringBuilder3);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0, (StringBuffer) null);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", 494.2608151745372);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("&ucirc;", 1L);
      // Undeclared exception!
      try { 
        toStringBuilder2.append((Object) "");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 6283;
      Integer integer0 = new Integer(6283);
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("[", (Object) integer0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.appendToString((String) null);
      char char0 = 'k';
      // Undeclared exception!
      try { 
        toStringBuilder2.append('k');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("Cannot clone Cloneable type ", toStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.appendSuper("");
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("", (byte) (-31));
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short) (byte) (-31);
      shortArray0[1] = (short) (byte) (-31);
      shortArray0[2] = (short) (byte) (-31);
      toStringBuilder1.appendToString("Cannot clone Cloneable type ");
      shortArray0[3] = (short) (byte) (-31);
      shortArray0[4] = (short) (byte) (-31);
      // Undeclared exception!
      try { 
        toStringBuilder2.append(shortArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = null;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null, toStringStyle0);
      // Undeclared exception!
      try { 
        toStringBuilder0.append((String) null, true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("");
      char[] charArray0 = new char[3];
      charArray0[0] = ':';
      charArray0[1] = '@';
      charArray0[2] = '#';
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((String) null, charArray0);
      Object[] objectArray0 = new Object[0];
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(objectArray0);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append('E');
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("", 1L);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append(0.0);
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append("", 512);
      ToStringBuilder toStringBuilder7 = toStringBuilder5.append((double[]) null);
      toStringBuilder7.append('@');
      ToStringBuilder toStringBuilder8 = toStringBuilder2.append(objectArray0);
      toStringBuilder8.append("17B+(WI[=Q2S", (-1.0F));
      toStringBuilder6.append((short)0);
      ToStringBuilder toStringBuilder9 = toStringBuilder2.appendToString((String) null);
      assertSame(toStringBuilder9, toStringBuilder5);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("", toStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", (Object) toStringStyle0);
      int[] intArray0 = new int[0];
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("", intArray0);
      int int0 = (-1525);
      // Undeclared exception!
      try { 
        toStringBuilder2.append((-1525));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null, toStringStyle0);
      // Undeclared exception!
      try { 
        toStringBuilder0.append(1728.936832);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(424);
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(20);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0, stringBuffer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.appendAsObjectToString(integer0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append((String) null, (byte)0);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append((long[]) null);
      Integer integer1 = new Integer(424);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append((String) null, (Object) integer1);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append(0.0);
      toStringBuilder4.append("P'=+~G?0ZvNW.y5\"YP", (byte[]) null, true);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) (byte)0;
      floatArray0[1] = (float) 20;
      floatArray0[2] = (float) 20;
      floatArray0[3] = (float) 20;
      floatArray0[4] = (float) (byte)0;
      floatArray0[5] = (float) (byte)0;
      floatArray0[6] = (float) (byte)0;
      toStringBuilder4.append(".qy/@p3EK`", floatArray0, true);
      toStringBuilder5.append((String) null, true);
      toStringBuilder5.append((String) null, (short) (byte)0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2265;
      intArray0[1] = 424;
      intArray0[2] = (int) (byte)0;
      intArray0[3] = 20;
      intArray0[4] = 20;
      intArray0[5] = (int) (byte)0;
      intArray0[6] = 20;
      intArray0[7] = 424;
      toStringBuilder3.append((String) null, intArray0, true);
      assertEquals(102, stringBuffer0.length());
      
      Object object0 = new Object();
      String string0 = ToStringBuilder.reflectionToString(object0, toStringStyle0, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 6283;
      Integer integer0 = new Integer(6283);
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      String string0 = "[";
      StringBuffer stringBuffer0 = new StringBuffer("[");
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0, stringBuffer0);
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      // Undeclared exception!
      try { 
        toStringBuilder0.append(booleanArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ToStringStyle toStringStyle0 = null;
      int int0 = 512;
      StringBuffer stringBuffer0 = new StringBuffer(512);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("The style must not be null", (ToStringStyle) null, stringBuffer0);
      char[] charArray0 = new char[5];
      charArray0[0] = '\\';
      charArray0[1] = '4';
      charArray0[2] = 'k';
      charArray0[3] = 'M';
      char char0 = '>';
      charArray0[4] = '>';
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(charArray0);
      byte byte0 = (byte)0;
      toStringBuilder1.append((byte)0);
      // Undeclared exception!
      try { 
        ToStringBuilder.reflectionToString((Object) null, (ToStringStyle) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Object passed in should not be null.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, toStringStyle0);
      String string0 = "";
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", (char[]) null);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-2989.0107331759864);
      doubleArray0[2] = (-858.418606);
      doubleArray0[3] = 1378.709034;
      // Undeclared exception!
      try { 
        toStringBuilder1.append(doubleArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object object0 = new Object();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, recursiveToStringStyle0, stringBuffer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(1.0F);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append((boolean[]) null);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("55mS1aX%;C3l]uUU(", booleanArray0);
      String string0 = "3L=$xPV@yX|B<U\\bQ.+";
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) toStringBuilder3;
      objectArray0[1] = objectArray0[0];
      objectArray0[2] = (Object) stringBuffer0;
      // Undeclared exception!
      toStringBuilder3.append("3L=$xPV@yX|B<U\bQ.+", objectArray0, true);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ToStringStyle toStringStyle0 = null;
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ToStringBuilder.reflectionToString((String) null, (ToStringStyle) null, true, (Class<? super String>) class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Object passed in should not be null.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      ToStringBuilder.reflectionToString(object0, toStringStyle0, true);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(toStringStyle0);
      boolean[] booleanArray0 = new boolean[0];
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", booleanArray0, false);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append('c');
      int[] intArray0 = new int[0];
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("java.lang.Object@1[]", intArray0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 'c';
      doubleArray0[1] = (double) 'c';
      doubleArray0[2] = (double) 'c';
      doubleArray0[3] = (double) 'c';
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("", doubleArray0, false);
      long[] longArray0 = new long[7];
      longArray0[0] = (long) 'c';
      longArray0[1] = (long) 'c';
      longArray0[2] = (long) 'c';
      longArray0[3] = (long) 'c';
      longArray0[4] = (long) 'c';
      longArray0[5] = (long) 'c';
      longArray0[6] = (long) 'c';
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append(longArray0);
      Object object1 = new Object();
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append(object1);
      assertSame(toStringBuilder0, toStringBuilder6);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object object0 = new Object();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (-1013.4166F);
      floatArray0[1] = 0.0F;
      floatArray0[2] = 1.0F;
      floatArray0[3] = (-1.0F);
      floatArray0[4] = (-1610.775F);
      ToStringStyle toStringStyle0 = ToStringBuilder.getDefaultStyle();
      ToStringBuilder.reflectionToString(object0, toStringStyle0, true);
      floatArray0[5] = (-1341.3585F);
      floatArray0[6] = 1.0F;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(floatArray0);
      assertSame(toStringBuilder0, toStringBuilder1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 641;
      Integer integer0 = new Integer(641);
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0, stringBuffer0);
      String string0 = "";
      // Undeclared exception!
      try { 
        toStringBuilder0.append(0L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object object0 = new Object();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, recursiveToStringStyle0, stringBuffer0);
      int[] intArray0 = new int[7];
      intArray0[0] = 173;
      intArray0[1] = 5094;
      intArray0[2] = (-647);
      intArray0[3] = 0;
      intArray0[4] = (-4541);
      intArray0[5] = (-3370);
      intArray0[6] = (-254);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", intArray0, false);
      String string0 = "AX5E8b.aStW,6";
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("AX5E8b.aStW,6", booleanArray0, false);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.appendSuper("AX5E8b.aStW,6");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) recursiveToStringStyle0;
      objectArray0[1] = (Object) 5094;
      objectArray0[2] = (Object) false;
      objectArray0[3] = (Object) false;
      objectArray0[4] = (Object) toStringBuilder0;
      objectArray0[5] = objectArray0[4];
      objectArray0[6] = objectArray0[5];
      objectArray0[7] = (Object) toStringBuilder2;
      // Undeclared exception!
      toStringBuilder3.append("", objectArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, toStringStyle0);
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("||An\"Z2_2", booleanArray0);
      short short0 = (short)686;
      // Undeclared exception!
      try { 
        toStringBuilder1.append((short)686);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, toStringStyle0);
      long[] longArray0 = new long[7];
      longArray0[0] = 1225L;
      longArray0[1] = (-2057L);
      longArray0[2] = 0L;
      longArray0[3] = 0L;
      longArray0[4] = (-1324L);
      longArray0[5] = (-1L);
      longArray0[6] = 325L;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", longArray0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.appendAsObjectToString("_0A");
      Object object1 = toStringBuilder2.getObject();
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = " ";
      StringBuffer stringBuffer0 = new StringBuffer(" ");
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, multilineRecursiveToStringStyle0, stringBuffer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", 0.0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("", doubleArray0);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append((byte[]) null);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) multilineRecursiveToStringStyle0;
      objectArray0[1] = object0;
      objectArray0[2] = (Object) stringBuffer0;
      objectArray0[3] = (Object) toStringBuilder3;
      objectArray0[4] = object0;
      objectArray0[5] = (Object) toStringBuilder0;
      objectArray0[6] = (Object) " ";
      objectArray0[7] = (Object) toStringBuilder2;
      objectArray0[8] = (Object) " ";
      // Undeclared exception!
      toStringBuilder3.append(objectArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null, standardToStringStyle0, stringBuffer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(true);
      Object object0 = new Object();
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(object0);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.appendSuper("org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle");
      short[] shortArray0 = new short[0];
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle", shortArray0);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-753.0F);
      floatArray0[1] = 0.0F;
      floatArray0[2] = 261.4268F;
      floatArray0[3] = (-1.0F);
      floatArray0[4] = (-2260.1494F);
      floatArray0[5] = 0.0F;
      floatArray0[6] = 1.0F;
      floatArray0[7] = (-1.0F);
      floatArray0[8] = (-656.6474F);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append((String) null, floatArray0, true);
      toStringBuilder5.append((long[]) null);
      // Undeclared exception!
      try { 
        toStringBuilder3.appendAsObjectToString((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot get the toString of a null object
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((-886.4));
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) toStringBuilder1;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) toStringBuilder1;
      objectArray0[3] = (Object) toStringBuilder1;
      objectArray0[4] = (Object) toStringBuilder1;
      objectArray0[5] = (Object) toStringBuilder0;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(objectArray0);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append((double[]) null);
      assertSame(toStringBuilder0, toStringBuilder3);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null);
      short[] shortArray0 = new short[0];
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(shortArray0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append((Object) null);
      Object object0 = new Object();
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("", object0, true);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append((String) null, shortArray0);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append((-1));
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append((double[]) null);
      assertSame(toStringBuilder6, toStringBuilder3);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = new Object();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0);
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(booleanArray0);
      ToStringBuilder toStringBuilder2 = toStringBuilder0.append((Object) "b('m#J4j");
      assertSame(toStringBuilder2, toStringBuilder1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("e|Q#xN:Y*t+ ", toStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("e|Q#xN:Y*t+ ", '0');
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) toStringBuilder0;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("", objectArray0, false);
      long[] longArray0 = new long[2];
      longArray0[0] = (long) '0';
      longArray0[1] = (long) '0';
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("", longArray0);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("", 3102.9735421056894);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append((byte) (-77));
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append("e|Q#xN:Y*t+ ", objectArray0);
      assertSame(toStringBuilder1, toStringBuilder6);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, toStringStyle0);
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      charArray0[1] = '5';
      charArray0[2] = 'q';
      charArray0[3] = '.';
      charArray0[4] = '4';
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((String) null, charArray0, false);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.appendSuper((String) null);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("", (short)0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) '4';
      doubleArray0[1] = (double) 'q';
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("", doubleArray0, false);
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (short)0;
      intArray0[1] = (int) '4';
      intArray0[2] = (int) 'q';
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append(intArray0);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) '5';
      floatArray0[1] = (float) '.';
      floatArray0[2] = (float) 0;
      floatArray0[3] = (float) '4';
      floatArray0[4] = (float) '4';
      floatArray0[5] = (float) '4';
      floatArray0[6] = (float) 0;
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append("", floatArray0);
      assertSame(toStringBuilder6, toStringBuilder3);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((String) null, false);
      assertSame(toStringBuilder1, toStringBuilder0);
      assertSame(toStringBuilder0, toStringBuilder1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Object object0 = new Object();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.appendSuper("7tk7JYowK`H#rPq9eL");
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append((short)0);
      long[] longArray0 = new long[6];
      longArray0[0] = (long) (short)0;
      longArray0[1] = (long) 0;
      longArray0[2] = (long) 0;
      longArray0[3] = (long) 0;
      longArray0[4] = (long) 0;
      longArray0[5] = (long) (short)0;
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append((String) null, longArray0, true);
      char[] charArray0 = new char[1];
      charArray0[0] = ';';
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append((String) null, charArray0);
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append("7tk7JYowK`H#rPq9eL", (-1.0));
      assertSame(toStringBuilder1, toStringBuilder6);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Object object0 = new Object();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, recursiveToStringStyle0);
      toStringBuilder0.toString();
      long[] longArray0 = new long[3];
      toStringBuilder0.append((String) null, (int[]) null);
      longArray0[0] = (-667L);
      longArray0[1] = (-768L);
      longArray0[2] = 0L;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((String) null, longArray0);
      assertSame(toStringBuilder0, toStringBuilder1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object object0 = new Object();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Integer integer0 = new Integer(64);
      Class<Object> class0 = Object.class;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) integer0;
      objectArray0[1] = (Object) class0;
      objectArray0[2] = (Object) standardToStringStyle0;
      Object object1 = new Object();
      objectArray0[3] = object1;
      objectArray0[4] = (Object) stringBuffer0;
      Boolean boolean0 = new Boolean("\"J[ojgtP9mW5Bs/*");
      standardToStringStyle0.append(stringBuffer0, "", objectArray0, boolean0);
      ToStringBuilder.reflectionToString((Object) integer0, (ToStringStyle) standardToStringStyle0, true, (Class<? super Object>) class0);
      StringBuffer stringBuffer1 = new StringBuffer((CharSequence) "java.lang.Integer@2[value=64,value=64]]");
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, standardToStringStyle0, stringBuffer1);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.appendSuper("N%Fq");
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 64;
      floatArray0[1] = (float) 64;
      toStringBuilder1.append(floatArray0);
      assertEquals(71, stringBuffer1.length());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) ";vNEqRGQ5)X'";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) integer0;
      objectArray0[3] = (Object) toStringBuilder0;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(";vNEqRGQ5)X'", objectArray0);
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short) (-1476);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(";vNEqRGQ5)X'", shortArray0, false);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append((String) null, 0L);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append(objectArray0);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append(1.0F);
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append(";vNEqRGQ5)X'", (byte)54);
      assertSame(toStringBuilder6, toStringBuilder4);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((byte) (-113));
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("|_z>v", 2020L);
      ToStringStyle toStringStyle0 = toStringBuilder2.getStyle();
      assertNotNull(toStringStyle0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(") :EY.f-Q:E'o");
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(") :EY.f-Q:E'o", (Object) ") :EY.f-Q:E'o", false);
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(") :EY.f-Q:E'o", booleanArray0, false);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.appendToString(") :EY.f-Q:E'o");
      int[] intArray0 = new int[3];
      intArray0[0] = 512;
      intArray0[1] = 156;
      intArray0[2] = 0;
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append((String) null, intArray0);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.appendAsObjectToString(toStringBuilder2);
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append("", (byte)0);
      assertSame(toStringBuilder6, toStringBuilder4);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, toStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((Object) toStringStyle0);
      ToStringBuilder.setDefaultStyle(toStringStyle0);
      // Undeclared exception!
      try { 
        toStringBuilder1.appendToString("N4b?3f]yf`.-t[75eVP");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 14, end 6, s.length() 19
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("oUF7~n^V", standardToStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("N", 0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append((short) (-290));
      Integer integer0 = new Integer(0);
      Class<Object> class0 = Object.class;
      String string0 = ToStringBuilder.reflectionToString(integer0, (ToStringStyle) standardToStringStyle0, false, (Class<? super Integer>) class0);
      String string1 = toStringBuilder2.build();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Integer integer0 = new Integer(34);
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(34);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0, stringBuffer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", (double) 34);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append((Object) stringBuffer0);
      boolean[] booleanArray0 = new boolean[0];
      toStringBuilder1.append("", booleanArray0);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append('c');
      toStringBuilder0.append((-327L));
      toStringBuilder3.append("7!nO", (byte)51);
      ToStringBuilder toStringBuilder4 = toStringBuilder1.append("", (boolean[]) null, false);
      ToStringBuilder toStringBuilder5 = toStringBuilder2.append("", (short) (-2262));
      char[] charArray0 = new char[5];
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = 'c';
      charArray0[4] = 'c';
      toStringBuilder2.append(charArray0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) integer0;
      objectArray0[1] = (Object) toStringBuilder4;
      toStringBuilder5.append(objectArray0);
      assertEquals(245, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, multilineRecursiveToStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(".:Kg'`lD", (byte) (-1));
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(".:Kg'`lD", 2288L);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) (byte) (-1);
      doubleArray0[3] = (double) 2288L;
      doubleArray0[4] = (double) 2288L;
      doubleArray0[5] = (double) 0;
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("oxr2$r9\"h00I<d", doubleArray0, true);
      char[] charArray0 = new char[0];
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("", charArray0, false);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append((Object) toStringBuilder2);
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append((short) (-3665));
      assertSame(toStringBuilder6, toStringBuilder5);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null, (ToStringStyle) null, (StringBuffer) null);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((-4151L));
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("UwSzs?", (char[]) null, true);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("UwSzs?", (char[]) null);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append((Object) null);
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append("6Tp3=>dc>'", booleanArray0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (-4151L);
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append("9T:}5NV4xMNU&27:", floatArray0, true);
      assertSame(toStringBuilder1, toStringBuilder6);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Object object0 = new Object();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, (ToStringStyle) null);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(true);
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short) (-1);
      shortArray0[1] = (short) (-236);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append((String) null, shortArray0);
      Object[] objectArray0 = new Object[0];
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append(objectArray0);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("{}HUovOd", (double[]) null);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append((float[]) null);
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append((int[]) null);
      assertSame(toStringBuilder6, toStringBuilder1);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(false);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.appendSuper("[Lr=WNe%");
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("VytNZ", (byte[]) null, true);
      long[] longArray0 = new long[5];
      longArray0[0] = (-1L);
      longArray0[1] = (-260L);
      longArray0[2] = (-1L);
      longArray0[3] = (-1981L);
      longArray0[4] = (-614L);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append((String) null, longArray0, true);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append("elE;vUD", (byte[]) null);
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append('}');
      assertSame(toStringBuilder1, toStringBuilder6);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "";
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("", toStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.appendSuper("");
      byte byte0 = (byte)0;
      // Undeclared exception!
      try { 
        toStringBuilder1.append((byte)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("", toStringStyle0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(byteArray0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.appendSuper("");
      StringBuffer stringBuffer0 = toStringBuilder2.getStringBuffer();
      assertEquals(10, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ToStringBuilder.reflectionToString((Object) "");
      Object object0 = new Object();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0);
      boolean[] booleanArray0 = new boolean[0];
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", booleanArray0, true);
      assertSame(toStringBuilder0, toStringBuilder1);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("b:<R7t1=", recursiveToStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((short)3006);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("b:<R7t1=", 'i');
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("$ZK", 0.0);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.appendAsObjectToString(toStringBuilder2);
      byte[] byteArray0 = new byte[2];
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 'i';
      floatArray0[1] = (float) (short)3006;
      floatArray0[2] = (float) (byte)0;
      floatArray0[3] = (float) (short)3006;
      floatArray0[4] = (float) (short)3006;
      floatArray0[5] = (float) 'i';
      floatArray0[6] = (float) (byte)0;
      floatArray0[7] = (float) 'i';
      toStringBuilder2.append((String) null, floatArray0);
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append("$ZK", byteArray0);
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append("", (Object) "");
      assertSame(toStringBuilder6, toStringBuilder5);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Object object0 = new Object();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0);
      boolean[] booleanArray0 = new boolean[2];
      long[] longArray0 = new long[0];
      toStringBuilder0.append(longArray0);
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("{D<RF79:H0QSy>*4#Hl", booleanArray0, false);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("{D<RF79:H0QSy>*4#Hl", (-239.2809F));
      double[] doubleArray0 = new double[0];
      toStringBuilder2.append("%c#*48<`9z9wS7", doubleArray0);
      toStringBuilder1.append(0L);
      ToStringBuilder toStringBuilder3 = toStringBuilder1.append('A');
      assertSame(toStringBuilder0, toStringBuilder3);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringBuilder.getDefaultStyle();
      StringBuffer stringBuffer0 = new StringBuffer(995);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("The style must not be null", toStringStyle0, stringBuffer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-119);
      byteArray0[4] = (byte) (-61);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)1;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("The style must not be null", byteArray0, false);
      toStringBuilder2.append((byte)52);
      assertEquals(64, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("ic4T6-&G|oJ!U&|4");
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0, stringBuffer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("ic4T6-&G|oJ!U&|4", (byte)0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("%9c&<+]{!g,_1\"", '!');
      double[] doubleArray0 = new double[0];
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append(doubleArray0);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append((short[]) null);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append((Object) stringBuffer0);
      toStringBuilder5.append('&');
      assertEquals(167, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      ToStringBuilder.reflectionToString(object0, toStringStyle0);
      Integer integer0 = new Integer(128);
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0, stringBuffer0);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 128;
      floatArray0[1] = (float) 128;
      floatArray0[2] = (float) 128;
      floatArray0[3] = (float) 128;
      floatArray0[4] = (float) 128;
      floatArray0[5] = (float) 128;
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(floatArray0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append((Object[]) null);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("java.lang.Object@1[]", (double) 128.0F);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("java.lang.Object@1[]", (int[]) null, false);
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short) (-1656);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append("{", shortArray0, true);
      toStringBuilder5.append("", (long) (short) (-1656));
      assertEquals(92, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Object object0 = new Object();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(0);
      long[] longArray0 = new long[7];
      char[] charArray0 = new char[7];
      charArray0[0] = '\"';
      charArray0[2] = '0';
      charArray0[3] = '~';
      charArray0[4] = '#';
      charArray0[5] = '\"';
      charArray0[6] = 'Y';
      toStringBuilder0.append("org.apache.commons.lang3.builder.ToStringBuilder", charArray0);
      longArray0[0] = (long) 0;
      longArray0[1] = (long) 0;
      longArray0[2] = (long) 0;
      longArray0[3] = (long) 0;
      longArray0[4] = (long) 0;
      longArray0[5] = (long) 0;
      longArray0[6] = (long) 0;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("&phi;", longArray0);
      Object[] objectArray0 = new Object[0];
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append(objectArray0);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("&phi;", (short)971);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append((double[]) null);
      float[] floatArray0 = new float[0];
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      ToStringBuilder.reflectionToString(object0, (ToStringStyle) standardToStringStyle0);
      toStringBuilder5.append("&phi;", floatArray0);
      ToStringBuilder toStringBuilder6 = toStringBuilder4.append((Object) toStringBuilder5);
      assertSame(toStringBuilder3, toStringBuilder6);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("The style must not be null");
      String string0 = ToStringBuilder.reflectionToString((Object) "PEaiFc=w|[\"W#9^:");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("");
      char[] charArray0 = new char[3];
      charArray0[0] = 'G';
      charArray0[1] = '@';
      charArray0[2] = '#';
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((String) null, charArray0);
      Object[] objectArray0 = new Object[0];
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(objectArray0);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append('E');
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("", 1L);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append(0.0);
      ToStringBuilder toStringBuilder6 = toStringBuilder1.appendSuper((String) null);
      toStringBuilder5.append('@');
      ToStringBuilder toStringBuilder7 = toStringBuilder2.append(objectArray0);
      toStringBuilder7.append("17B+(WI[=Q2S", (-1.0F));
      ToStringBuilder toStringBuilder8 = toStringBuilder6.append((short)0);
      ToStringBuilder toStringBuilder9 = toStringBuilder2.appendToString((String) null);
      assertSame(toStringBuilder9, toStringBuilder8);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      ToStringBuilder.setDefaultStyle(toStringStyle0);
      Integer integer0 = new Integer(1493);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0);
      short[] shortArray0 = new short[0];
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("-", shortArray0, true);
      ToStringBuilder.setDefaultStyle(toStringStyle0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("org.apache.commons.lang3.builder.ToStringBuilder", (boolean[]) null);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.appendSuper("-");
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append(1493);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append((-305.49024435));
      toStringBuilder5.append('Z');
      long[] longArray0 = new long[2];
      longArray0[0] = (long) 'Z';
      longArray0[1] = 0L;
      toStringBuilder1.append(longArray0);
      byte[] byteArray0 = new byte[0];
      toStringBuilder3.append("", byteArray0);
      toStringBuilder2.append("=", shortArray0);
      toStringBuilder3.append("tv,<[+Ct&", (boolean[]) null, true);
      ToStringBuilder toStringBuilder6 = toStringBuilder3.append((-49.976F));
      assertSame(toStringBuilder6, toStringBuilder3);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Object object0 = new Object();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, (ToStringStyle) null);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("th$q>k,mO%#{&~dyI", false);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (-375.01062F);
      floatArray0[1] = (-1645.2F);
      floatArray0[2] = (-1766.2308F);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(floatArray0);
      toStringBuilder2.appendAsObjectToString(object0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-60);
      byteArray0[4] = (byte) (-62);
      byteArray0[5] = (byte)41;
      byteArray0[8] = (byte)0;
      double[] doubleArray0 = new double[20];
      doubleArray0[0] = (double) (-1766.2308F);
      doubleArray0[1] = (-2069.27336);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Integer integer0 = new Integer(424);
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(20);
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(integer0, toStringStyle0, stringBuffer0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.appendAsObjectToString(integer0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append((String) null, (byte)0);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append((long[]) null);
      Integer integer1 = new Integer(424);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append((String) null, (Object) integer1);
      toStringBuilder4.append("P'=+~G?0ZvNW.y5\"YP", (byte[]) null, true);
      toStringBuilder0.append((String) null, true);
      toStringBuilder4.append((String) null, (short) (byte)0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2265;
      intArray0[1] = 424;
      intArray0[2] = (int) (byte)0;
      intArray0[3] = 20;
      intArray0[4] = 20;
      intArray0[5] = (int) (byte)0;
      intArray0[6] = 20;
      toStringBuilder3.append((String) null, intArray0, true);
      assertEquals(65, stringBuffer0.length());
      
      Object object0 = new Object();
      String string0 = ToStringBuilder.reflectionToString(object0, toStringStyle0, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Object object0 = new Object();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(" ");
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(" ", multilineRecursiveToStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("", 0.0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.appendToString("");
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append((byte[]) null);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) multilineRecursiveToStringStyle0;
      objectArray0[1] = object0;
      objectArray0[2] = (Object) stringBuffer0;
      objectArray0[4] = object0;
      objectArray0[5] = (Object) toStringBuilder0;
      objectArray0[6] = (Object) " ";
      objectArray0[8] = (Object) " ";
      char[] charArray0 = new char[2];
      charArray0[0] = 'R';
      toStringBuilder3.append((short)145);
      toStringBuilder3.getStringBuffer();
      charArray0[1] = 'Z';
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append(" ", charArray0, false);
      StringBuffer stringBuffer1 = toStringBuilder4.getStringBuffer();
      assertEquals(55, stringBuffer1.length());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ToStringBuilder toStringBuilder0 = new ToStringBuilder((Object) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-42);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", byteArray0);
      long[] longArray0 = new long[4];
      longArray0[0] = (long) (byte)0;
      longArray0[1] = (long) (byte)0;
      longArray0[2] = (long) (byte) (-42);
      longArray0[3] = 0L;
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", longArray0, true);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) toStringBuilder2;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) 0L;
      toStringBuilder2.append("NY+", objectArray0, true);
      toStringBuilder1.append("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", 0.0F);
      toStringBuilder2.append("NY+", true);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      ToStringBuilder toStringBuilder3 = toStringBuilder1.append(booleanArray0);
      ToStringBuilder toStringBuilder4 = toStringBuilder0.append("The style must not be null", booleanArray0, true);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append("The style must not be null", (int[]) null);
      assertSame(toStringBuilder5, toStringBuilder3);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "org.apache.commons.lang3.builder.ToStringBuilder";
      objectArray0[1] = objectArray0[0];
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      // Undeclared exception!
      try { 
        ToStringBuilder.setDefaultStyle((ToStringStyle) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The style must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Object object0 = new Object();
      float[] floatArray0 = new float[4];
      char[] charArray0 = new char[3];
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, toStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append("org.apache.commons.lang3.builder.ToStringBuilder", (double[]) null);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(1144L);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("|2@pQKjZfp75)", (short) (-854));
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append(false);
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append("", false);
      ToStringBuilder toStringBuilder6 = toStringBuilder1.append((double[]) null);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 1144L;
      floatArray0[1] = (float) (short) (-854);
      floatArray0[3] = (float) 1144L;
      floatArray0[5] = (float) (short) (-854);
      toStringBuilder5.append("", floatArray0, false);
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)0;
      toStringBuilder0.getObject();
      String string0 = toStringBuilder6.build();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringBuilder.getDefaultStyle();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("", toStringStyle0);
      float[] floatArray0 = new float[4];
      floatArray0[1] = 0.0F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = (-2750.33F);
      Object object0 = new Object();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte) (-100);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append((byte)51);
      assertSame(toStringBuilder0, toStringBuilder1);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Object object0 = new Object();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      ToStringBuilder toStringBuilder0 = new ToStringBuilder(object0, multilineRecursiveToStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.appendSuper("5BGFU~&Fpf");
      short[] shortArray0 = new short[0];
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append(shortArray0);
      float[] floatArray0 = new float[4];
      floatArray0[0] = 4240.0F;
      floatArray0[1] = 2475.771F;
      floatArray0[2] = (-1.0F);
      floatArray0[3] = 1.0F;
      Object[] objectArray0 = new Object[0];
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)87;
      byteArray0[3] = (byte) (-107);
      byteArray0[4] = (byte) (-16);
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)0;
      long[] longArray0 = new long[2];
      longArray0[0] = (-2271L);
      char[] charArray0 = new char[0];
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append(charArray0);
      assertSame(toStringBuilder2, toStringBuilder3);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      Class<Object> class0 = Object.class;
      ToStringBuilder.reflectionToString(object0, toStringStyle0, false, (Class<? super Object>) class0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte)11;
      double[] doubleArray0 = new double[0];
      long[] longArray0 = new long[6];
      longArray0[1] = (long) (byte)11;
      longArray0[2] = (long) (byte) (-99);
      longArray0[3] = (long) (byte)11;
      longArray0[5] = (long) (byte)11;
      ToStringBuilder toStringBuilder0 = new ToStringBuilder("", toStringStyle0);
      ToStringBuilder toStringBuilder1 = toStringBuilder0.append(longArray0);
      ToStringBuilder toStringBuilder2 = toStringBuilder1.append("org.apache.commons.lang3.builder.ToStringBuilder", doubleArray0, false);
      ToStringBuilder toStringBuilder3 = toStringBuilder2.append("org.apache.commons.lang3.builder.ToStringBuilder", 2823);
      ToStringBuilder toStringBuilder4 = toStringBuilder3.append("", 'Q');
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)11;
      ToStringBuilder toStringBuilder5 = toStringBuilder4.append(intArray0);
      Object[] objectArray0 = new Object[6];
      Object object1 = new Object();
      objectArray0[1] = (Object) toStringBuilder5;
      objectArray0[2] = (Object) 0L;
      objectArray0[3] = (Object) "java.lang.Object@1[]";
      objectArray0[4] = (Object) "java.lang.Object@1[]";
      ToStringBuilder toStringBuilder6 = toStringBuilder5.append("", objectArray0);
      assertSame(toStringBuilder2, toStringBuilder6);
  }
}
