/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 02:10:34 GMT 2019
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.BitField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BitField_ESTest extends BitField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BitField bitField0 = new BitField((-2919));
      short short0 = bitField0.setShortValue((short)1, (short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BitField bitField0 = new BitField((-2103));
      boolean boolean0 = bitField0.isAllSet(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BitField bitField0 = new BitField((-2029));
      boolean boolean0 = bitField0.isSet((-1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BitField bitField0 = new BitField((-3712));
      int int0 = bitField0.getValue((-2459));
      assertEquals((-32), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.setValue(2028, (-120));
      assertEquals(2028, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BitField bitField0 = new BitField((-3712));
      int int0 = bitField0.setValue((short) (-346), (-3637));
      assertEquals((-462938), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BitField bitField0 = new BitField((-1618));
      short short0 = bitField0.setShortValue((short) (-1), (short) (-1));
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortBoolean((short)0, true);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShort((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShort((short)1);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BitField bitField0 = new BitField((-1234));
      byte byte0 = bitField0.setByteBoolean((byte)0, false);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BitField bitField0 = new BitField((-1489));
      byte byte0 = bitField0.setByteBoolean((byte) (-56), false);
      assertEquals((byte) (-64), byte0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BitField bitField0 = new BitField((-512));
      byte byte0 = bitField0.setByte((byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      byte byte0 = bitField0.setByte((byte)0);
      assertEquals((byte) (-1), byte0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BitField bitField0 = new BitField((-1489));
      int int0 = bitField0.setBoolean(0, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BitField bitField0 = new BitField((-2919));
      int int0 = bitField0.setBoolean((-2743), false);
      assertEquals(320, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.set(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.set(2521);
      assertEquals(2521, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.getValue((-254));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BitField bitField0 = new BitField((-1618));
      int int0 = bitField0.getValue(1782);
      assertEquals(83, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BitField bitField0 = new BitField((-2029));
      short short0 = bitField0.getShortValue((byte)1);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      short short0 = bitField0.getShortValue((short) (-1));
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BitField bitField0 = new BitField((-3371));
      short short0 = bitField0.getShortRawValue((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BitField bitField0 = new BitField((-512));
      short short0 = bitField0.getShortRawValue((short) (-776));
      assertEquals((short) (-1024), short0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BitField bitField0 = new BitField((-2029));
      int int0 = bitField0.getRawValue(2020);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BitField bitField0 = new BitField((-1618));
      int int0 = bitField0.getRawValue(83);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BitField bitField0 = new BitField((-2103));
      short short0 = bitField0.clearShort((short) (-448));
      assertEquals((short)2048, short0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BitField bitField0 = new BitField(3296);
      short short0 = bitField0.clearShort((short) (-1832));
      assertEquals((short) (-4072), short0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      byte byte0 = bitField0.clearByte((byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.clearByte((byte) (-114));
      assertEquals((byte) (-114), byte0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BitField bitField0 = new BitField((-2029));
      int int0 = bitField0.clear((-2032));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.clear((-254));
      assertEquals((-254), int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BitField bitField0 = new BitField((-2029));
      int int0 = bitField0.set((-12));
      assertEquals((-9), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BitField bitField0 = new BitField((-2029));
      int int0 = bitField0.clear((-12));
      assertEquals(2020, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BitField bitField0 = new BitField((-2029));
      byte byte0 = bitField0.setByte((byte)1);
      assertEquals((byte)19, byte0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BitField bitField0 = new BitField((-2029));
      int int0 = bitField0.setValue(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      short short0 = bitField0.clearShort((short)1);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BitField bitField0 = new BitField((-2919));
      int int0 = bitField0.getRawValue((-1384));
      assertEquals((-3944), int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByteBoolean((byte)119, false);
      assertEquals((byte)119, byte0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortBoolean((byte)119, true);
      assertEquals((short)119, short0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.setBoolean((short) (-2809), true);
      assertEquals((-2809), int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      boolean boolean0 = bitField0.isAllSet((byte)119);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BitField bitField0 = new BitField(1134);
      boolean boolean0 = bitField0.isAllSet((byte)49);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BitField bitField0 = new BitField(2916);
      boolean boolean0 = bitField0.isSet((short)184);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BitField bitField0 = new BitField(1134);
      boolean boolean0 = bitField0.isSet((byte)17);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BitField bitField0 = new BitField(1134);
      short short0 = bitField0.getShortRawValue((byte)127);
      assertEquals((short)110, short0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShort((short) (-2809));
      assertEquals((short) (-2809), short0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BitField bitField0 = new BitField(1134);
      byte byte0 = bitField0.clearByte((byte)49);
      assertEquals((byte)17, byte0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BitField bitField0 = new BitField(1134);
      short short0 = bitField0.getShortValue((byte)17);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BitField bitField0 = new BitField(2916);
      short short0 = bitField0.setShortValue((short)184, (short)184);
      assertEquals((short)760, short0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortBoolean((short) (-2809), false);
      assertEquals((short) (-2809), short0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BitField bitField0 = new BitField(1134);
      byte byte0 = bitField0.setByteBoolean((byte)49, true);
      assertEquals((byte)127, byte0);
  }
}
