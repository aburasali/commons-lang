/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 01:47:44 GMT 2019
 */

package org.apache.commons.lang3.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Set;
import org.apache.commons.lang3.exception.DefaultExceptionContext;
import org.apache.commons.lang3.tuple.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultExceptionContext_ESTest extends DefaultExceptionContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      defaultExceptionContext0.setContextValue("Pe!9cC/1L", (Object) null);
      List<Pair<String, Object>> list0 = defaultExceptionContext0.getContextEntries();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.setContextValue("", "");
      String string0 = defaultExceptionContext1.getFormattedExceptionMessage("");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.setContextValue("\t[", (Object) null);
      String string0 = defaultExceptionContext1.getFormattedExceptionMessage("\t[");
      assertEquals("\t[\nException Context:\n\t[1:\t[=null]\n---------------------------------", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      String string0 = defaultExceptionContext0.getFormattedExceptionMessage("djV");
      assertEquals("djV", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      String string0 = defaultExceptionContext0.getFormattedExceptionMessage((String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      defaultExceptionContext0.setContextValue("", "");
      Set<String> set0 = defaultExceptionContext0.getContextLabels();
      assertEquals(1, set0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      Set<String> set0 = defaultExceptionContext0.getContextLabels();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      defaultExceptionContext0.setContextValue("", "");
      Object object0 = defaultExceptionContext0.getFirstContextValue("");
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.setContextValue("", "");
      Object object0 = defaultExceptionContext1.getFirstContextValue("djV");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      Object object0 = new Object();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.setContextValue((String) null, object0);
      List<Object> list0 = defaultExceptionContext1.getContextValues((String) null);
      assertTrue(list0.contains(object0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.setContextValue("\t[", (Object) null);
      List<Object> list0 = defaultExceptionContext1.getContextValues((String) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      defaultExceptionContext0.setContextValue("", "");
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.setContextValue("", "djV");
      assertSame(defaultExceptionContext1, defaultExceptionContext0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.setContextValue("\t[", (Object) null);
      Object object0 = new Object();
      DefaultExceptionContext defaultExceptionContext2 = defaultExceptionContext0.setContextValue((String) null, object0);
      assertSame(defaultExceptionContext2, defaultExceptionContext1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      List<Pair<String, Object>> list0 = defaultExceptionContext0.getContextEntries();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.addContextValue("", "");
      assertSame(defaultExceptionContext0, defaultExceptionContext1);
  }
}
